{
  "metadata": {
    "base_url": "https://apaleo.dev/",
    "scrape_date": "2025-06-23T15:18:32.643781",
    "total_pages": 50,
    "failed_urls": []
  },
  "navigation_outline": [
    {
      "title": "Introduction",
      "level": 1,
      "url": "https://apaleo.dev/index.html",
      "children": []
    },
    {
      "title": "Build Apps & Integrations",
      "level": 1,
      "url": null,
      "children": [
        {
          "title": "Authentication and authorization",
          "level": 2,
          "url": "https://apaleo.dev/guides/oauth-connection/authentication.html"
        },
        {
          "title": "OAuth 2.0 and OpenID connect basics",
          "level": 2,
          "url": "https://apaleo.dev/guides/oauth-connection/oauth-openid.html"
        },
        {
          "title": "Which OAuth 2.0 grant works best for me?",
          "level": 2,
          "url": "https://apaleo.dev/guides/oauth-connection/which-oauth.html"
        },
        {
          "title": "Register an app",
          "level": 2,
          "url": null,
          "children": [
            {
              "title": "Register an OAuth connect client (Apaleo store) app",
              "level": 3,
              "url": "https://apaleo.dev/guides/oauth-connection/register-connect-client-app.html"
            },
            {
              "title": "Register an OAuth simple client (custom) app",
              "level": 3,
              "url": "https://apaleo.dev/guides/oauth-connection/register-simple-client-app.html"
            }
          ]
        },
        {
          "title": "OAuth 2.0: Authorization code grant Flow",
          "level": 2,
          "url": "https://apaleo.dev/guides/oauth-connection/auth-code-grant.html"
        },
        {
          "title": "OAuth 2.0: Refresh token grant flow",
          "level": 2,
          "url": "https://apaleo.dev/guides/oauth-connection/refresh-token.html"
        },
        {
          "title": "OAuth 2.0: Client credentials grant flow",
          "level": 2,
          "url": "https://apaleo.dev/guides/oauth-connection/simple-client.html"
        },
        {
          "title": "OAuth 2.0: Best practices",
          "level": 2,
          "url": "https://apaleo.dev/guides/oauth-connection/best-practices.html"
        },
        {
          "title": "Publish your Apaleo connect (auth code grant) app",
          "level": 2,
          "url": null,
          "children": [
            {
              "title": "Create a landing page",
              "level": 3,
              "url": "https://apaleo.dev/guides/oauth-connection/create-landing-page.html"
            },
            {
              "title": "Review the consent screen",
              "level": 3,
              "url": "https://apaleo.dev/guides/oauth-connection/review-consent-screen.html"
            },
            {
              "title": "Create a success page",
              "level": 3,
              "url": "https://apaleo.dev/guides/oauth-connection/create-success-page.html"
            }
          ]
        },
        {
          "title": "Share a simple client app (developer accounts only)",
          "level": 2,
          "url": "https://apaleo.dev/guides/oauth-connection/simple-client-copy.html"
        },
        {
          "title": "Connect and disconnect an app",
          "level": 2,
          "url": "https://apaleo.dev/guides/oauth-connection/connect-disconnect-app.html"
        },
        {
          "title": "Working with APIs",
          "level": 2,
          "url": "https://apaleo.dev/guides/oauth-connection/working-with-api.html"
        }
      ]
    },
    {
      "title": "API Reference",
      "level": 1,
      "url": null,
      "children": [
        {
          "title": "Overview",
          "level": 2,
          "url": "https://apaleo.dev/guides/api/overview.html"
        },
        {
          "title": "Authentication",
          "level": 2,
          "url": "https://apaleo.dev/guides/api/authentication.html"
        },
        {
          "title": "Versioning",
          "level": 2,
          "url": "https://apaleo.dev/guides/api/versioning.html"
        },
        {
          "title": "Rate limiting",
          "level": 2,
          "url": "https://apaleo.dev/guides/api/rate-limiting.html"
        },
        {
          "title": "Pagination",
          "level": 2,
          "url": "https://apaleo.dev/guides/api/pagination.html"
        },
        {
          "title": "Endpoints",
          "level": 2,
          "url": "https://apaleo.dev/guides/api/endpoints.html"
        },
        {
          "title": "Scopes",
          "level": 2,
          "url": "https://apaleo.dev/guides/api/scopes.html"
        },
        {
          "title": "HTTP status codes and Error types",
          "level": 2,
          "url": "https://apaleo.dev/guides/api/errors.html"
        },
        {
          "title": "Troubleshooting",
          "level": 2,
          "url": "https://apaleo.dev/guides/api/trouble-shooting.html"
        }
      ]
    },
    {
      "title": "Webhooks",
      "level": 1,
      "url": null,
      "children": [
        {
          "title": "Overview",
          "level": 2,
          "url": "https://apaleo.dev/guides/webhook/overview.html"
        },
        {
          "title": "Configure webhooks",
          "level": 2,
          "url": "https://apaleo.dev/guides/webhook/configuration.html"
        },
        {
          "title": "Create a new subscription",
          "level": 2,
          "url": "https://apaleo.dev/guides/webhook/create-subscription.html"
        },
        {
          "title": "Get a subscription",
          "level": 2,
          "url": "https://apaleo.dev/guides/webhook/get-subscription.html"
        },
        {
          "title": "Update a subscription",
          "level": 2,
          "url": "https://apaleo.dev/guides/webhook/update-subscription.html"
        },
        {
          "title": "Delete a subscription",
          "level": 2,
          "url": "https://apaleo.dev/guides/webhook/delete-subscription.html"
        },
        {
          "title": "Webhooks payload",
          "level": 2,
          "url": "https://apaleo.dev/guides/webhook/webhooks-payload.html"
        },
        {
          "title": "Best practices for webhooks",
          "level": 2,
          "url": "https://apaleo.dev/guides/webhook/best-practices.html"
        }
      ]
    },
    {
      "title": "Apaleo One / UI Integration",
      "level": 1,
      "url": null,
      "children": [
        {
          "title": "Overview",
          "level": 2,
          "url": "https://apaleo.dev/guides/apaleo-one/overview.html"
        },
        {
          "title": "Server-side details",
          "level": 2,
          "url": "https://apaleo.dev/guides/apaleo-one/server-details.html"
        },
        {
          "title": "Client-side functionalities",
          "level": 2,
          "url": "https://apaleo.dev/guides/apaleo-one/client-details.html"
        },
        {
          "title": "Guest details CRM",
          "level": 2,
          "url": "https://apaleo.dev/guides/apaleo-one/guest-details-crm.html"
        },
        {
          "title": "iFrame responsive height",
          "level": 2,
          "url": "https://apaleo.dev/guides/apaleo-one/iframe-resizer.html"
        },
        {
          "title": "Third-Party Cookies",
          "level": 2,
          "url": "https://apaleo.dev/guides/apaleo-one/third-party-cookies.html"
        }
      ]
    },
    {
      "title": "Apaleo Pay Integration",
      "level": 1,
      "url": null,
      "children": [
        {
          "title": "Overview",
          "level": 2,
          "url": "https://apaleo.dev/guides/pay-integration/overview.html"
        },
        {
          "title": "Setup and configuration",
          "level": 2,
          "url": "https://apaleo.dev/guides/pay-integration/setup.html"
        },
        {
          "title": "Test Apaleo Pay integration",
          "level": 2,
          "url": "https://apaleo.dev/guides/pay-integration/test-accounts.html"
        },
        {
          "title": "Go live with Apaleo Pay",
          "level": 2,
          "url": "https://apaleo.dev/guides/pay-integration/go-live.html"
        },
        {
          "title": "Accept payments",
          "level": 2,
          "url": "https://apaleo.dev/guides/pay-integration/pre-auth.html"
        },
        {
          "title": "Terminal payments",
          "level": 2,
          "url": "https://apaleo.dev/guides/pay-integration/pos-payment.html"
        },
        {
          "title": "Make a payment",
          "level": 2,
          "url": "https://apaleo.dev/guides/pay-integration/payment.html"
        },
        {
          "title": "Pay by link",
          "level": 2,
          "url": "https://apaleo.dev/guides/pay-integration/pay-by-link.html"
        },
        {
          "title": "Make payments to a folio",
          "level": 2,
          "url": "https://apaleo.dev/guides/pay-integration/pay-folio.html"
        },
        {
          "title": "Read transaction details (PSP)",
          "level": 2,
          "url": "https://apaleo.dev/guides/pay-integration/psp-reference.html"
        },
        {
          "title": "Read transaction details (merchant reference)",
          "level": 2,
          "url": "https://apaleo.dev/guides/pay-integration/transaction.html"
        },
        {
          "title": "Payment account",
          "level": 2,
          "url": "https://apaleo.dev/guides/pay-integration/payment-account.html"
        },
        {
          "title": "Booking - examples",
          "level": 2,
          "url": "https://apaleo.dev/guides/pay-integration/booking-examples.html"
        }
      ]
    },
    {
      "title": "Integration Examples",
      "level": 1,
      "url": null,
      "children": [
        {
          "title": "Overview",
          "level": 2,
          "url": "https://apaleo.dev/guides/business-cases/overview.html"
        },
        {
          "title": "Channel integration",
          "level": 2,
          "url": null,
          "children": [
            {
              "title": "Overview",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/channel-integration/overview.html"
            },
            {
              "title": "The basics",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/channel-integration/basics.html"
            },
            {
              "title": "Map rate plans",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/channel-integration/rates.html"
            },
            {
              "title": "Create ARI subscriptions",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/channel-integration/ari-subscriptions.html"
            },
            {
              "title": "Get ARI data",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/channel-integration/ari-data.html"
            },
            {
              "title": "Send bookings",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/channel-integration/send-bookings.html"
            },
            {
              "title": "Modify bookings",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/channel-integration/modify-bookings.html"
            },
            {
              "title": "Get certified",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/channel-integration/get-certified.html"
            },
            {
              "title": "Create onboarding guide",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/channel-integration/onboarding-guide.html"
            },
            {
              "title": "Troubleshooting",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/channel-integration/trouble-shooting.html"
            }
          ]
        },
        {
          "title": "IBE integration",
          "level": 2,
          "url": null,
          "children": [
            {
              "title": "Overview",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/ibe/overview.html"
            },
            {
              "title": "Get offers",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/ibe/get-offers.html"
            },
            {
              "title": "Get the money",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/ibe/get-the-money.html"
            },
            {
              "title": "Create the booking",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/ibe/create-the-booking.html"
            },
            {
              "title": "Get certified",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/ibe/get-certified.html"
            }
          ]
        },
        {
          "title": "Point of sale integration",
          "level": 2,
          "url": null,
          "children": [
            {
              "title": "Overview",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/pos-integration/overview.html"
            },
            {
              "title": "The basics",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/pos-integration/basics.html"
            },
            {
              "title": "Setup and configuration",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/pos-integration/setup.html"
            },
            {
              "title": "Post charges to a guest reservation",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/pos-integration/guest-reservation-postings.html"
            },
            {
              "title": "Non-reservation charge postings",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/pos-integration/non-reservation-postings.html"
            },
            {
              "title": "Get certified",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/pos-integration/get-certified.html"
            }
          ]
        },
        {
          "title": "Revenue management integration",
          "level": 2,
          "url": null,
          "children": [
            {
              "title": "Overview",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/revenue-management/overview.html"
            },
            {
              "title": "Inventory and rates",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/revenue-management/inventory-rates.html"
            },
            {
              "title": "Get rates",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/revenue-management/get-rates.html"
            },
            {
              "title": "Set rates and restrictions",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/revenue-management/set-rates-restrictions.html"
            },
            {
              "title": "Train your system",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/revenue-management/train-the-system.html"
            },
            {
              "title": "Get certified",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/revenue-management/get-certified.html"
            }
          ]
        },
        {
          "title": "Finance management integration",
          "level": 2,
          "url": null,
          "children": [
            {
              "title": "Overview",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/finance-management/overview.html"
            },
            {
              "title": "Map property and accounts",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/finance-management/mapping.html"
            },
            {
              "title": "Get transactions",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/finance-management/get-transactions.html"
            },
            {
              "title": "Get certified",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/finance-management/get-certified.html"
            }
          ]
        },
        {
          "title": "Upsell integration",
          "level": 2,
          "url": null,
          "children": [
            {
              "title": "Overview",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/upsell/overview.html"
            },
            {
              "title": "Setup and configuration",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/upsell/setup.html"
            },
            {
              "title": "Upsell services",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/upsell/upsell-services.html"
            },
            {
              "title": "Upgrade rooms",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/upsell/upgrade-rooms.html"
            },
            {
              "title": "Extend the stay",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/upsell/extend-stay.html"
            },
            {
              "title": "Get certified",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/upsell/get-certified.html"
            }
          ]
        },
        {
          "title": "Digital guest journey integration",
          "level": 2,
          "url": null,
          "children": [
            {
              "title": "Overview",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/guest-journey/overview.html"
            },
            {
              "title": "The guest's journey",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/guest-journey/guest-journey.html"
            },
            {
              "title": "Pre-stay",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/guest-journey/pre-stay.html"
            },
            {
              "title": "Stay",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/guest-journey/stay.html"
            },
            {
              "title": "Post-stay",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/guest-journey/post-stay.html"
            },
            {
              "title": "Get certified",
              "level": 3,
              "url": "https://apaleo.dev/guides/business-cases/guest-journey/get-certified.html"
            }
          ]
        }
      ]
    },
    {
      "title": "Go Live on the Apaleo Store",
      "level": 1,
      "url": null,
      "children": [
        {
          "title": "Overview",
          "level": 2,
          "url": "https://apaleo.dev/guides/apaleo-store/overview.html"
        },
        {
          "title": "Listing your app",
          "level": 2,
          "url": "https://apaleo.dev/guides/apaleo-store/create-store-listing.html"
        },
        {
          "title": "Certify your app",
          "level": 2,
          "url": "https://apaleo.dev/guides/apaleo-store/certify-your-app.html"
        },
        {
          "title": "Recertify your app",
          "level": 2,
          "url": "https://apaleo.dev/guides/apaleo-store/recertify-your-app.html"
        }
      ]
    }
  ],
  "pages": [
    {
      "url": "https://apaleo.dev/index.html",
      "title": "apaleo Developer Documentation | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>apaleo Developer Documentation</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  3 minutes\n                                \n                            </p> -->\n<p>If you have the next great product for hotels, we have APIs designed with care and built with love exactly for you, and our friends the robots.</p>\n<table class=\"top-vertical-align-table\">\n<thead>\n<tr>\n<th><strong>Getting Started</strong></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>If you’re ready to build, let’s get started.</p>\n<p>apaleo offers two different ways to connect, depending on whether you are building an\n<a href=\"/guides/oauth-connection/auth-code-grant\">integration available for everyone</a> listed on the <a href=\"https://store.apaleo.com/\">apaleo Store</a> or a <a href=\"/guides/oauth-connection/simple-client\">custom project for one hotel</a>.</p>\n<ul>\n<li><a href=\"/guides/oauth-connection/register-connect-client-app.html\"> Create a connect (store) app</a></li>\n<li>Create a <a href=\"/guides/oauth-connection/create-landing-page\">landing</a> &amp;<a href=\"/guides/oauth-connection/create-success-page.html\"> success </a>page for your store app.</li>\n</ul>\n</td>\n<td><p><p>Once you finished the integration, you can list your product on the <a href=\"https://store.apaleo.com/\">apaleo Store</a>. Then hotels can\nconnect apaleo and your product with one click - no extra work for anyone.</p>\n<p>We <a href=\"/guides/apaleo-store/certify-your-app\">review</a> submissions to the apaleo Store to ensure a certain level of quality.</p>\n<ul>\n<li><a href=\"/guides/apaleo-store/certify-your-app.html\">Certify your app</a> &amp;<a href=\"/guides/apaleo-store/create-store-listing.html\"> create the store listing </a> to go live on the apaleo <a href=\"https://store.apaleo.com/\"> Store.</a></li>\n</ul>\n</p></td>\n</tr></tbody>\n<thead>\n<tr>\n<th><strong>Authentication</strong></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<ul>\n<li><a href=\"/guides/oauth-connection/authentication.html\">How should I authenticate?</a></li>\n<li><a href=\"/guides/oauth-connection/which-oauth.html\">Which OAuth 2.0 grant works best for me?</a></li>\n</ul>\n</td>\n<td>\n<ul>\n<li><a href=\"/guides/oauth-connection/auth-code-grant.html\">OAuth 2.0: Authorization code grant flow</a> </li>\n<li><a href=\"/guides/oauth-connection/simple-client.html\">OAuth 2.0: Client credentials grant flow</a> </li>\n</ul>\n</td>\n</tr>\n</tbody>\n<thead>\n<tr>\n<th><strong>apaleo APIs</strong></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>apaleo APIs are accessible via <a href=\"https://api.apaleo.com/swagger/index.html\">Swagger UI</a>, allowing you to browse and interact with the resources.</p>\n</td>\n<td><p>To get started, sign up for your <a href=\"https://identity.apaleo.com/account/register-dev-account\">apaleo developer account</a>. It’s free!</p>\n</td>\n</tr></tbody>\n<thead>\n<tr>\n<th><strong>Business APIs</strong></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>apaleo<a href=\"https://api.apaleo.com/swagger/index.html\"> Core API</a> lets you access basic functionality and data: rates and reservations, accounting, housekeeping, inventory management, and payment. </p>\n<p>For most integrations to apaleo, this is the place to start.</p>\n</td>\n<td><p>apaleo<a href=\"https://payment.apaleo.com/swagger/index.html\"> Payment API</a> lets you access the configuration of your merchant account and allows you to read and download settlement reports, invoices and transactions logs.</p>\n</td>\n</tr></tbody>\n<thead>\n<tr>\n<th><strong>Development APIs</strong></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>APIs designed for you, to make integrations easier. Manage your apaleo One integrations.</p>\n<ul>\n<li><a href=\"https://identity.apaleo.com/swagger/index.html\">Identity / OAuth</a></li>\n<li><a href=\"https://integration.apaleo.com/swagger/index.html\">Integration / apaleo One</a></li>\n</ul>\n</td>\n<td><p>Subscribe to webhooks or ARI updates (availability, rates, and inventory).</p>\n<ul>\n<li><a href=\"https://webhook.apaleo.com/swagger/index.html\">Webhooks</a></li>\n<li><a href=\"https://distribution.apaleo.com/swagger/index.html\">Distribution / ARI</a></li>\n</ul>\n</td>\n</tr></tbody>\n<thead>\n<tr>\n<th><strong>Setup APIs</strong></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\n<p>APIs to develop tooling to set up hotels. Set up users, payment accounts, or automation options.</p>\n<ul>\n<li><a href=\"https://scheduler.apaleo.com/swagger/\">Automation</a></li>\n<li><a href=\"https://identity.apaleo.com/swagger/\">Identity / Users</a></li>\n</ul>\n</td>\n<td><p>Add styling for your invoices. Configure common settings like logos and texts.</p>\n<ul>\n<li><a href=\"https://rendering.apaleo.com/swagger/\">Rendering / Invoices</a></li>\n</ul>\n</td>\n</tr></tbody>\n<thead>\n<tr>\n<th><strong>Get support</strong></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr><td>\n<p>If you have any questions related to APIs, head over to  <a href=\"https://community.apaleo.com/c/devs\">API community</a>.</p>\n</td>\n<td>\n<p>If you have any questions related to integrations, send us an email at <strong>api@apaleo.com</strong>.</p>\n</td>\n</tr></tbody>\n<thead>\n<tr>\n<th><strong>Stay up to date</strong></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr><td>\n<p>In order for you to stay up to date with all the new features on our APIs or changes to the current ones, we recommend you to subscribe to our <a href=\"https://github.com/apaleo/announcements/issues\">announcements repository</a>.</p>\n<p>In there we will keep you posted on all the new great things we are building to make your life easier. Also you will find out of possible deprecations of fields or endpoints in our APIs.</p>\n</td>\n<td>\n<p>The <a href=\"https://status.apaleo.com\">Status page</a> is a place where we will publish all incidents and scheduled maintenances. It also shows the historical uptime and past incident history. You can easily subscribe and get notifications about incidents via email, Slack, or webhook.</p>\n<p>When you see something wrong is happening with apaleo platform, first, check the status page. Most probably, we are already working on the issue.</p>\n</td>\n</tr></tbody>\n</table>\n</section>\n</main>",
      "markdown_content": "# apaleo Developer Documentation\n\nIf you have the next great product for hotels, we have APIs designed with care and built with love exactly for you, and our friends the robots.\n\n**Getting Started** |   \n---|---  \nIf you’re ready to build, let’s get started. apaleo offers two different ways to connect, depending on whether you are building an [integration available for everyone](/guides/oauth-connection/auth-code-grant) listed on the [apaleo Store](https://store.apaleo.com/) or a [custom project for one hotel](/guides/oauth-connection/simple-client).\n\n  * [ Create a connect (store) app](/guides/oauth-connection/register-connect-client-app.html)\n  * Create a [landing](/guides/oauth-connection/create-landing-page) &[ success ](/guides/oauth-connection/create-success-page.html)page for your store app.\n\n| Once you finished the integration, you can list your product on the [apaleo Store](https://store.apaleo.com/). Then hotels can connect apaleo and your product with one click - no extra work for anyone. We [review](/guides/apaleo-store/certify-your-app) submissions to the apaleo Store to ensure a certain level of quality.\n\n  * [Certify your app](/guides/apaleo-store/certify-your-app.html) &[ create the store listing ](/guides/apaleo-store/create-store-listing.html) to go live on the apaleo [ Store.](https://store.apaleo.com/)\n\n  \n**Authentication** |   \n  \n  * [How should I authenticate?](/guides/oauth-connection/authentication.html)\n  * [Which OAuth 2.0 grant works best for me?](/guides/oauth-connection/which-oauth.html)\n\n| \n\n  * [OAuth 2.0: Authorization code grant flow](/guides/oauth-connection/auth-code-grant.html)\n  * [OAuth 2.0: Client credentials grant flow](/guides/oauth-connection/simple-client.html)\n\n  \n**apaleo APIs** |   \napaleo APIs are accessible via [Swagger UI](https://api.apaleo.com/swagger/index.html), allowing you to browse and interact with the resources. | To get started, sign up for your [apaleo developer account](https://identity.apaleo.com/account/register-dev-account). It’s free!  \n**Business APIs** |   \napaleo[ Core API](https://api.apaleo.com/swagger/index.html) lets you access basic functionality and data: rates and reservations, accounting, housekeeping, inventory management, and payment.  For most integrations to apaleo, this is the place to start. | apaleo[ Payment API](https://payment.apaleo.com/swagger/index.html) lets you access the configuration of your merchant account and allows you to read and download settlement reports, invoices and transactions logs.  \n**Development APIs** |   \nAPIs designed for you, to make integrations easier. Manage your apaleo One integrations.\n\n  * [Identity / OAuth](https://identity.apaleo.com/swagger/index.html)\n  * [Integration / apaleo One](https://integration.apaleo.com/swagger/index.html)\n\n| Subscribe to webhooks or ARI updates (availability, rates, and inventory).\n\n  * [Webhooks](https://webhook.apaleo.com/swagger/index.html)\n  * [Distribution / ARI](https://distribution.apaleo.com/swagger/index.html)\n\n  \n**Setup APIs** |   \nAPIs to develop tooling to set up hotels. Set up users, payment accounts, or automation options.\n\n  * [Automation](https://scheduler.apaleo.com/swagger/)\n  * [Identity / Users](https://identity.apaleo.com/swagger/)\n\n| Add styling for your invoices. Configure common settings like logos and texts.\n\n  * [Rendering / Invoices](https://rendering.apaleo.com/swagger/)\n\n  \n**Get support** |   \nIf you have any questions related to APIs, head over to [API community](https://community.apaleo.com/c/devs). |  If you have any questions related to integrations, send us an email at **api@apaleo.com**.  \n**Stay up to date** |   \nIn order for you to stay up to date with all the new features on our APIs or changes to the current ones, we recommend you to subscribe to our [announcements repository](https://github.com/apaleo/announcements/issues). In there we will keep you posted on all the new great things we are building to make your life easier. Also you will find out of possible deprecations of fields or endpoints in our APIs. |  The [Status page](https://status.apaleo.com) is a place where we will publish all incidents and scheduled maintenances. It also shows the historical uptime and past incident history. You can easily subscribe and get notifications about incidents via email, Slack, or webhook. When you see something wrong is happening with apaleo platform, first, check the status page. Most probably, we are already working on the issue.\n",
      "timestamp": "2025-06-23T15:17:57.296956"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/authentication.html",
      "title": "Authentication and authorization | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Authentication and authorization</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  2 minutes\n                                \n                            </p> -->\n<p>apaleo connect allows hotels to connect your application with apaleo with a click of a button. For\nyou, this means getting a new hotel connected is no work at all. Like, zero. No mapping of client\ncredentials, no paperwork, nothing. Let’s understand authentication and authorization and how you\ncan use the apaleo Identity API to authenticate and authorize users in your apps.</p>\n<p>Authentication is the process of proving your identity. apaleo Identity API implements the\n<a href=\"https://openid.net/connect/\">OpenID Connect</a> protocol for handling authentication.</p>\n<p>Authorization is about granting an authenticated person or app the permission to do something. It\nspecifies what data you’re allowed to access and what you can do with that data. apaleo Identity API\nimplements the <a href=\"https://oauth.net/2/\">OAuth 2.0</a> for handling authorization.</p>\n<p><strong>OAuth vs. OpenID Connect</strong>: OpenID Connect is built on top of OAuth 2.0, so the terminology and\nflow are similar between the two. You can even both, authenticate a user (by using OpenID Connect),\nand get authorization to access a protected resource that the user owns (by using OAuth 2.0) in one\nrequest. For more information, see <a href=\"/guides/oauth-connection/oauth-openid\">OAuth 2.0 and OpenID Connect basics</a>.</p>\n<p>apaleo’s Identity API can be used for both authentication and authorization. Our OAuth 2.0\nimplementation for authentication conforms to the <a href=\"https://openid.net/connect/\">OpenID Connect</a>\nspecification.</p>\n<hr/>\n<h2 id=\"oauth-20\">OAuth 2.0</h2>\n<p>The apaleo APIs use OAuth 2.0 to authenticate and authorize users to make requests. The\n<a href=\"https://www.oauth.com/oauth2-servers/map-oauth-2-0-specs/\">OAuth 2.0 Framework</a> describes patterns\nfor granting authorization but does not define how to actually perform authentication.</p>\n<p>Well, <a href=\"https://openid.net/connect/\">OpenID Connect</a> brings some sanity to the madness. It provides a\ntemplate for interoperability that makes it easy to incorporate identity management seamlessly and\nsecurely.</p>\n<hr/>\n<h2 id=\"openid-connect\">OpenID Connect</h2>\n<p><a href=\"https://openid.net/specs/openid-connect-core-1_0.html\">OpenID Connect</a> extends the OAuth 2.0\nauthorization process for use as an authentication protocol so that you can do single sign-on using\nOAuth. It is a simple identity layer built on top of the OAuth 2.0 protocol, which allows\nauthorization servers to authenticate users for applications and return the results in a standard\nway.</p>\n<p>OpenID Connect introduces the concept of an\n<a href=\"http://openid.net/specs/openid-connect-core-1_0.html#IDToken\">ID token</a>. It is a security token\nthat allows the client to verify the identity of the user. The ID token also gets basic profile\ninformation about the user.</p>\n<blockquote>\n<p>You must remember that OpenID Connect is just a special, simplified case of OAuth, not a\nreplacement. It uses the same terminology and concepts.</p>\n</blockquote>\n</section>\n</main>",
      "markdown_content": "# Authentication and authorization  \n  \napaleo connect allows hotels to connect your application with apaleo with a click of a button. For you, this means getting a new hotel connected is no work at all. Like, zero. No mapping of client credentials, no paperwork, nothing. Let’s understand authentication and authorization and how you can use the apaleo Identity API to authenticate and authorize users in your apps.\n\nAuthentication is the process of proving your identity. apaleo Identity API implements the [OpenID Connect](https://openid.net/connect/) protocol for handling authentication.\n\nAuthorization is about granting an authenticated person or app the permission to do something. It specifies what data you’re allowed to access and what you can do with that data. apaleo Identity API implements the [OAuth 2.0](https://oauth.net/2/) for handling authorization.\n\n**OAuth vs. OpenID Connect** : OpenID Connect is built on top of OAuth 2.0, so the terminology and flow are similar between the two. You can even both, authenticate a user (by using OpenID Connect), and get authorization to access a protected resource that the user owns (by using OAuth 2.0) in one request. For more information, see [OAuth 2.0 and OpenID Connect basics](/guides/oauth-connection/oauth-openid).\n\napaleo’s Identity API can be used for both authentication and authorization. Our OAuth 2.0 implementation for authentication conforms to the [OpenID Connect](https://openid.net/connect/) specification.\n\n* * *\n\n## OAuth 2.0\n\nThe apaleo APIs use OAuth 2.0 to authenticate and authorize users to make requests. The [OAuth 2.0 Framework](https://www.oauth.com/oauth2-servers/map-oauth-2-0-specs/) describes patterns for granting authorization but does not define how to actually perform authentication.\n\nWell, [OpenID Connect](https://openid.net/connect/) brings some sanity to the madness. It provides a template for interoperability that makes it easy to incorporate identity management seamlessly and securely.\n\n* * *\n\n## OpenID Connect\n\n[OpenID Connect](https://openid.net/specs/openid-connect-core-1_0.html) extends the OAuth 2.0 authorization process for use as an authentication protocol so that you can do single sign-on using OAuth. It is a simple identity layer built on top of the OAuth 2.0 protocol, which allows authorization servers to authenticate users for applications and return the results in a standard way.\n\nOpenID Connect introduces the concept of an [ID token](http://openid.net/specs/openid-connect-core-1_0.html#IDToken). It is a security token that allows the client to verify the identity of the user. The ID token also gets basic profile information about the user.\n\n> You must remember that OpenID Connect is just a special, simplified case of OAuth, not a replacement. It uses the same terminology and concepts.\n",
      "timestamp": "2025-06-23T15:17:57.994468"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/oauth-openid.html",
      "title": "OAuth 2.0 and OpenID connect basics | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>OAuth 2.0 and OpenID connect basics</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  4 minutes\n                                \n                            </p> -->\n<p>In all the OAuth 2.0 and OpenID Connect flows, there are four parties involved in the exchange:</p>\n<img src=\"/assets/images/oauth/oauthroles.png\">\n<table>\n<thead>\n<tr>\n<th>OAuth terms</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Resource owner (End-user)</td>\n<td>An entity that owns the data and is capable of granting access to a protected resource. When a resource owner is a person, it is referred to as an end-user.</td>\n</tr>\n<tr>\n<td>Client (App)</td>\n<td>An application making protected resource requests on behalf of the resource owner and with its authorization.</td>\n</tr>\n<tr>\n<td>Authorization server (apaleo Identity API)</td>\n<td>The server issuing access tokens to the client after successfully authenticating the resource owner and obtaining authorization.</td>\n</tr>\n<tr>\n<td>Resource server (apaleo Resource APIs)</td>\n<td>The server hosting the protected resources, capable of accepting and responding to protected resource requests using access tokens. It trusts the authorization server to authenticate and authorize the OAuth client securely.</td>\n</tr>\n</tbody>\n</table>\n<hr/>\n<h2 id=\"apaleo-identity-api-endpoints\">Apaleo Identity API endpoints</h2>\n<table>\n<thead>\n<tr>\n<th><strong>Endpoint</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>https://identity.apaleo.com/connect/authorize</code></strong></td>\n<td>A client app may send a request to this endpoint to receive authorization to access a resource owner’s data residing on a resource server. This action initializes an OAuth flow.</td>\n</tr>\n<tr>\n<td><strong><code>https://identity.apaleo.com/connect/token</code></strong></td>\n<td>Post an OAuth 2.0 grant (auth code, refresh token, client credentials) to obtain access and / or ID token.</td>\n</tr>\n<tr>\n<td><strong><code>https://identity.apaleo.com/connect/introspect</code></strong></td>\n<td>Validate an access token and retrieve its underlying authorization (for resource servers).</td>\n</tr>\n<tr>\n<td><strong><code>https://identity.apaleo.com/connect/revocation</code></strong></td>\n<td>Revokes access or refresh token. This endpoint is only applicable to the authorization code grant flow.</td>\n</tr>\n<tr>\n<td><strong><code>https://identity.apaleo.com/connect/endsession</code></strong></td>\n<td>To use the end session endpoint, a client application will redirect the user’s browser to the end session URL.</td>\n</tr>\n<tr>\n<td><strong><code>https://identity.apaleo.com/connect/deviceauthorization</code></strong></td>\n<td>Can be used to request device and user codes.</td>\n</tr>\n</tbody>\n</table>\n<p>Following endpoints are provided to support\n<a href=\"http://openid.net/specs/openid-connect-core-1_0.html\">OpenID Connect</a>:</p>\n<table>\n<thead>\n<tr>\n<th><strong>Endpoint</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>https://identity.apaleo.com/connect/userinfo</code></strong></td>\n<td>Retrieve profile information and other attributes for a logged-in end-user.</td>\n</tr>\n<tr>\n<td><strong><code>https://identity.apaleo.com/connect/checksession</code></strong></td>\n<td>Poll the OpenID provider for changes in end-user authentication status.</td>\n</tr>\n<tr>\n<td><strong><code>https://identity.apaleo.com/.well-known/openid-configuration/jwks</code></strong></td>\n<td>Retrieve the public server JSON Web Key (JWK) to verify the signature of issued tokens or to encrypt request objects to the server.</td>\n</tr>\n<tr>\n<td><strong><code>https://identity.apaleo.com/.well-known/openid-configuration</code></strong></td>\n<td>Discover the OAuth 2.0 / OpenID Connect endpoints, capabilities, supported cryptographic algorithms, and features. It can be used to configure applications.</td>\n</tr>\n</tbody>\n</table>\n<p>For more information on OAuth 2.0 endpoints, see <a href=\"https://tools.ietf.org/html/rfc6749\">RFC 6749</a> and\n<a href=\"https://tools.ietf.org/html/rfc7009\">RFC 7009</a>.</p>\n<hr/>\n<h2 id=\"why-use-openid-connect-for-my-app\">Why use OpenID Connect for my app?</h2>\n<p>OpenID Connect is easy to integrate, and it can work with a wide variety of apps. Because OpenID\nConnect is a layer on top of OAuth 2.0, your app can use our APIs for both user authentication and\nauthorization. Your app will use OAuth 2.0 flows to obtain access token plus an\n<a href=\"http://openid.net/specs/openid-connect-core-1_0.html#IDToken\">ID token</a>. The id token is a\n<a href=\"http://jwt.io/\">JWT</a> and contains information about the authenticated user.</p>\n<p>OpenID Connect provides a single protocol for authentication and authorization (OAuth 2.0 access\ntokens).</p>\n<hr/>\n<h2 id=\"implementing-openid-connect\">Implementing OpenID Connect</h2>\n<p>There are many OpenID Connect certified libraries for different development platforms. You have to\nchoose the one that suits you best. In our experience, it takes a longer time to write the code\nyourself than using a pre-written library.</p>\n<p>OpenID Connect is a well-documented specification, and we recommend you consult the following\nresources to assist you with this process. Considering the security implications of getting the\nimplementation right, apaleo encourages you to use a certified OpenID Connect client.</p>\n<ul>\n<li><a href=\"http://openid.net/connect/\">OpenID Connect specification</a></li>\n<li><a href=\"http://openid.net/developers/certified/\">Certified OpenID Connect Implementations</a></li>\n</ul>\n<hr/>\n<h2 id=\"discovery-document\">Discovery document</h2>\n<p>The discovery document (also known as “well-known endpoint”) is a set of OpenID Connect values that\ncan be retrieved by OIDC clients. It enables OIDC clients to automatically configure themselves. The\nDiscovery document for Apaleo’s OpenID Connect service can be retrieved from:</p>\n<pre><code>https://identity.apaleo.com/.well-known/openid-configuration\n</code></pre>\n<p>To use apaleo’s OpenID Connect services, you should hard-code the Discovery-document URI\n(<code>https://identity.apaleo.com/.well-known/openid-configuration</code>) into your application. Your\napplication will fetch the document and retrieve endpoint URIs from it as required. For example, to\nauthenticate a user, your code would retrieve the <code>authorization_endpoint</code> metadata value\n(<code>https://identity.apaleo.com/connect/authorize</code>) as the base URI for authentication requests that\nare sent to apaleo.</p>\n<p>You can access the discovery document page simply by entering the URL for the well-known endpoint or\nby using an API call to return discovery document values in JSON format.</p>\n<p>For example, here’s a Curl command for returning the discovery document:</p>\n<pre><code>curl -XGET -H \"Content-type: application/json\" 'https://identity.apaleo.com/.well-known/openid-configuration'\n</code></pre>\n<p>Regardless of the method you choose, here’s the sort of information you’ll get back in return:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n   </span><span class=\"nl\">\"issuer\"</span><span class=\"p\">:</span><span class=\"s2\">\"https://identity.apaleo.com\"</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"jwks_uri\"</span><span class=\"p\">:</span><span class=\"s2\">\"https://identity.apaleo.com/.well-known/openid-configuration/jwks\"</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"authorization_endpoint\"</span><span class=\"p\">:</span><span class=\"s2\">\"https://identity.apaleo.com/connect/authorize\"</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"token_endpoint\"</span><span class=\"p\">:</span><span class=\"s2\">\"https://identity.apaleo.com/connect/token\"</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"userinfo_endpoint\"</span><span class=\"p\">:</span><span class=\"s2\">\"https://identity.apaleo.com/connect/userinfo\"</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"end_session_endpoint\"</span><span class=\"p\">:</span><span class=\"s2\">\"https://identity.apaleo.com/connect/endsession\"</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"check_session_iframe\"</span><span class=\"p\">:</span><span class=\"s2\">\"https://identity.apaleo.com/connect/checksession\"</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"revocation_endpoint\"</span><span class=\"p\">:</span><span class=\"s2\">\"https://identity.apaleo.com/connect/revocation\"</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"introspection_endpoint\"</span><span class=\"p\">:</span><span class=\"s2\">\"https://identity.apaleo.com/connect/introspect\"</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"device_authorization_endpoint\"</span><span class=\"p\">:</span><span class=\"s2\">\"https://identity.apaleo.com/connect/deviceauthorization\"</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"frontchannel_logout_supported\"</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"frontchannel_logout_session_supported\"</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"backchannel_logout_supported\"</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"backchannel_logout_session_supported\"</span><span class=\"p\">:</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n   </span><span class=\"nl\">\"scopes_supported\"</span><span class=\"p\">:[</span><span class=\"w\">\n      </span><span class=\"s2\">\"openid\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"s2\">\"profile\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"s2\">\"transactional-data.delete\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"s2\">\"reservations.import\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"err\">....................</span><span class=\"w\">\n      </span><span class=\"s2\">\"offline_access\"</span><span class=\"w\">\n   </span><span class=\"p\">],</span><span class=\"w\">\n      </span><span class=\"err\">...............</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n</img></section>\n</main>",
      "markdown_content": "# OAuth 2.0 and OpenID connect basics\n\nIn all the OAuth 2.0 and OpenID Connect flows, there are four parties involved in the exchange:\n\n![](/assets/images/oauth/oauthroles.png) OAuth terms | Description  \n---|---  \nResource owner (End-user) | An entity that owns the data and is capable of granting access to a protected resource. When a resource owner is a person, it is referred to as an end-user.  \nClient (App) | An application making protected resource requests on behalf of the resource owner and with its authorization.  \nAuthorization server (apaleo Identity API) | The server issuing access tokens to the client after successfully authenticating the resource owner and obtaining authorization.  \nResource server (apaleo Resource APIs) | The server hosting the protected resources, capable of accepting and responding to protected resource requests using access tokens. It trusts the authorization server to authenticate and authorize the OAuth client securely.  \n  \n* * *\n\n## Apaleo Identity API endpoints\n\n**Endpoint** | **Description**  \n---|---  \n**`https://identity.apaleo.com/connect/authorize`** | A client app may send a request to this endpoint to receive authorization to access a resource owner’s data residing on a resource server. This action initializes an OAuth flow.  \n**`https://identity.apaleo.com/connect/token`** | Post an OAuth 2.0 grant (auth code, refresh token, client credentials) to obtain access and / or ID token.  \n**`https://identity.apaleo.com/connect/introspect`** | Validate an access token and retrieve its underlying authorization (for resource servers).  \n**`https://identity.apaleo.com/connect/revocation`** | Revokes access or refresh token. This endpoint is only applicable to the authorization code grant flow.  \n**`https://identity.apaleo.com/connect/endsession`** | To use the end session endpoint, a client application will redirect the user’s browser to the end session URL.  \n**`https://identity.apaleo.com/connect/deviceauthorization`** | Can be used to request device and user codes.  \n  \nFollowing endpoints are provided to support [OpenID Connect](http://openid.net/specs/openid-connect-core-1_0.html):\n\n**Endpoint** | **Description**  \n---|---  \n**`https://identity.apaleo.com/connect/userinfo`** | Retrieve profile information and other attributes for a logged-in end-user.  \n**`https://identity.apaleo.com/connect/checksession`** | Poll the OpenID provider for changes in end-user authentication status.  \n**`https://identity.apaleo.com/.well-known/openid-configuration/jwks`** | Retrieve the public server JSON Web Key (JWK) to verify the signature of issued tokens or to encrypt request objects to the server.  \n**`https://identity.apaleo.com/.well-known/openid-configuration`** | Discover the OAuth 2.0 / OpenID Connect endpoints, capabilities, supported cryptographic algorithms, and features. It can be used to configure applications.  \n  \nFor more information on OAuth 2.0 endpoints, see [RFC 6749](https://tools.ietf.org/html/rfc6749) and [RFC 7009](https://tools.ietf.org/html/rfc7009).\n\n* * *\n\n## Why use OpenID Connect for my app?\n\nOpenID Connect is easy to integrate, and it can work with a wide variety of apps. Because OpenID Connect is a layer on top of OAuth 2.0, your app can use our APIs for both user authentication and authorization. Your app will use OAuth 2.0 flows to obtain access token plus an [ID token](http://openid.net/specs/openid-connect-core-1_0.html#IDToken). The id token is a [JWT](http://jwt.io/) and contains information about the authenticated user.\n\nOpenID Connect provides a single protocol for authentication and authorization (OAuth 2.0 access tokens).\n\n* * *\n\n## Implementing OpenID Connect\n\nThere are many OpenID Connect certified libraries for different development platforms. You have to choose the one that suits you best. In our experience, it takes a longer time to write the code yourself than using a pre-written library.\n\nOpenID Connect is a well-documented specification, and we recommend you consult the following resources to assist you with this process. Considering the security implications of getting the implementation right, apaleo encourages you to use a certified OpenID Connect client.\n\n  * [OpenID Connect specification](http://openid.net/connect/)\n  * [Certified OpenID Connect Implementations](http://openid.net/developers/certified/)\n\n\n\n* * *\n\n## Discovery document\n\nThe discovery document (also known as “well-known endpoint”) is a set of OpenID Connect values that can be retrieved by OIDC clients. It enables OIDC clients to automatically configure themselves. The Discovery document for Apaleo’s OpenID Connect service can be retrieved from:\n    \n    \n    https://identity.apaleo.com/.well-known/openid-configuration\n    \n\nTo use apaleo’s OpenID Connect services, you should hard-code the Discovery-document URI (`https://identity.apaleo.com/.well-known/openid-configuration`) into your application. Your application will fetch the document and retrieve endpoint URIs from it as required. For example, to authenticate a user, your code would retrieve the `authorization_endpoint` metadata value (`https://identity.apaleo.com/connect/authorize`) as the base URI for authentication requests that are sent to apaleo.\n\nYou can access the discovery document page simply by entering the URL for the well-known endpoint or by using an API call to return discovery document values in JSON format.\n\nFor example, here’s a Curl command for returning the discovery document:\n    \n    \n    curl -XGET -H \"Content-type: application/json\" 'https://identity.apaleo.com/.well-known/openid-configuration'\n    \n\nRegardless of the method you choose, here’s the sort of information you’ll get back in return:\n    \n    \n    {\n       \"issuer\":\"https://identity.apaleo.com\",\n       \"jwks_uri\":\"https://identity.apaleo.com/.well-known/openid-configuration/jwks\",\n       \"authorization_endpoint\":\"https://identity.apaleo.com/connect/authorize\",\n       \"token_endpoint\":\"https://identity.apaleo.com/connect/token\",\n       \"userinfo_endpoint\":\"https://identity.apaleo.com/connect/userinfo\",\n       \"end_session_endpoint\":\"https://identity.apaleo.com/connect/endsession\",\n       \"check_session_iframe\":\"https://identity.apaleo.com/connect/checksession\",\n       \"revocation_endpoint\":\"https://identity.apaleo.com/connect/revocation\",\n       \"introspection_endpoint\":\"https://identity.apaleo.com/connect/introspect\",\n       \"device_authorization_endpoint\":\"https://identity.apaleo.com/connect/deviceauthorization\",\n       \"frontchannel_logout_supported\":true,\n       \"frontchannel_logout_session_supported\":true,\n       \"backchannel_logout_supported\":true,\n       \"backchannel_logout_session_supported\":true,\n       \"scopes_supported\":[\n          \"openid\",\n          \"profile\",\n          \"transactional-data.delete\",\n          \"reservations.import\",\n          ....................\n          \"offline_access\"\n       ],\n          ...............\n    }\n    \n",
      "timestamp": "2025-06-23T15:17:58.714876"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/which-oauth.html",
      "title": "Which OAuth 2.0 grant works best for me? | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Which OAuth 2.0 grant works best for me?</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>A grant is a method to acquire an access token. To decide the implementation of a grant, you need to\nconsider the type of client end-user will be using and the end-user experience.</p>\n<p>OpenID Connect supports the following authentication flows:</p>\n<img src=\"/assets/images/oauth/oauthflow.png\">\n<table>\n<thead>\n<tr>\n<th align=\"left\">Use Case</th>\n<th align=\"left\">Trustworthiness</th>\n<th align=\"left\">Suggested OAuth 2.0 Authorization Grant_type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Publicly available apps (apaleo store apps)</td>\n<td align=\"left\">- Most secure grant type.<br/>- If the client is a web app that has a server-side component, then you should implement the authorization code grant.<br/>- If you can use server-side scripting, then use this grant.</td>\n<td align=\"left\"><a href=\"/guides/oauth-connection/auth-code-grant\">Authorization code grant</a></td>\n</tr>\n<tr>\n<td align=\"left\">Private apps (custom project for one hotel)</td>\n<td align=\"left\">- Highly trusted applications, written by internal developers or developers with a trusted business relationship with the user. <br/>- All parties trust each other and no external resources are involved.<br/>- Usually used for machine-to-machine authorization.<br/>- Applications that need to access resources on their own behalf.</td>\n<td align=\"left\"><a href=\"/guides/oauth-connection/simple-client\">Client credentials grant</a></td>\n</tr>\n</tbody>\n</table>\n<hr/>\n<h2 id=\"implementing-oauth-in-your-applications\">Implementing OAuth in your applications</h2>\n<p>The following topics describe how to generate OAuth access tokens using each of the two grant flows:</p>\n<ul>\n<li><a href=\"/guides/oauth-connection/auth-code-grant\">The authorization code grant flow</a></li>\n<li><a href=\"/guides/oauth-connection/simple-client\">The client credentials grant flow</a></li>\n</ul>\n</img></section>\n</main>",
      "markdown_content": "# Which OAuth 2.0 grant works best for me?\n\nA grant is a method to acquire an access token. To decide the implementation of a grant, you need to consider the type of client end-user will be using and the end-user experience.\n\nOpenID Connect supports the following authentication flows:\n\n![](/assets/images/oauth/oauthflow.png) Use Case | Trustworthiness | Suggested OAuth 2.0 Authorization Grant_type  \n---|---|---  \nPublicly available apps (apaleo store apps) | \\- Most secure grant type.  \n\\- If the client is a web app that has a server-side component, then you should implement the authorization code grant.  \n\\- If you can use server-side scripting, then use this grant. | [Authorization code grant](/guides/oauth-connection/auth-code-grant)  \nPrivate apps (custom project for one hotel) | \\- Highly trusted applications, written by internal developers or developers with a trusted business relationship with the user.   \n\\- All parties trust each other and no external resources are involved.  \n\\- Usually used for machine-to-machine authorization.  \n\\- Applications that need to access resources on their own behalf. | [Client credentials grant](/guides/oauth-connection/simple-client)  \n  \n* * *\n\n## Implementing OAuth in your applications\n\nThe following topics describe how to generate OAuth access tokens using each of the two grant flows:\n\n  * [The authorization code grant flow](/guides/oauth-connection/auth-code-grant)\n  * [The client credentials grant flow](/guides/oauth-connection/simple-client)\n\n\n",
      "timestamp": "2025-06-23T15:17:59.416473"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/register-connect-client-app.html",
      "title": "Register an OAuth connect client (apaleo store) app | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Register an OAuth connect client (apaleo store) app</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  2 minutes\n                                \n                            </p> -->\n<p>In order to make any call to the apaleo Identity API, and to request your OAuth 2.0 access token,\nyou need to register a client application. Registered OAuth applications are assigned a unique\nClient ID (<code>client_id</code>) and a unique Client Secret (<code>client_secret</code>). Make sure to store the Client Secret securely.</p>\n<blockquote>\n<p>Only users with administration management privileges can register applications.</p>\n</blockquote>\n<hr/>\n<h3 id=\"to-register-oauth-connect-client-app\">To register OAuth connect client app:</h3>\n<ol>\n<li>\n<p><a href=\"https://app.apaleo.com/dashboard\">Log into the apaleo Dashboard</a> with your apaleo developer\ncredentials. If you do not have an account, sign up for your\n<a href=\"https://identity.apaleo.com/account/register-dev-account\">apaleo developer account</a>.</p>\n</li>\n<li>\n<p>Navigate to the <strong>Apps</strong> section and click <strong>My store apps</strong>.</p>\n<img src=\"/assets/images/oauth/connect-client.png\">\n</img></li>\n<li>\n<p>On the connect clients page, click <strong>Add a new store app</strong>.</p>\n<img src=\"/assets/images/oauth/connect-client-url.png\"/>\n</li>\n<li>\n<p>On this page, enter the following details:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Field</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Client code</td>\n<td align=\"left\">Unique key for the client application.</td>\n</tr>\n<tr>\n<td align=\"left\">Client name</td>\n<td align=\"left\">Human-readable string name of the client application, used on the client consent dialog box.</td>\n</tr>\n<tr>\n<td align=\"left\">Logo URL</td>\n<td align=\"left\">URL string that references a logo for the client consent dialog box.</td>\n</tr>\n<tr>\n<td align=\"left\">Redirect URIs</td>\n<td align=\"left\">The URI to which apaleo will redirect the browser after authorization has been granted by the user. Ensure the redirect URI can be called, and is using https. The Redirect URI is your application’s endpoint or callback that expects user authorization code.</td>\n</tr>\n<tr>\n<td align=\"left\">Secrets</td>\n<td align=\"left\">Description of your secret. You can add a new secret to your app to get a new client secret if you believe that the existing client secret has been compromised.</td>\n</tr>\n<tr>\n<td align=\"left\">Scopes</td>\n<td align=\"left\">OAuth scopes, or permissions, let you specify exactly how your app needs to access an apaleo user’s account.</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>Review your app details and save your app.\n<img src=\"/assets/images/oauth/connect-client-secret.png\"/></p>\n</li>\n<li>\n<p>Take note of the client ID and client secret. You’ll need these in the <a href=\"/guides/oauth-connection/auth-code-grant.html#step-2-exchange-the-authorization-code-for-an-access-token\">next step</a> to initiate the OAuth flow.</p>\n</li>\n</ol>\n<ul>\n<li>\n<p><strong>Client ID</strong> - This identifies the client responsible for the OAuth request. A unique key for the\nclient application.</p>\n</li>\n<li>\n<p><strong>Client Secret</strong> - A client secret is a secret known only to your application and the\nauthorization server. It protects your resources by only granting tokens to authorized requestors.\nAlways store the client secret key securely; never reveal it publicly! If you suspect that the\nsecret key has been compromised, regenerate it immediately by adding a new secret to the client\napplication.</p>\n</li>\n</ul>\n<blockquote>\n<p>To be published on the apaleo store, your app needs to pass our app approval process.</p>\n</blockquote>\n</section>\n</main>",
      "markdown_content": "# Register an OAuth connect client (apaleo store) app\n\nIn order to make any call to the apaleo Identity API, and to request your OAuth 2.0 access token, you need to register a client application. Registered OAuth applications are assigned a unique Client ID (`client_id`) and a unique Client Secret (`client_secret`). Make sure to store the Client Secret securely.\n\n> Only users with administration management privileges can register applications.\n\n* * *\n\n### To register OAuth connect client app:\n\n  1. [Log into the apaleo Dashboard](https://app.apaleo.com/dashboard) with your apaleo developer credentials. If you do not have an account, sign up for your [apaleo developer account](https://identity.apaleo.com/account/register-dev-account).\n\n  2. Navigate to the **Apps** section and click **My store apps**.\n\n![](/assets/images/oauth/connect-client.png)\n  3. On the connect clients page, click **Add a new store app**.\n\n![](/assets/images/oauth/connect-client-url.png)\n  4. On this page, enter the following details:\n\nField | Description  \n---|---  \nClient code | Unique key for the client application.  \nClient name | Human-readable string name of the client application, used on the client consent dialog box.  \nLogo URL | URL string that references a logo for the client consent dialog box.  \nRedirect URIs | The URI to which apaleo will redirect the browser after authorization has been granted by the user. Ensure the redirect URI can be called, and is using https. The Redirect URI is your application’s endpoint or callback that expects user authorization code.  \nSecrets | Description of your secret. You can add a new secret to your app to get a new client secret if you believe that the existing client secret has been compromised.  \nScopes | OAuth scopes, or permissions, let you specify exactly how your app needs to access an apaleo user’s account.  \n  5. Review your app details and save your app. ![](/assets/images/oauth/connect-client-secret.png)\n\n  6. Take note of the client ID and client secret. You’ll need these in the [next step](/guides/oauth-connection/auth-code-grant.html#step-2-exchange-the-authorization-code-for-an-access-token) to initiate the OAuth flow.\n\n\n\n  * **Client ID** \\- This identifies the client responsible for the OAuth request. A unique key for the client application.\n\n  * **Client Secret** \\- A client secret is a secret known only to your application and the authorization server. It protects your resources by only granting tokens to authorized requestors. Always store the client secret key securely; never reveal it publicly! If you suspect that the secret key has been compromised, regenerate it immediately by adding a new secret to the client application.\n\n\n\n\n> To be published on the apaleo store, your app needs to pass our app approval process.\n",
      "timestamp": "2025-06-23T15:18:00.125928"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/register-simple-client-app.html",
      "title": "Register an OAuth simple client (custom) app | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Register an OAuth simple client (custom) app</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  2 minutes\n                                \n                            </p> -->\n<p>In order to make any call to the apaleo Identity API, and to request your OAuth 2.0 access token,\nyou need to register a client application. Registered OAuth applications are assigned a unique\nClient ID (<code>client_id</code>) and a unique Client Secret (<code>client_secret</code>). Make sure to store the Client Secret securely.</p>\n<blockquote>\n<p>Only users with administration management privileges can register applications.</p>\n</blockquote>\n<hr/>\n<h3 id=\"to-register-oauth-simple-client-app\">To register OAuth simple client app:</h3>\n<ol>\n<li>\n<p><a href=\"https://app.apaleo.com/dashboard\">Log into the apaleo Dashboard</a> with your apaleo developer\ncredentials. If you don’t have an account, sign up for your\n<a href=\"https://identity.apaleo.com/account/register-dev-account\">apaleo developer account</a>.</p>\n</li>\n<li>\n<p>Navigate to the <strong>Apps</strong> section and click <strong>Connected apps</strong>.</p>\n<img src=\"/assets/images/oauth/simple-client.png\">\n</img></li>\n<li>\n<p>On the connect clients page, click <strong>Add a new app</strong>.</p>\n<img src=\"/assets/images/oauth/simple-client-save.png\"/>\n</li>\n<li>\n<p>On the <strong>Add a new app</strong> dialog, select <strong>Add custom app</strong>.</p>\n</li>\n<li>\n<p>On the <strong>New custom app</strong> page, enter the following details:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Field</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Client code</td>\n<td align=\"left\">Unique key for the client application.</td>\n</tr>\n<tr>\n<td align=\"left\">Client name</td>\n<td align=\"left\">Human-readable string name of the client application.</td>\n</tr>\n<tr>\n<td align=\"left\">Personally identifiable information</td>\n<td align=\"left\">Decide if you want to retrieve personal information such as guest name, address, country, etc.</td>\n</tr>\n<tr>\n<td align=\"left\">Secrets</td>\n<td align=\"left\">Description of your secret. You can add a new secret to your app to get a new client secret if you believe that the existing client secret has been compromised.</td>\n</tr>\n<tr>\n<td align=\"left\">Scopes</td>\n<td align=\"left\">OAuth scopes, or permissions, let you specify exactly how your app needs to access an apaleo user’s account.</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>Review your app details and save your app.</p>\n<img src=\"/assets/images/oauth/simple-client-created.png\"/>\n</li>\n<li>\n<p>Take note of the client ID and client secret. You’ll need these in the\n<a href=\"/guides/oauth-connection/simple-client.html#step-1-client-requests-an-access-token\">next step</a> to initiate the OAuth flow.</p>\n<ul>\n<li><strong>Client ID</strong> - This identifies the client responsible for the OAuth request. A unique key for\nthe client application.</li>\n<li><strong>Client Secret</strong> - A client secret is a secret known only to your application and the\nauthorization server. It protects your resources by only granting tokens to authorized\nrequestors. Always store the client secret key securely; never reveal it publicly! If you\nsuspect that the secret key has been compromised, regenerate it immediately by adding a new\nsecret to the client application.</li>\n</ul>\n</li>\n</ol>\n</section>\n</main>",
      "markdown_content": "# Register an OAuth simple client (custom) app\n\nIn order to make any call to the apaleo Identity API, and to request your OAuth 2.0 access token, you need to register a client application. Registered OAuth applications are assigned a unique Client ID (`client_id`) and a unique Client Secret (`client_secret`). Make sure to store the Client Secret securely.\n\n> Only users with administration management privileges can register applications.\n\n* * *\n\n### To register OAuth simple client app:\n\n  1. [Log into the apaleo Dashboard](https://app.apaleo.com/dashboard) with your apaleo developer credentials. If you don’t have an account, sign up for your [apaleo developer account](https://identity.apaleo.com/account/register-dev-account).\n\n  2. Navigate to the **Apps** section and click **Connected apps**.\n\n![](/assets/images/oauth/simple-client.png)\n  3. On the connect clients page, click **Add a new app**.\n\n![](/assets/images/oauth/simple-client-save.png)\n  4. On the **Add a new app** dialog, select **Add custom app**.\n\n  5. On the **New custom app** page, enter the following details:\n\nField | Description  \n---|---  \nClient code | Unique key for the client application.  \nClient name | Human-readable string name of the client application.  \nPersonally identifiable information | Decide if you want to retrieve personal information such as guest name, address, country, etc.  \nSecrets | Description of your secret. You can add a new secret to your app to get a new client secret if you believe that the existing client secret has been compromised.  \nScopes | OAuth scopes, or permissions, let you specify exactly how your app needs to access an apaleo user’s account.  \n  6. Review your app details and save your app.\n\n![](/assets/images/oauth/simple-client-created.png)\n  7. Take note of the client ID and client secret. You’ll need these in the [next step](/guides/oauth-connection/simple-client.html#step-1-client-requests-an-access-token) to initiate the OAuth flow.\n\n     * **Client ID** \\- This identifies the client responsible for the OAuth request. A unique key for the client application.\n     * **Client Secret** \\- A client secret is a secret known only to your application and the authorization server. It protects your resources by only granting tokens to authorized requestors. Always store the client secret key securely; never reveal it publicly! If you suspect that the secret key has been compromised, regenerate it immediately by adding a new secret to the client application.\n\n\n",
      "timestamp": "2025-06-23T15:18:00.835138"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/auth-code-grant.html",
      "title": "OAuth 2.0: Authorization code grant flow | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>OAuth 2.0: Authorization code grant flow</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  9 minutes\n                                \n                            </p> -->\n<p>The Authorization Code Flow is the most secure and preferred method to authenticate users via OpenID Connect. The authorization grant is defined in detail in <a href=\"https://tools.ietf.org/html/rfc6749#section-4.1\">RFC6749 sec-4.1</a>. This grant requires the user to explicitly authenticate themselves and authorize the application initiating the grant.</p>\n<p>From a hotel user’s view, it looks like this:</p>\n<img src=\"/assets/images/oauth/connect-flow.png\">\n<p>In this flow, protected resources that a client app requests belong to an end user (resource owner).\nBrowsers that could expose protected resources to third-parties do not receive access tokens.\nInstead, they receive an authorization code that on its own does not provide direct access to\nprotected resources.</p>\n<p>You just need to follow a two-step process in order to get a new access token.</p>\n<ul>\n<li>\n<p>In the first part of the process (steps 1 - 4) you will send the user to the identity server to\ngive consent to the app. Afterwards, the identity server will redirect the user back to your app\nusing the configured redirect uri. This is where you will get your authorization code.</p>\n</li>\n<li>\n<p>In the second part of the process (steps 5 and 6) you will make a request to the identity server\nwith your authorization code. To which it will respond with your access and refresh tokens.</p>\n<img src=\"/assets/images/oauth/auth_code_flow_first.png\"/>\n</li>\n<li>\n<p>Here’s how the app uses the token to request resources (steps 7 and 8) from the resource server.</p>\n<img src=\"/assets/images/oauth/auth_code_flow_second.png\"/>\n<p>We will go more into detail for each step a bit later in the topic.</p>\n</li>\n</ul>\n<hr/>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<h3 id=\"create-a-client-app-and-get-client-credentials\">Create a client app and get client credentials</h3>\n<p>After creating an\n<a href=\"https://identity.apaleo.com/account/register-dev-account\">apaleo developer account</a>, the next step\nto create your app is to register it at\n<a href=\"https://app.apaleo.com/apps/platform-apps/create\">My store apps</a> in apaleo.</p>\n<p>The registration process involves providing basic details of your app like redirect URIs and the\nscopes that you require for the endpoints that you want to access.</p>\n<p>If you need to make some changes to your client, you can edit it at any point in the future. The\nregistration process is not considered as a part of the authorization flow.</p>\n<p>To learn how to create your client, go to\n<a href=\"/guides/oauth-connection/register-connect-client-app\">Register the OAuth connect client (apaleo store) app</a>.</p>\n<p>Before you start the OAuth flow, you need to prepare a few things.\n<a href=\"/guides/oauth-connection/create-landing-page\">Here’s what</a> you need to do.</p>\n<hr/>\n<h2 id=\"step-1-get-users-consent\">Step 1. Get user’s consent</h2>\n<p>The purpose of this step is to obtain consent from the user to invoke the API to do certain things\n(specified in ‘scope’) on behalf of the user.</p>\n<p>To begin the authorization code flow, your app should first send the user to the consent screen:</p>\n<pre><code>https://identity.apaleo.com/connect/authorize?response_type=code&amp;scope=offline_access openid profile availability.read rates.read reservations.read identity:account-users.read&amp;client_id=SDXE-AC-MYAPP&amp;redirect_uri=https://example.apaleo.com&amp;state=RANDOM_VALUE\n</code></pre>\n<p>This URL performs the following things:</p>\n<ul>\n<li>\n<p>It displays a consent screen to the user with the requested scopes.</p>\n</li>\n<li>\n<p>Once the user authorizes the request, they are redirected to your specified <code>redirect_uri</code>.</p>\n<p>After the user accepts or denies your request, the apaleo identity API redirects the user back to\nyour <code>redirect_uri</code>.</p>\n</li>\n</ul>\n<blockquote>\n<p>Calling the authorize URL opens the consent screen. When you are asked to log in, use the\napaleo credentials, not your client ID and client secret.</p>\n</blockquote>\n<img src=\"/assets/images/oauth/consent.png\"/>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Key</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">response_type</td>\n<td align=\"left\">Indicates the kind of credential that apaleo will return (code vs. token). For this flow, the value must be <code>code</code>.</td>\n</tr>\n<tr>\n<td align=\"left\">scope</td>\n<td align=\"left\">The scopes for which you want to request authorization. These must be separated by a space. For example, to create reservations and get the list of properties use <code>scope=reservations.create properties.read</code>. <strong>Note</strong>: If you using OpenID Connect library, then the request must include the <code>openid</code> scope in the <code>scope</code> parameter.</td>\n</tr>\n<tr>\n<td align=\"left\">client_id</td>\n<td align=\"left\">The apaleo generated Client ID for your connect app.</td>\n</tr>\n<tr>\n<td align=\"left\">redirect_uri</td>\n<td align=\"left\">The URL to which apaleo will redirect the browser after the user has granted authorization. The authorization code will be included here, in the <code>code</code> URL parameter. It must match one of the Redirect URIs you specified when registering your client app.</td>\n</tr>\n<tr>\n<td align=\"left\">state</td>\n<td align=\"left\">A randomly generated value provided by your application, which is unique for each authorization request. During the OAuth call-back phase, your application must check that this value matches the one you provided during authorization. This mechanism is essential for <a href=\"https://tools.ietf.org/html/rfc6749#section-10.12\">the security of your application</a>.</td>\n</tr>\n</tbody>\n</table>\n<p>If the user approves the access request, the response contains an authorization code and the <code>state</code>\nparameter (if included in the request). The response query string is as follows:</p>\n<pre><code>https://example.apaleo.com/?code=NqSyesO......Geykw6Jc&amp;scope=openid%20profile%20availability.read%20rates.read%20reservations.read%20identity%3Aaccount-users.read%20offline_access&amp;state=RANDOM_VALUE&amp;session_state=djH5mv...MS2EB23p\n</code></pre><table>\n<thead>\n<tr>\n<th align=\"left\">Query Parameter</th>\n<th align=\"left\">Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">code</td>\n<td align=\"left\">An authorization code that can be exchanged for an access token. Note that codes are single use only, so cannot be reused.</td>\n</tr>\n<tr>\n<td align=\"left\">state</td>\n<td align=\"left\">The value of the <code>state</code> parameter supplied in the request.</td>\n</tr>\n<tr>\n<td align=\"left\">session_state</td>\n<td align=\"left\">The <code>session_state</code> value contains a salted cryptographic hash of Client ID, origin URL, and OpenID Provider’s browser state.</td>\n</tr>\n</tbody>\n</table>\n<p>If the user does not approve the request, the response contains an error message. The response query\nstring is as follows:</p>\n<pre><code>https://identity.apaleo.com/home/error?errorId=CfDJ8DA-p8Ff..........nj8\n</code></pre><table>\n<thead>\n<tr>\n<th align=\"left\">Query Parameter</th>\n<th align=\"left\">Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">error</td>\n<td align=\"left\">The reason it failed, for example: “errorId”.</td>\n</tr>\n</tbody>\n</table>\n<hr/>\n<h2 id=\"step-2-exchange-the-authorization-code-for-an-access-token\">Step 2. Exchange the authorization code for an access token</h2>\n<p>Now that you have an authorization code, you must exchange it for an access token that can be used\nto call apaleo API. Using the authorization code (code) from the previous step, you will need to\nPOST to the token URL.</p>\n<pre><code>POST https://identity.apaleo.com/connect/token\nContent-Type: application/x-www-form-urlencoded\ngrant_type=authorization_code&amp;code=&lt;my-authorization-code&gt;&amp;redirect_uri=&lt;https://example.apaleo.com&gt;\n</code></pre>\n<h3 id=\"example-curl-request\">Example cURL request</h3>\n<p>You can test the creation of token by running the following\n<a href=\"https://curl.haxx.se/download.html\">cURL</a> command.</p>\n<blockquote>\n<p>On Windows, use\n<a href=\"https://docs.microsoft.com/en-us/windows/wsl/install-win10\">Windows Subsystem for Linux (WSL)</a> to\nrun the cURL command.</p>\n</blockquote>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">curl</span><span class=\"w\"> </span><span class=\"err\">-X</span><span class=\"w\"> </span><span class=\"err\">POST</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n  </span><span class=\"err\">https://identity.apaleo.com/connect/token</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n  </span><span class=\"err\">-H</span><span class=\"w\"> </span><span class=\"err\">'Content-Type:</span><span class=\"w\"> </span><span class=\"err\">application/x-www-form-urlencoded'</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n  </span><span class=\"err\">-d</span><span class=\"w\"> </span><span class=\"err\">'client_id=SDXE-AC-MYAPP&amp;client_secret=ZiEWFgFeSP......</span><span class=\"mi\">5</span><span class=\"err\">yhTgsZgx&amp;grant_type=authorization_code&amp;code=NqS......kGey</span><span class=\"mi\">6</span><span class=\"err\">Jc&amp;redirect_uri=https://example.apaleo.com'</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n</span></code></pre></div></div>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Key</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">client_id</td>\n<td align=\"left\">The apaleo generated Client ID for your connect app.</td>\n</tr>\n<tr>\n<td align=\"left\">client_secret</td>\n<td align=\"left\">The apaleo generated Client Secret for your connect app.</td>\n</tr>\n<tr>\n<td align=\"left\">code</td>\n<td align=\"left\">The authorization code received from the initial <code>authorize</code> call.</td>\n</tr>\n<tr>\n<td align=\"left\">redirect_uri</td>\n<td align=\"left\">This parameter is used for validation only (there is no actual redirection). The value of this parameter must exactly match the value of <code>redirect_uri</code> supplied when requesting the authorization code.</td>\n</tr>\n</tbody>\n</table>\n<p>On success, the response contains the access_token, refresh_token, id_token, expires_in, and\ntoken_type values, for example:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"id_token\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"eyJhbG.............aGV_EyOANg\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"access_token\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"eyJhbGciOi.....Upe6r6hHNLiNQ\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"expires_in\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3600</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"token_type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Bearer\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"refresh_token\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"_A4CpoIDT.......qYEpxEW8g\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"scope\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"openid profile availability.read rates.read reservations.read identity:account-users.read offline_access\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Key</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">access_token</td>\n<td align=\"left\">An access token that can be provided in subsequent calls, for example to apaleo API services.</td>\n</tr>\n<tr>\n<td align=\"left\">id_token</td>\n<td align=\"left\">It is sent to the client application as part of an <a href=\"http://openid.net/specs/openid-connect-core-1_0.html\">OpenID Connect</a> flow. It is used by the client to authenticate the user.</td>\n</tr>\n<tr>\n<td align=\"left\">expires_in</td>\n<td align=\"left\">The time period (in seconds) for which the access token is valid. After this time period, the token will no longer be valid, and a new one must be retrieved.</td>\n</tr>\n<tr>\n<td align=\"left\">token_type</td>\n<td align=\"left\">How the access token may be used: always <code>Bearer</code>.</td>\n</tr>\n<tr>\n<td align=\"left\">refresh_token</td>\n<td align=\"left\">This token is included if the <code>offline_access</code> scope was requested and granted. This is a long-lived token that can be used to automatically generate a new <code>access_token</code> when the current one expires. This should be kept confidential.</td>\n</tr>\n<tr>\n<td align=\"left\">scope</td>\n<td align=\"left\">A space-separated list of scopes that have been granted for this <code>access_token</code>.</td>\n</tr>\n</tbody>\n</table>\n<hr/>\n<h2 id=\"step-3-make-rest-api-calls\">Step 3. Make REST API calls</h2>\n<p>Once the <code>access_token</code> is obtained, it can be used to make calls to the API by passing it as a\nBearer Token in the <code>Authorization</code> header of the HTTP request.</p>\n<p>This sample call, which shows details of a property, includes a <em>bearer</em> token in the\n<code>Authorization</code> request header. This type of token lets you complete an action on behalf of a\nresource owner.</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">GET</span><span class=\"w\"> </span><span class=\"err\">https://api.apaleo.com/inventory/v</span><span class=\"mi\">1</span><span class=\"err\">/properties/MUC</span><span class=\"w\">\n</span><span class=\"err\">Content-Type:</span><span class=\"w\"> </span><span class=\"err\">application/json</span><span class=\"w\">\n</span><span class=\"err\">Authorization:</span><span class=\"w\"> </span><span class=\"err\">Bearer</span><span class=\"w\"> </span><span class=\"err\">my-authentication-token</span><span class=\"w\">\n</span></code></pre></div></div>\n<h3 id=\"example-curl-request-1\">Example cURL request</h3>\n<p>You can test your token by running the following <a href=\"https://curl.haxx.se/download.html\">cURL</a> command.</p>\n<blockquote>\n<p>On Windows, use\n<a href=\"https://docs.microsoft.com/en-us/windows/wsl/install-win10\">Windows Subsystem for Linux (WSL)</a> to\nrun the cURL command.</p>\n</blockquote>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">curl</span><span class=\"w\"> </span><span class=\"err\">-i</span><span class=\"w\"> </span><span class=\"err\">-H</span><span class=\"w\"> </span><span class=\"err\">'Authorization:</span><span class=\"w\"> </span><span class=\"err\">Bearer</span><span class=\"w\"> </span><span class=\"err\">eyJ...Vsg'</span><span class=\"w\"> </span><span class=\"err\">-X</span><span class=\"w\"> </span><span class=\"err\">GET</span><span class=\"w\"> </span><span class=\"err\">https://api.apaleo.com/inventory/v</span><span class=\"mi\">1</span><span class=\"err\">/properties/MUC</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>The response shows the property details:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"MUC\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"MUC\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"isTemplate\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"en\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Hotel Munich\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"en\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"This new cozy hotel is located in the heart of Schwabing and is walking distance from the historical city center.\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"companyName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Hotel München GmbH\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"commercialRegisterEntry\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Amtsgericht München, HRB 145673183\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"taxId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"DE311053702\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"location\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"addressLine1\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Leopoldstraße 8-10\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"postalCode\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"80802\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"city\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Munich\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"countryCode\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"DE\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"bankAccount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"iban\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"DE44 5001 0517 5407 3249 31\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"bic\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"SSKMDEMMXXX\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"bank\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Stadtsparkasse München\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"paymentTerms\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"de\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Zahlbar bei Check In\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"en\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Payment on check-in\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"timeZone\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Europe/Berlin\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"currencyCode\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"EUR\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"created\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"2020-04-08T21:53:26+02:00\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n</img></section>\n</main>",
      "markdown_content": "# OAuth 2.0: Authorization code grant flow\n\nThe Authorization Code Flow is the most secure and preferred method to authenticate users via OpenID Connect. The authorization grant is defined in detail in [RFC6749 sec-4.1](https://tools.ietf.org/html/rfc6749#section-4.1). This grant requires the user to explicitly authenticate themselves and authorize the application initiating the grant.\n\nFrom a hotel user’s view, it looks like this:\n\n![](/assets/images/oauth/connect-flow.png)\n\nIn this flow, protected resources that a client app requests belong to an end user (resource owner). Browsers that could expose protected resources to third-parties do not receive access tokens. Instead, they receive an authorization code that on its own does not provide direct access to protected resources.\n\nYou just need to follow a two-step process in order to get a new access token.\n\n  * In the first part of the process (steps 1 - 4) you will send the user to the identity server to give consent to the app. Afterwards, the identity server will redirect the user back to your app using the configured redirect uri. This is where you will get your authorization code.\n\n  * In the second part of the process (steps 5 and 6) you will make a request to the identity server with your authorization code. To which it will respond with your access and refresh tokens.\n\n![](/assets/images/oauth/auth_code_flow_first.png)\n  * Here’s how the app uses the token to request resources (steps 7 and 8) from the resource server.\n\n![](/assets/images/oauth/auth_code_flow_second.png)\n\nWe will go more into detail for each step a bit later in the topic.\n\n\n\n\n* * *\n\n## Prerequisites\n\n### Create a client app and get client credentials\n\nAfter creating an [apaleo developer account](https://identity.apaleo.com/account/register-dev-account), the next step to create your app is to register it at [My store apps](https://app.apaleo.com/apps/platform-apps/create) in apaleo.\n\nThe registration process involves providing basic details of your app like redirect URIs and the scopes that you require for the endpoints that you want to access.\n\nIf you need to make some changes to your client, you can edit it at any point in the future. The registration process is not considered as a part of the authorization flow.\n\nTo learn how to create your client, go to [Register the OAuth connect client (apaleo store) app](/guides/oauth-connection/register-connect-client-app).\n\nBefore you start the OAuth flow, you need to prepare a few things. [Here’s what](/guides/oauth-connection/create-landing-page) you need to do.\n\n* * *\n\n## Step 1. Get user’s consent\n\nThe purpose of this step is to obtain consent from the user to invoke the API to do certain things (specified in ‘scope’) on behalf of the user.\n\nTo begin the authorization code flow, your app should first send the user to the consent screen:\n    \n    \n    https://identity.apaleo.com/connect/authorize?response_type=code&scope=offline_access openid profile availability.read rates.read reservations.read identity:account-users.read&client_id=SDXE-AC-MYAPP&redirect_uri=https://example.apaleo.com&state=RANDOM_VALUE\n    \n\nThis URL performs the following things:\n\n  * It displays a consent screen to the user with the requested scopes.\n\n  * Once the user authorizes the request, they are redirected to your specified `redirect_uri`.\n\nAfter the user accepts or denies your request, the apaleo identity API redirects the user back to your `redirect_uri`.\n\n\n\n\n> Calling the authorize URL opens the consent screen. When you are asked to log in, use the apaleo credentials, not your client ID and client secret.\n\n![](/assets/images/oauth/consent.png) Key | Description  \n---|---  \nresponse_type | Indicates the kind of credential that apaleo will return (code vs. token). For this flow, the value must be `code`.  \nscope | The scopes for which you want to request authorization. These must be separated by a space. For example, to create reservations and get the list of properties use `scope=reservations.create properties.read`. **Note** : If you using OpenID Connect library, then the request must include the `openid` scope in the `scope` parameter.  \nclient_id | The apaleo generated Client ID for your connect app.  \nredirect_uri | The URL to which apaleo will redirect the browser after the user has granted authorization. The authorization code will be included here, in the `code` URL parameter. It must match one of the Redirect URIs you specified when registering your client app.  \nstate | A randomly generated value provided by your application, which is unique for each authorization request. During the OAuth call-back phase, your application must check that this value matches the one you provided during authorization. This mechanism is essential for [the security of your application](https://tools.ietf.org/html/rfc6749#section-10.12).  \n  \nIf the user approves the access request, the response contains an authorization code and the `state` parameter (if included in the request). The response query string is as follows:\n    \n    \n    https://example.apaleo.com/?code=NqSyesO......Geykw6Jc&scope=openid%20profile%20availability.read%20rates.read%20reservations.read%20identity%3Aaccount-users.read%20offline_access&state=RANDOM_VALUE&session_state=djH5mv...MS2EB23p\n    \n\nQuery Parameter | Value  \n---|---  \ncode | An authorization code that can be exchanged for an access token. Note that codes are single use only, so cannot be reused.  \nstate | The value of the `state` parameter supplied in the request.  \nsession_state | The `session_state` value contains a salted cryptographic hash of Client ID, origin URL, and OpenID Provider’s browser state.  \n  \nIf the user does not approve the request, the response contains an error message. The response query string is as follows:\n    \n    \n    https://identity.apaleo.com/home/error?errorId=CfDJ8DA-p8Ff..........nj8\n    \n\nQuery Parameter | Value  \n---|---  \nerror | The reason it failed, for example: “errorId”.  \n  \n* * *\n\n## Step 2. Exchange the authorization code for an access token\n\nNow that you have an authorization code, you must exchange it for an access token that can be used to call apaleo API. Using the authorization code (code) from the previous step, you will need to POST to the token URL.\n    \n    \n    POST https://identity.apaleo.com/connect/token\n    Content-Type: application/x-www-form-urlencoded\n    grant_type=authorization_code&code=<my-authorization-code>&redirect_uri=<https://example.apaleo.com>\n    \n\n### Example cURL request\n\nYou can test the creation of token by running the following [cURL](https://curl.haxx.se/download.html) command.\n\n> On Windows, use [Windows Subsystem for Linux (WSL)](https://docs.microsoft.com/en-us/windows/wsl/install-win10) to run the cURL command.\n    \n    \n    curl -X POST \\\n      https://identity.apaleo.com/connect/token \\\n      -H 'Content-Type: application/x-www-form-urlencoded' \\\n      -d 'client_id=SDXE-AC-MYAPP&client_secret=ZiEWFgFeSP......5yhTgsZgx&grant_type=authorization_code&code=NqS......kGey6Jc&redirect_uri=https://example.apaleo.com' \\\n    \n\nKey | Description  \n---|---  \nclient_id | The apaleo generated Client ID for your connect app.  \nclient_secret | The apaleo generated Client Secret for your connect app.  \ncode | The authorization code received from the initial `authorize` call.  \nredirect_uri | This parameter is used for validation only (there is no actual redirection). The value of this parameter must exactly match the value of `redirect_uri` supplied when requesting the authorization code.  \n  \nOn success, the response contains the access_token, refresh_token, id_token, expires_in, and token_type values, for example:\n    \n    \n    {\n      \"id_token\": \"eyJhbG.............aGV_EyOANg\",\n      \"access_token\": \"eyJhbGciOi.....Upe6r6hHNLiNQ\",\n      \"expires_in\": 3600,\n      \"token_type\": \"Bearer\",\n      \"refresh_token\": \"_A4CpoIDT.......qYEpxEW8g\",\n      \"scope\": \"openid profile availability.read rates.read reservations.read identity:account-users.read offline_access\"\n    }\n    \n\nKey | Description  \n---|---  \naccess_token | An access token that can be provided in subsequent calls, for example to apaleo API services.  \nid_token | It is sent to the client application as part of an [OpenID Connect](http://openid.net/specs/openid-connect-core-1_0.html) flow. It is used by the client to authenticate the user.  \nexpires_in | The time period (in seconds) for which the access token is valid. After this time period, the token will no longer be valid, and a new one must be retrieved.  \ntoken_type | How the access token may be used: always `Bearer`.  \nrefresh_token | This token is included if the `offline_access` scope was requested and granted. This is a long-lived token that can be used to automatically generate a new `access_token` when the current one expires. This should be kept confidential.  \nscope | A space-separated list of scopes that have been granted for this `access_token`.  \n  \n* * *\n\n## Step 3. Make REST API calls\n\nOnce the `access_token` is obtained, it can be used to make calls to the API by passing it as a Bearer Token in the `Authorization` header of the HTTP request.\n\nThis sample call, which shows details of a property, includes a _bearer_ token in the `Authorization` request header. This type of token lets you complete an action on behalf of a resource owner.\n    \n    \n    GET https://api.apaleo.com/inventory/v1/properties/MUC\n    Content-Type: application/json\n    Authorization: Bearer my-authentication-token\n    \n\n### Example cURL request\n\nYou can test your token by running the following [cURL](https://curl.haxx.se/download.html) command.\n\n> On Windows, use [Windows Subsystem for Linux (WSL)](https://docs.microsoft.com/en-us/windows/wsl/install-win10) to run the cURL command.\n    \n    \n    curl -i -H 'Authorization: Bearer eyJ...Vsg' -X GET https://api.apaleo.com/inventory/v1/properties/MUC\n    \n\nThe response shows the property details:\n    \n    \n    {\n      \"id\": \"MUC\",\n      \"code\": \"MUC\",\n      \"isTemplate\": false,\n      \"name\": {\n        \"en\": \"Hotel Munich\"\n      },\n      \"description\": {\n        \"en\": \"This new cozy hotel is located in the heart of Schwabing and is walking distance from the historical city center.\"\n      },\n      \"companyName\": \"Hotel München GmbH\",\n      \"commercialRegisterEntry\": \"Amtsgericht München, HRB 145673183\",\n      \"taxId\": \"DE311053702\",\n      \"location\": {\n        \"addressLine1\": \"Leopoldstraße 8-10\",\n        \"postalCode\": \"80802\",\n        \"city\": \"Munich\",\n        \"countryCode\": \"DE\"\n      },\n      \"bankAccount\": {\n        \"iban\": \"DE44 5001 0517 5407 3249 31\",\n        \"bic\": \"SSKMDEMMXXX\",\n        \"bank\": \"Stadtsparkasse München\"\n      },\n      \"paymentTerms\": {\n        \"de\": \"Zahlbar bei Check In\",\n        \"en\": \"Payment on check-in\"\n      },\n      \"timeZone\": \"Europe/Berlin\",\n      \"currencyCode\": \"EUR\",\n      \"created\": \"2020-04-08T21:53:26+02:00\"\n    }\n    \n",
      "timestamp": "2025-06-23T15:18:01.561544"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/refresh-token.html",
      "title": "OAuth 2.0: Refresh token grant flow | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>OAuth 2.0: Refresh token grant flow</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  3 minutes\n                                \n                            </p> -->\n<p>The Refresh Token grant type is used by clients to exchange a refresh token for an access token when the access token has expired. You can get refresh tokens only for the\n<a href=\"/guides/oauth-connection/auth-code-grant\">OAuth 2.0: Authorization code flow</a>.</p>\n<img src=\"/assets/images/oauth/refresh_token_flow.png\">\n<p>New OAuth2 access tokens have expirations. Tokens return an <code>expires_in</code> field indicating how long the token will last.</p>\n<p>A refresh token is a special kind of token that contains the information required to obtain a new\naccess token or ID token. Usually, you will need a new access token only after the previous one\nexpires.</p>\n<h2 id=\"client-requests-a-new-token\">Client requests a new token</h2>\n<p>The refresh token grant allows your app to ask apaleo to issue a new <code>access_token</code> directly,\nwithout re-authenticating the user. This will work as long as the refresh token has not been\nrevoked.</p>\n<p>Refresh tokens are subject to strict storage requirements to ensure that they are not leaked.</p>\n<p>To refresh your token, using the <code>refresh_token</code> you already got during authorization, make a <code>POST</code>\nrequest to the <code>https://identity.apaleo.com/connect/token</code> endpoint in the authentication API, using\n<code>grant_type=refresh_token</code>.</p>\n<pre><code>POST https://identity.apaleo.com/connect/token\nContent-Type: application/x-www-form-urlencoded\ngrant_type=refresh_token&amp;client_id=SDXE-AC-MYAPP&amp;client_secret=ZiEWFgFeSP......5yhTgsZgx&amp;refresh_token=_A4CpoIDT.......qYEpxEW8g\n</code></pre><table>\n<thead>\n<tr>\n<th>Request</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Method</td>\n<td><code>POST</code></td>\n</tr>\n<tr>\n<td>URL</td>\n<td>Uses the OAuth endpoint <code>https://identity.apaleo.com/connect/token</code>.</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>Header</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Authorization</code></td>\n<td><code>Basic</code> authorization, using the <code>client id</code> and <code>client secret</code> of the OAuth client.</td>\n</tr>\n<tr>\n<td><code>Content-Type</code></td>\n<td><code>application/x-www-form-urlencoded</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"example-curl-request\">Example cURL request</h3>\n<p>You can test the creation of token by running the following\n<a href=\"https://curl.haxx.se/download.html\">cURL</a> command.</p>\n<blockquote>\n<p>On Windows, use\n<a href=\"https://docs.microsoft.com/en-us/windows/wsl/install-win10\">Windows Subsystem for Linux (WSL)</a> to\nrun the cURL command.</p>\n</blockquote>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">curl</span><span class=\"w\"> </span><span class=\"err\">-X</span><span class=\"w\"> </span><span class=\"err\">POST</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n  </span><span class=\"err\">https://identity.apaleo.com/connect/token</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n  </span><span class=\"err\">-H</span><span class=\"w\"> </span><span class=\"err\">'Content-Type:</span><span class=\"w\"> </span><span class=\"err\">application/x-www-form-urlencoded'</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n  </span><span class=\"err\">--data</span><span class=\"w\">  </span><span class=\"err\">client_id=SDXE-AC-MYAPP</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n  </span><span class=\"err\">--data</span><span class=\"w\">  </span><span class=\"err\">client_secret=ZiEWFgFeSP......</span><span class=\"mi\">5</span><span class=\"err\">yhTgsZgx</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n  </span><span class=\"err\">--data</span><span class=\"w\">  </span><span class=\"err\">grant_type=refresh_token</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n  </span><span class=\"err\">--data</span><span class=\"w\">  </span><span class=\"err\">refresh_token=E</span><span class=\"mi\">042</span><span class=\"err\">F......</span><span class=\"mi\">5</span><span class=\"err\">EC</span><span class=\"mi\">95</span><span class=\"w\">\n</span></code></pre></div></div>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Key</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">client_id</td>\n<td align=\"left\">The ID assigned to your app when it was registered.</td>\n</tr>\n<tr>\n<td align=\"left\">client_secret</td>\n<td align=\"left\">Your client application’s secret.</td>\n</tr>\n<tr>\n<td align=\"left\">grant_type</td>\n<td align=\"left\">The value <code>refresh_token</code>.</td>\n</tr>\n<tr>\n<td align=\"left\">refresh_token</td>\n<td align=\"left\">The <code>refresh_token</code> that you already got when you <a href=\"/guides/oauth-connection/auth-code-grant.html#step-2-exchange-the-authorization-code-for-an-access-token\">exchanged authorization code for token</a> in the OAuth 2.0: Authorization code flow.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"authorization-server-grants-a-new-token\">Authorization server grants a new token</h2>\n<p>After verifying the request, the identity server sends a response with a new access token to the\nconnected app.</p>\n<p>The response will include a new <code>access_token</code>, its type, its lifetime (in seconds), and the\n<code>id_token</code>.</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"id_token\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"eyJ...b9w\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"access_token\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"eyJ...Vsg\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"expires_in\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3600</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"token_type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Bearer\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"refresh_token\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"E042F......5EC95\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"scope\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"openid profile availability.read rates.read reservations.read identity:account-users.read offline_access\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>You should only ask for a new token if the <code>access_token</code> has expired, or you want to refresh the\nclaims contained in the <code>id_token</code>. Calling the endpoint to get a new <code>access_token</code> every time you\ncall an API works, but we wouldn’t call it the best practice.</p>\n<p>During implementation or debugging, you might want to check the contents of those token, for\nexample, to read the account code. Here’s one handy tool <a href=\"https://jwt.io/\">jwt.io</a>. They write\n“[…] We do not record tokens, all validation and debugging is done on the client side”, and it\nshould be okay to use them, but - better safe than sorry. We recommend to be cautious, and not post\nthe production tokens of real customers there.</p>\n</img></section>\n</main>",
      "markdown_content": "# OAuth 2.0: Refresh token grant flow\n\nThe Refresh Token grant type is used by clients to exchange a refresh token for an access token when the access token has expired. You can get refresh tokens only for the [OAuth 2.0: Authorization code flow](/guides/oauth-connection/auth-code-grant).\n\n![](/assets/images/oauth/refresh_token_flow.png)\n\nNew OAuth2 access tokens have expirations. Tokens return an `expires_in` field indicating how long the token will last.\n\nA refresh token is a special kind of token that contains the information required to obtain a new access token or ID token. Usually, you will need a new access token only after the previous one expires.\n\n## Client requests a new token\n\nThe refresh token grant allows your app to ask apaleo to issue a new `access_token` directly, without re-authenticating the user. This will work as long as the refresh token has not been revoked.\n\nRefresh tokens are subject to strict storage requirements to ensure that they are not leaked.\n\nTo refresh your token, using the `refresh_token` you already got during authorization, make a `POST` request to the `https://identity.apaleo.com/connect/token` endpoint in the authentication API, using `grant_type=refresh_token`.\n    \n    \n    POST https://identity.apaleo.com/connect/token\n    Content-Type: application/x-www-form-urlencoded\n    grant_type=refresh_token&client_id=SDXE-AC-MYAPP&client_secret=ZiEWFgFeSP......5yhTgsZgx&refresh_token=_A4CpoIDT.......qYEpxEW8g\n    \n\nRequest | Value  \n---|---  \nMethod | `POST`  \nURL | Uses the OAuth endpoint `https://identity.apaleo.com/connect/token`.  \nHeader | Value  \n---|---  \n`Authorization` | `Basic` authorization, using the `client id` and `client secret` of the OAuth client.  \n`Content-Type` | `application/x-www-form-urlencoded`  \n  \n### Example cURL request\n\nYou can test the creation of token by running the following [cURL](https://curl.haxx.se/download.html) command.\n\n> On Windows, use [Windows Subsystem for Linux (WSL)](https://docs.microsoft.com/en-us/windows/wsl/install-win10) to run the cURL command.\n    \n    \n    curl -X POST \\\n      https://identity.apaleo.com/connect/token \\\n      -H 'Content-Type: application/x-www-form-urlencoded' \\\n      --data  client_id=SDXE-AC-MYAPP \\\n      --data  client_secret=ZiEWFgFeSP......5yhTgsZgx \\\n      --data  grant_type=refresh_token \\\n      --data  refresh_token=E042F......5EC95\n    \n\nKey | Description  \n---|---  \nclient_id | The ID assigned to your app when it was registered.  \nclient_secret | Your client application’s secret.  \ngrant_type | The value `refresh_token`.  \nrefresh_token | The `refresh_token` that you already got when you [exchanged authorization code for token](/guides/oauth-connection/auth-code-grant.html#step-2-exchange-the-authorization-code-for-an-access-token) in the OAuth 2.0: Authorization code flow.  \n  \n## Authorization server grants a new token\n\nAfter verifying the request, the identity server sends a response with a new access token to the connected app.\n\nThe response will include a new `access_token`, its type, its lifetime (in seconds), and the `id_token`.\n    \n    \n    {\n      \"id_token\": \"eyJ...b9w\",\n      \"access_token\": \"eyJ...Vsg\",\n      \"expires_in\": 3600,\n      \"token_type\": \"Bearer\",\n      \"refresh_token\": \"E042F......5EC95\",\n      \"scope\": \"openid profile availability.read rates.read reservations.read identity:account-users.read offline_access\"\n    }\n    \n\nYou should only ask for a new token if the `access_token` has expired, or you want to refresh the claims contained in the `id_token`. Calling the endpoint to get a new `access_token` every time you call an API works, but we wouldn’t call it the best practice.\n\nDuring implementation or debugging, you might want to check the contents of those token, for example, to read the account code. Here’s one handy tool [jwt.io](https://jwt.io/). They write “[…] We do not record tokens, all validation and debugging is done on the client side”, and it should be okay to use them, but - better safe than sorry. We recommend to be cautious, and not post the production tokens of real customers there.\n",
      "timestamp": "2025-06-23T15:18:02.270358"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/simple-client.html",
      "title": "OAuth 2.0 - Client credentials grant flow | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>OAuth 2.0 - Client credentials grant flow</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  8 minutes\n                                \n                            </p> -->\n<p>In the client credentials flow, the Authorization Server provides an access token directly to the\nclient app after verifying the client app’s client ID and client secret. The client credentials\ngrant type is the least secure grant type. Therefore, it is only recommended for internal client\napps highly trusted by the resource server (for example, when the client app and the resource server\nare part of the same account (hotel organization)).</p>\n<p>In contrast to the other OAuth flows used to obtain access tokens, this flow does not require a user\nlogin and the client does not redirect a user’s web browser to a username/password login process.\nThe client app acts on its own behalf and assumes the role of the resource owner.</p>\n<blockquote>\n<p>You must only use this flow if you trust the client. In other words, if the client is a\ncomputer that your hotel owns, then it will be secure and you can ensure the safety of the client\ncredentials. Public clients can’t be trusted to identify themselves using client authentication, so\nthat would not be a good candidate for client credentials grant flow.</p>\n</blockquote>\n<p>The following image shows an outline of the flow:</p>\n<img src=\"/assets/images/oauth/client_credentials_flow.png\">\n<p>Client credentials grant provides the following endpoint:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">HTTP Method</th>\n<th align=\"left\">URI</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">POST</td>\n<td align=\"left\"><a href=\"https://identity.apaleo.com/connect/token\">https://identity.apaleo.com/connect/token</a></td>\n<td align=\"left\">Token endpoint which issues access tokens.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"why-we-recommend-the-connect-clients\">Why we recommend the connect clients?</h2>\n<p>Normally we recommend you to use the <a href=\"/guides/oauth-connection/auth-code-grant\">connect flow</a>\nin order to communicate with the apaleo APIs because when you use simple clients, you would need to\ncreate new client credentials per each hotel that you want to target with your application. This\nmeans that for every hotel account that you want to integrate with your application, you would need\nto request new credentials following the steps below.</p>\n<p>This is a limitation that disappears with the connect clients, as you will only need for the account\nadmin to authorize your application, and you would get immediate access to their account. This means\nthat you basically have access to all accounts with a single set of credentials.</p>\n<p>Additionally, connect clients are also very simple to integrate. If you want to learn more about\nconnect clients, go to <a href=\"/guides/oauth-connection/auth-code-grant\">OAuth 2.0: Authorization code flow</a>.</p>\n<p>However, if you are completely sure, that the simple client is the way to go for you. Just follow\nthe following steps and you should be all set.</p>\n<p><a href=\"#step-1-client-requests-an-access-token\">Step 1. Client requests an access token</a></p>\n<p><a href=\"#step-2-start-making-rest-api-calls\">Step 2. Start making REST API calls</a></p>\n<hr/>\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<h3 id=\"create-a-client-app-and-get-client-credentials\">Create a client app and get client credentials</h3>\n<p>After creating the <a href=\"https://identity.apaleo.com/account/register-dev-account\">apaleo developer account</a>, the next step of creating an app is to <a href=\"/guides/oauth-connection/register-simple-client-app\">register the OAuth simple client (custom) app</a> in apaleo.</p>\n<p>The registration process involves entering basic client app details and the scopes that you require for the endpoints that you want to access.</p>\n<p>If desired, you can edit a registered client app at any point in the future. The registration\nprocess is not considered as a part of the authorization flow</p>\n<p>To learn how to create your client, go to <a href=\"/guides/oauth-connection/register-simple-client-app\">Register the OAuth simple client (custom) app</a>.</p>\n<hr/>\n<h2 id=\"step-1-client-requests-an-access-token\">Step 1. Client requests an access token</h2>\n<p>You can obtain an access token by making a POST request to the token endpoint with required\nparameters. Combine your client id and secret into a string, separated by colon, it would look\nsomething like <code>yourClientId:YourClientSecret</code> and encode that string with <code>Base64</code>. This will\nresult in one long string, similar to the one you see below:</p>\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">eW91ckNsaWVudElkOllvdXJDbGllbnRTZWNyZXQ</span><span class=\"o\">=</span>\n</code></pre></div></div>\n<p>Now that you have your client credentials in a Base64 string, it is time to request your access\ntoken. In order to do that make a request to the\n<a href=\"https://identity.apaleo.com/connect/token\">https://identity.apaleo.com/connect/token</a>, endpoint.</p>\n<p>This endpoint supports the following headers:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Header</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Authorization</td>\n<td align=\"left\"><strong>Required</strong>. Encode <code>&lt;ClientId&gt;:&lt;ClientSecret&gt;</code> with Base64 and specify it with <code>Basic</code> scheme.</td>\n</tr>\n<tr>\n<td align=\"left\">Content-Type</td>\n<td align=\"left\"><strong>Required</strong>. Set to <code>application/x-www-form-urlencoded</code></td>\n</tr>\n</tbody>\n</table>\n<p>This endpoint supports the following parameters:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Parameter</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">grant_type</td>\n<td align=\"left\"><strong>Required</strong>. This parameter specifies a grant type. Set to <code>client_credentials</code> to use Client Credentials Grant</td>\n</tr>\n</tbody>\n</table>\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">POST</span> <span class=\"nx\">https</span><span class=\"p\">:</span><span class=\"c1\">//identity.apaleo.com/connect/token</span>\n<span class=\"nx\">Authorization</span><span class=\"p\">:</span> <span class=\"nx\">Basic</span> <span class=\"o\">&lt;</span><span class=\"nx\">base64</span> <span class=\"nx\">encoded</span> <span class=\"dl\">\"</span><span class=\"s2\">clientId:clientSecret</span><span class=\"dl\">\"</span><span class=\"o\">&gt;</span>\n<span class=\"nx\">Content</span><span class=\"o\">-</span><span class=\"nx\">Type</span><span class=\"p\">:</span> <span class=\"nx\">application</span><span class=\"o\">/</span><span class=\"nx\">x</span><span class=\"o\">-</span><span class=\"nx\">www</span><span class=\"o\">-</span><span class=\"nx\">form</span><span class=\"o\">-</span><span class=\"nx\">urlencoded</span>\n<span class=\"nx\">grant_type</span><span class=\"o\">=</span><span class=\"nx\">client_credentials</span>\n</code></pre></div></div>\n<h3 id=\"example-curl-request\">Example cURL request</h3>\n<p>You can test the creation of token by running the following\n<a href=\"https://curl.haxx.se/download.html\">cURL</a> command.</p>\n<blockquote>\n<p>On Windows, use <a href=\"https://docs.microsoft.com/en-us/windows/wsl/install-win10\">Windows Subsystem for Linux (WSL)</a> to run the cURL command.</p>\n</blockquote>\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">curl</span> <span class=\"o\">-</span><span class=\"nx\">X</span> <span class=\"nx\">POST</span> <span class=\"dl\">'</span><span class=\"s1\">https://identity.apaleo.com/connect/token</span><span class=\"dl\">'</span> <span class=\"o\">\\</span>\n  <span class=\"o\">-</span><span class=\"nx\">H</span> <span class=\"dl\">'</span><span class=\"s1\">Content-Type: application/x-www-form-urlencoded</span><span class=\"dl\">'</span> <span class=\"o\">\\</span>\n  <span class=\"o\">-</span><span class=\"nx\">H</span> <span class=\"dl\">'</span><span class=\"s1\">Authorization: Basic U0RYRS1TNWUFQ......UZHWHZaRm1wc1labTc=</span><span class=\"dl\">'</span> <span class=\"o\">\\</span>\n  <span class=\"o\">-</span><span class=\"nx\">d</span> <span class=\"dl\">'</span><span class=\"s1\">grant_type=client_credentials</span><span class=\"dl\">'</span> <span class=\"o\">\\</span>\n</code></pre></div></div>\n<p>The authorization server returns a JSON-formatted response when your request succeeds. If the\nexample request above succeeds, the server returns a response like this:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"access_token\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"eyJhbGci............6XUKmNJyyNRA\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"expires_in\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3600</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"token_type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Bearer\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"scope\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"availability.read companies.read identity:account-users.manage identity:account-users.read offers.read reservations.manage reservations.read\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Key</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">access_token</td>\n<td align=\"left\">The value of the Access Token. This is what the client will need to access the protected resource APIs.</td>\n</tr>\n<tr>\n<td align=\"left\">expires_in</td>\n<td align=\"left\">The time period (in seconds) for which the access token is valid. After this time period, the token will no longer be valid, and a new one must be retrieved.</td>\n</tr>\n<tr>\n<td align=\"left\">token_type</td>\n<td align=\"left\">Type of token. In our implementation this will always be <code>Bearer</code>.</td>\n</tr>\n<tr>\n<td align=\"left\">scope</td>\n<td align=\"left\">A space-separated list of scopes which have been granted for this <code>access_token</code>.</td>\n</tr>\n</tbody>\n</table>\n<p>The JWT looks like this:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"nbf\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1591448890</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"exp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1591452490</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"iss\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://identity.apaleo.com\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"aud\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"api\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"identity_server\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"notifications\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"apaleo\"</span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"client_id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"SDXE-SP-SIMPLEAPP\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"account_code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"SDXE\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"scope\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"availability.read\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"companies.read\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"offers.read\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"reservations.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"reservations.read\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"identity:account-users.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"identity:account-users.read\"</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>The client app can make subsequent requests to the protected resource APIs until the access token\nreceived from the Authorization Server expires, in which case the process repeats.</p>\n<hr/>\n<h2 id=\"step-2-start-making-rest-api-calls\">Step 2. Start making REST API calls</h2>\n<p>Once the <code>access_token</code> has been obtained, it can be used to make calls to the protected resource\nAPIs by passing it as a Bearer Token in the <code>Authorization</code> header of the HTTP request.</p>\n<p>This sample call, which shows details of a property, includes a <em>bearer</em> token in the\n<code>Authorization</code> request header. This type of token lets you complete an action on behalf of a\nresource owner.</p>\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">GET</span> <span class=\"nx\">https</span><span class=\"p\">:</span><span class=\"c1\">//api.apaleo.com/inventory/v1/properties/MUC</span>\n<span class=\"nx\">Content</span><span class=\"o\">-</span><span class=\"nx\">Type</span><span class=\"p\">:</span> <span class=\"nx\">application</span><span class=\"o\">/</span><span class=\"nx\">json</span>\n<span class=\"nx\">Authorization</span><span class=\"p\">:</span> <span class=\"nx\">Bearer</span> <span class=\"nx\">my</span><span class=\"o\">-</span><span class=\"nx\">authentication</span><span class=\"o\">-</span><span class=\"nx\">token</span>\n</code></pre></div></div>\n<h3 id=\"example-curl-request-1\">Example cURL request</h3>\n<p>You can test your token by running the following <a href=\"https://curl.haxx.se/download.html\">cURL</a> command.</p>\n<blockquote>\n<p>On Windows, use <a href=\"https://docs.microsoft.com/en-us/windows/wsl/install-win10\">Windows Subsystem for Linux (WSL)</a> to run the cURL command.</p>\n</blockquote>\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nx\">curl</span> <span class=\"o\">-</span><span class=\"nx\">i</span> <span class=\"o\">-</span><span class=\"nx\">H</span> <span class=\"dl\">'</span><span class=\"s1\">Authorization: Bearer eyJhbGci............6XUKmNJyyNRA</span><span class=\"dl\">'</span> <span class=\"o\">-</span><span class=\"nx\">X</span> <span class=\"nx\">GET</span> <span class=\"nx\">https</span><span class=\"p\">:</span><span class=\"c1\">//api.apaleo.com/inventory/v1/properties/MUC</span>\n</code></pre></div></div>\n<p>The response shows the property details:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"MUC\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"MUC\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"isTemplate\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"en\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Hotel Munich\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"en\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"This new cozy hotel is located in the heart of Schwabing and is walking distance from the historical city center.\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"companyName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Hotel München GmbH\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"commercialRegisterEntry\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Amtsgericht München, HRB 145673183\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"taxId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"DE311053702\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"location\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"addressLine1\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Leopoldstraße 8-10\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"postalCode\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"80802\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"city\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Munich\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"countryCode\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"DE\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"bankAccount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"iban\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"DE44 5001 0517 5407 3249 31\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"bic\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"SSKMDEMMXXX\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"bank\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Stadtsparkasse München\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"paymentTerms\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"de\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Zahlbar bei Check In\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"en\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Payment on check-in\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"timeZone\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Europe/Berlin\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"currencyCode\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"EUR\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"created\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"2020-04-08T21:53:26+02:00\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n</img></section>\n</main>",
      "markdown_content": "# OAuth 2.0 - Client credentials grant flow\n\nIn the client credentials flow, the Authorization Server provides an access token directly to the client app after verifying the client app’s client ID and client secret. The client credentials grant type is the least secure grant type. Therefore, it is only recommended for internal client apps highly trusted by the resource server (for example, when the client app and the resource server are part of the same account (hotel organization)).\n\nIn contrast to the other OAuth flows used to obtain access tokens, this flow does not require a user login and the client does not redirect a user’s web browser to a username/password login process. The client app acts on its own behalf and assumes the role of the resource owner.\n\n> You must only use this flow if you trust the client. In other words, if the client is a computer that your hotel owns, then it will be secure and you can ensure the safety of the client credentials. Public clients can’t be trusted to identify themselves using client authentication, so that would not be a good candidate for client credentials grant flow.\n\nThe following image shows an outline of the flow:\n\n![](/assets/images/oauth/client_credentials_flow.png)\n\nClient credentials grant provides the following endpoint:\n\nHTTP Method | URI | Description  \n---|---|---  \nPOST | <https://identity.apaleo.com/connect/token> | Token endpoint which issues access tokens.  \n  \n## Why we recommend the connect clients?\n\nNormally we recommend you to use the [connect flow](/guides/oauth-connection/auth-code-grant) in order to communicate with the apaleo APIs because when you use simple clients, you would need to create new client credentials per each hotel that you want to target with your application. This means that for every hotel account that you want to integrate with your application, you would need to request new credentials following the steps below.\n\nThis is a limitation that disappears with the connect clients, as you will only need for the account admin to authorize your application, and you would get immediate access to their account. This means that you basically have access to all accounts with a single set of credentials.\n\nAdditionally, connect clients are also very simple to integrate. If you want to learn more about connect clients, go to [OAuth 2.0: Authorization code flow](/guides/oauth-connection/auth-code-grant).\n\nHowever, if you are completely sure, that the simple client is the way to go for you. Just follow the following steps and you should be all set.\n\nStep 1. Client requests an access token\n\nStep 2. Start making REST API calls\n\n* * *\n\n## Prerequisites\n\n### Create a client app and get client credentials\n\nAfter creating the [apaleo developer account](https://identity.apaleo.com/account/register-dev-account), the next step of creating an app is to [register the OAuth simple client (custom) app](/guides/oauth-connection/register-simple-client-app) in apaleo.\n\nThe registration process involves entering basic client app details and the scopes that you require for the endpoints that you want to access.\n\nIf desired, you can edit a registered client app at any point in the future. The registration process is not considered as a part of the authorization flow\n\nTo learn how to create your client, go to [Register the OAuth simple client (custom) app](/guides/oauth-connection/register-simple-client-app).\n\n* * *\n\n## Step 1. Client requests an access token\n\nYou can obtain an access token by making a POST request to the token endpoint with required parameters. Combine your client id and secret into a string, separated by colon, it would look something like `yourClientId:YourClientSecret` and encode that string with `Base64`. This will result in one long string, similar to the one you see below:\n    \n    \n    eW91ckNsaWVudElkOllvdXJDbGllbnRTZWNyZXQ=\n    \n\nNow that you have your client credentials in a Base64 string, it is time to request your access token. In order to do that make a request to the <https://identity.apaleo.com/connect/token>, endpoint.\n\nThis endpoint supports the following headers:\n\nHeader | Description  \n---|---  \nAuthorization | **Required**. Encode `<ClientId>:<ClientSecret>` with Base64 and specify it with `Basic` scheme.  \nContent-Type | **Required**. Set to `application/x-www-form-urlencoded`  \n  \nThis endpoint supports the following parameters:\n\nParameter | Description  \n---|---  \ngrant_type | **Required**. This parameter specifies a grant type. Set to `client_credentials` to use Client Credentials Grant  \n      \n    \n    POST https://identity.apaleo.com/connect/token\n    Authorization: Basic <base64 encoded \"clientId:clientSecret\">\n    Content-Type: application/x-www-form-urlencoded\n    grant_type=client_credentials\n    \n\n### Example cURL request\n\nYou can test the creation of token by running the following [cURL](https://curl.haxx.se/download.html) command.\n\n> On Windows, use [Windows Subsystem for Linux (WSL)](https://docs.microsoft.com/en-us/windows/wsl/install-win10) to run the cURL command.\n    \n    \n    curl -X POST 'https://identity.apaleo.com/connect/token' \\\n      -H 'Content-Type: application/x-www-form-urlencoded' \\\n      -H 'Authorization: Basic U0RYRS1TNWUFQ......UZHWHZaRm1wc1labTc=' \\\n      -d 'grant_type=client_credentials' \\\n    \n\nThe authorization server returns a JSON-formatted response when your request succeeds. If the example request above succeeds, the server returns a response like this:\n    \n    \n    {\n      \"access_token\": \"eyJhbGci............6XUKmNJyyNRA\",\n      \"expires_in\": 3600,\n      \"token_type\": \"Bearer\",\n      \"scope\": \"availability.read companies.read identity:account-users.manage identity:account-users.read offers.read reservations.manage reservations.read\"\n    }\n    \n\nKey | Description  \n---|---  \naccess_token | The value of the Access Token. This is what the client will need to access the protected resource APIs.  \nexpires_in | The time period (in seconds) for which the access token is valid. After this time period, the token will no longer be valid, and a new one must be retrieved.  \ntoken_type | Type of token. In our implementation this will always be `Bearer`.  \nscope | A space-separated list of scopes which have been granted for this `access_token`.  \n  \nThe JWT looks like this:\n    \n    \n    {\n      \"nbf\": 1591448890,\n      \"exp\": 1591452490,\n      \"iss\": \"https://identity.apaleo.com\",\n      \"aud\": [\"api\", \"identity_server\", \"notifications\", \"apaleo\"],\n      \"client_id\": \"SDXE-SP-SIMPLEAPP\",\n      \"account_code\": \"SDXE\",\n      \"scope\": [\n        \"availability.read\",\n        \"companies.read\",\n        \"offers.read\",\n        \"reservations.manage\",\n        \"reservations.read\",\n        \"identity:account-users.manage\",\n        \"identity:account-users.read\"\n      ]\n    }\n    \n\nThe client app can make subsequent requests to the protected resource APIs until the access token received from the Authorization Server expires, in which case the process repeats.\n\n* * *\n\n## Step 2. Start making REST API calls\n\nOnce the `access_token` has been obtained, it can be used to make calls to the protected resource APIs by passing it as a Bearer Token in the `Authorization` header of the HTTP request.\n\nThis sample call, which shows details of a property, includes a _bearer_ token in the `Authorization` request header. This type of token lets you complete an action on behalf of a resource owner.\n    \n    \n    GET https://api.apaleo.com/inventory/v1/properties/MUC\n    Content-Type: application/json\n    Authorization: Bearer my-authentication-token\n    \n\n### Example cURL request\n\nYou can test your token by running the following [cURL](https://curl.haxx.se/download.html) command.\n\n> On Windows, use [Windows Subsystem for Linux (WSL)](https://docs.microsoft.com/en-us/windows/wsl/install-win10) to run the cURL command.\n    \n    \n    curl -i -H 'Authorization: Bearer eyJhbGci............6XUKmNJyyNRA' -X GET https://api.apaleo.com/inventory/v1/properties/MUC\n    \n\nThe response shows the property details:\n    \n    \n    {\n      \"id\": \"MUC\",\n      \"code\": \"MUC\",\n      \"isTemplate\": false,\n      \"name\": {\n        \"en\": \"Hotel Munich\"\n      },\n      \"description\": {\n        \"en\": \"This new cozy hotel is located in the heart of Schwabing and is walking distance from the historical city center.\"\n      },\n      \"companyName\": \"Hotel München GmbH\",\n      \"commercialRegisterEntry\": \"Amtsgericht München, HRB 145673183\",\n      \"taxId\": \"DE311053702\",\n      \"location\": {\n        \"addressLine1\": \"Leopoldstraße 8-10\",\n        \"postalCode\": \"80802\",\n        \"city\": \"Munich\",\n        \"countryCode\": \"DE\"\n      },\n      \"bankAccount\": {\n        \"iban\": \"DE44 5001 0517 5407 3249 31\",\n        \"bic\": \"SSKMDEMMXXX\",\n        \"bank\": \"Stadtsparkasse München\"\n      },\n      \"paymentTerms\": {\n        \"de\": \"Zahlbar bei Check In\",\n        \"en\": \"Payment on check-in\"\n      },\n      \"timeZone\": \"Europe/Berlin\",\n      \"currencyCode\": \"EUR\",\n      \"created\": \"2020-04-08T21:53:26+02:00\"\n    }\n    \n",
      "timestamp": "2025-06-23T15:18:03.008609"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/best-practices.html",
      "title": "OAuth 2.0: Best Practices | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>OAuth 2.0: Best Practices</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  5 minutes\n                                \n                            </p> -->\n<p>We are very serious about the privacy of our customers. When we grant access to our APIs, we expect you to take our customers’ privacy just as seriously as we do.</p>\n<p>We use OAuth 2.0 authentication protocol to ensure that applications on our platform are safe and easy to use.</p>\n<p>Ensure your application follows these best practices.</p>\n<h2 id=\"use-https\">Use HTTPS</h2>\n<p>All requests to our authentication servers must be made over HTTPS to prevent man-in-the-middle\nattacks. Additionally, OAuth 2.0 requests require you to use HTTPS. Your app should also ideally be\nhosted on a secure server.</p>\n<hr/>\n<h2 id=\"client-id-and-secret\">Client ID and secret</h2>\n<p>The Client ID is a public identifier of your application. The Client secret is confidential and\nshould only be used to authenticate your application and make requests to apaleo’s APIs.</p>\n<p>Do not distribute Client secrets in email, distributed native applications, client-side JavaScript,\nor public code repositories. Do not store it in files on a web server that can be viewed externally.\nFor example, configuration files, include files, log files, etc.</p>\n<p>When you exchange an OAuth 2.0 authorization code for an access token, the Client secret is passed\nas part of the request. Ensure that you do not expose this request publicly.</p>\n<hr/>\n<h2 id=\"oauth-access-tokens\">OAuth access tokens</h2>\n<p>OAuth 2.0 tokens are entrusted to you by users who give you permission to act and access data on\ntheir behalf. Using access tokens, you can access a user’s private information through the apaleo\nAPIs. To keep access tokens safe:</p>\n<ul>\n<li>Do not store them in insecure or easily accessible locations. Client-side files, such as\nJavaScript or HTML files, should never be used to store sensitive information, as these can easily\nbe accessed.</li>\n<li>When making calls, always pass access tokens over a secure (HTTPS) connection.</li>\n<li>Do not discard your OAuth token after one-time use. API calls to retrieve an OAuth token are\nrate-limited per application. To avoid hitting your call limit, cache, and re-use tokens until the\nexpiration time. For more information, see\n<a href=\"/guides/oauth-connection/refresh-token\">OAuth 2.0: Refresh token grant flow</a>.</li>\n</ul>\n<hr/>\n<h2 id=\"thwart-cross-site-request-forgery-csrf-attacks\">Thwart cross-site request forgery (CSRF) attacks</h2>\n<p>Your app can use a <code>state</code> parameter to ensure that the response belongs to a request initiated by\nthe same user, therefore preventing CSRF attacks. If the <code>state</code> does not match, it means that there\ncould be a possible redirect by a malicious attacker. For more information, see\n<a href=\"https://tools.ietf.org/html/rfc6749#section-10.12\">RFC-6749</a>.</p>\n<hr/>\n<h2 id=\"redirect-uris\">Redirect URIs</h2>\n<p>The redirect URI must adhere to\n<a href=\"https://tools.ietf.org/html/rfc6749#section-3.1.2\">RFC 6749 Section 3.1.2</a>. The URI must meet the\nfollowing conditions:</p>\n<ul>\n<li>Must use HTTPS</li>\n<li>URLs must be an <a href=\"https://tools.ietf.org/html/rfc3986#section-4.3\">absolute URI</a>. For example,\n<code>https://example.com/auth/callback</code>, not <code>/auth/callback</code>.</li>\n<li>URL arguments are ignored. For example, <code>https://example.com/?id=1</code> is the same as\n<code>https://example.com/</code>.</li>\n<li>URLs cannot include a #. For example, <code>https://example.com/auth/callback#mycat</code> is invalid.</li>\n</ul>\n<hr/>\n<h2 id=\"scopes\">Scopes</h2>\n<p>If you are requesting scopes, make sure that you only request what you absolutely need. When you do\nthis, you are more likely to gain user consent when required because users are more likely to\nauthorize access for limited, clearly-specified scopes.</p>\n<p>If you are using OpenID Connect enabled app, then you need to use the following standard scopes.</p>\n<table>\n<thead>\n<tr>\n<th>Scope</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>openid</code></td>\n<td>A mandatory scope that returns a <code>sub</code> claim, which represents a unique identifier for the authenticated user.</td>\n</tr>\n<tr>\n<td><code>profile</code></td>\n<td>This scope requests access to the end-user’s default profile claims.</td>\n</tr>\n</tbody>\n</table>\n<p>Always pass <code>scope</code> variable as a set of <em>case-sensitive</em> and <em>space-delimited</em> strings as follows:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">scope:</span><span class=\"w\"> </span><span class=\"err\">'offline_access</span><span class=\"w\"> </span><span class=\"err\">availability.read</span><span class=\"w\"> </span><span class=\"err\">reservations.read'</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>In an OpenID Connect implementation:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">scope:</span><span class=\"w\"> </span><span class=\"err\">'offline_access</span><span class=\"w\"> </span><span class=\"err\">openid</span><span class=\"w\"> </span><span class=\"err\">profile</span><span class=\"w\"> </span><span class=\"err\">availability.read</span><span class=\"w\"> </span><span class=\"err\">identity:account-users.read</span><span class=\"w\"> </span><span class=\"err\">rates.read</span><span class=\"w\"> </span><span class=\"err\">reservations.read'</span><span class=\"w\">\n</span></code></pre></div></div>\n<hr/>\n<h2 id=\"error-handling\">Error handling</h2>\n<p>The error codes and their descriptions are well documented in the OAuth2 RFC, such as\n<a href=\"https://tools.ietf.org/html/rfc6749#section-4.1.2.1\">Code Grant Errors</a>.</p>\n<h3 id=\"authorization-response-error-codes\">Authorization response error codes</h3>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Description</th>\n<th>Solution</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>invalid_request</code></td>\n<td>This error is typically due to a required parameter missing from the request. For example, omitting the response_type parameter would raise this error.</td>\n<td>Check whether all the parameters are correct, <code>client_id</code> exists, and so on.</td>\n</tr>\n<tr>\n<td><code>unauthorized_client</code></td>\n<td>Your app is not authorized to request an authorization code using this grant method. The <code>redirect_URI</code> is either incorrect or not provided.</td>\n<td>Make sure that the provided <code>redirect_URI</code> is correct, and at least one <code>redirect_uri</code> is defined in the client app.</td>\n</tr>\n<tr>\n<td><code>unsupported_response_type</code></td>\n<td>apaleo does not support obtaining an authorization code using this method.</td>\n<td>Try to change the selected method of authorization.</td>\n</tr>\n<tr>\n<td><code>invalid_scope</code></td>\n<td>If your app requests invalid, unknown, or malformed scope.</td>\n<td>Make sure that the request is correct.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"token-response-error-codes\">Token response error codes</h3>\n<p><a href=\"https://tools.ietf.org/html/rfc6749#section-5.2\">Definition of errors of issuing Access Token in the RFC6749 standard</a></p>\n<table>\n<thead>\n<tr>\n<th>Error code</th>\n<th>Description</th>\n<th>Solution</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>invalid_request</code></td>\n<td>The request repeats a parameter, misses a required parameter, includes an unsupported parameter value (other than grant type), utilizes more than one mechanism for authenticating the client, or is otherwise malformed.</td>\n<td>Check the response header and request.</td>\n</tr>\n<tr>\n<td><code>invalid_client</code></td>\n<td>Client authentication failed. For example, there’s no such client with that <code>client_id</code> and <code>client_secret</code>.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>invalid_grant</code></td>\n<td>The Refresh token has been revoked. The authorization code has been already consumed or does not exist.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>unauthorized_client</code></td>\n<td>Client is not allowed for code grant flow or for refreshing tokens.</td>\n<td></td>\n</tr>\n<tr>\n<td><code>unsupported_grant_type</code></td>\n<td>The authorization grant type is not supported by apaleo.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n</section>\n</main>",
      "markdown_content": "# OAuth 2.0: Best Practices\n\nWe are very serious about the privacy of our customers. When we grant access to our APIs, we expect you to take our customers’ privacy just as seriously as we do.\n\nWe use OAuth 2.0 authentication protocol to ensure that applications on our platform are safe and easy to use.\n\nEnsure your application follows these best practices.\n\n## Use HTTPS\n\nAll requests to our authentication servers must be made over HTTPS to prevent man-in-the-middle attacks. Additionally, OAuth 2.0 requests require you to use HTTPS. Your app should also ideally be hosted on a secure server.\n\n* * *\n\n## Client ID and secret\n\nThe Client ID is a public identifier of your application. The Client secret is confidential and should only be used to authenticate your application and make requests to apaleo’s APIs.\n\nDo not distribute Client secrets in email, distributed native applications, client-side JavaScript, or public code repositories. Do not store it in files on a web server that can be viewed externally. For example, configuration files, include files, log files, etc.\n\nWhen you exchange an OAuth 2.0 authorization code for an access token, the Client secret is passed as part of the request. Ensure that you do not expose this request publicly.\n\n* * *\n\n## OAuth access tokens\n\nOAuth 2.0 tokens are entrusted to you by users who give you permission to act and access data on their behalf. Using access tokens, you can access a user’s private information through the apaleo APIs. To keep access tokens safe:\n\n  * Do not store them in insecure or easily accessible locations. Client-side files, such as JavaScript or HTML files, should never be used to store sensitive information, as these can easily be accessed.\n  * When making calls, always pass access tokens over a secure (HTTPS) connection.\n  * Do not discard your OAuth token after one-time use. API calls to retrieve an OAuth token are rate-limited per application. To avoid hitting your call limit, cache, and re-use tokens until the expiration time. For more information, see [OAuth 2.0: Refresh token grant flow](/guides/oauth-connection/refresh-token).\n\n\n\n* * *\n\n## Thwart cross-site request forgery (CSRF) attacks\n\nYour app can use a `state` parameter to ensure that the response belongs to a request initiated by the same user, therefore preventing CSRF attacks. If the `state` does not match, it means that there could be a possible redirect by a malicious attacker. For more information, see [RFC-6749](https://tools.ietf.org/html/rfc6749#section-10.12).\n\n* * *\n\n## Redirect URIs\n\nThe redirect URI must adhere to [RFC 6749 Section 3.1.2](https://tools.ietf.org/html/rfc6749#section-3.1.2). The URI must meet the following conditions:\n\n  * Must use HTTPS\n  * URLs must be an [absolute URI](https://tools.ietf.org/html/rfc3986#section-4.3). For example, `https://example.com/auth/callback`, not `/auth/callback`.\n  * URL arguments are ignored. For example, `https://example.com/?id=1` is the same as `https://example.com/`.\n  * URLs cannot include a #. For example, `https://example.com/auth/callback#mycat` is invalid.\n\n\n\n* * *\n\n## Scopes\n\nIf you are requesting scopes, make sure that you only request what you absolutely need. When you do this, you are more likely to gain user consent when required because users are more likely to authorize access for limited, clearly-specified scopes.\n\nIf you are using OpenID Connect enabled app, then you need to use the following standard scopes.\n\nScope | Description  \n---|---  \n`openid` | A mandatory scope that returns a `sub` claim, which represents a unique identifier for the authenticated user.  \n`profile` | This scope requests access to the end-user’s default profile claims.  \n  \nAlways pass `scope` variable as a set of _case-sensitive_ and _space-delimited_ strings as follows:\n    \n    \n    scope: 'offline_access availability.read reservations.read'\n    \n\nIn an OpenID Connect implementation:\n    \n    \n    scope: 'offline_access openid profile availability.read identity:account-users.read rates.read reservations.read'\n    \n\n* * *\n\n## Error handling\n\nThe error codes and their descriptions are well documented in the OAuth2 RFC, such as [Code Grant Errors](https://tools.ietf.org/html/rfc6749#section-4.1.2.1).\n\n### Authorization response error codes\n\nError code | Description | Solution  \n---|---|---  \n`invalid_request` | This error is typically due to a required parameter missing from the request. For example, omitting the response_type parameter would raise this error. | Check whether all the parameters are correct, `client_id` exists, and so on.  \n`unauthorized_client` | Your app is not authorized to request an authorization code using this grant method. The `redirect_URI` is either incorrect or not provided. | Make sure that the provided `redirect_URI` is correct, and at least one `redirect_uri` is defined in the client app.  \n`unsupported_response_type` | apaleo does not support obtaining an authorization code using this method. | Try to change the selected method of authorization.  \n`invalid_scope` | If your app requests invalid, unknown, or malformed scope. | Make sure that the request is correct.  \n  \n### Token response error codes\n\n[Definition of errors of issuing Access Token in the RFC6749 standard](https://tools.ietf.org/html/rfc6749#section-5.2)\n\nError code | Description | Solution  \n---|---|---  \n`invalid_request` | The request repeats a parameter, misses a required parameter, includes an unsupported parameter value (other than grant type), utilizes more than one mechanism for authenticating the client, or is otherwise malformed. | Check the response header and request.  \n`invalid_client` | Client authentication failed. For example, there’s no such client with that `client_id` and `client_secret`. |   \n`invalid_grant` | The Refresh token has been revoked. The authorization code has been already consumed or does not exist. |   \n`unauthorized_client` | Client is not allowed for code grant flow or for refreshing tokens. |   \n`unsupported_grant_type` | The authorization grant type is not supported by apaleo. | \n",
      "timestamp": "2025-06-23T15:18:03.723365"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/create-landing-page.html",
      "title": "Create a landing page | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Create a landing page</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>To use the OAuth flow provided by apaleo, you need to prepare a few things. This only needs to be\ndone once, and we will work with you to ensure everything is okay. Here’s what you need to do:</p>\n<ul>\n<li>\n<p>Create a landing page</p>\n</li>\n<li>\n<p>Review the consent screen</p>\n</li>\n<li>\n<p>Create a success page</p>\n</li>\n</ul>\n<img src=\"/assets/images/oauth/setup-flow.png\">\n<p>The landing page is the page users get to after clicking “connect” in the apaleo store. The\ntechnical minimum you need there is letting users log in or register to your application. But. Not\nall of the users wanting to connect are already customers of yours. Get your marketing people\ninvolved, and optimize the page for conversion!</p>\n<p>One point that would make us happy is if you would not only explain why your product is great, but\nalso that this is an integration they won’t get anywhere else. Data going both ways? Hotel and room\ndata is magically set up, using apaleo as a source? Loyalty points displayed directly in the apaleo\nUI? If you also think this is awesome than other integrations, this is the place to show off.</p>\n<p>Once you’re done with the landing page, head over to the apaleo store, and enter its URL as the\nconnect link.</p>\n</img></section>\n</main>",
      "markdown_content": "# Create a landing page  \n  \nTo use the OAuth flow provided by apaleo, you need to prepare a few things. This only needs to be done once, and we will work with you to ensure everything is okay. Here’s what you need to do:\n\n  * Create a landing page\n\n  * Review the consent screen\n\n  * Create a success page\n\n\n![](/assets/images/oauth/setup-flow.png)\n\nThe landing page is the page users get to after clicking “connect” in the apaleo store. The technical minimum you need there is letting users log in or register to your application. But. Not all of the users wanting to connect are already customers of yours. Get your marketing people involved, and optimize the page for conversion!\n\nOne point that would make us happy is if you would not only explain why your product is great, but also that this is an integration they won’t get anywhere else. Data going both ways? Hotel and room data is magically set up, using apaleo as a source? Loyalty points displayed directly in the apaleo UI? If you also think this is awesome than other integrations, this is the place to show off.\n\nOnce you’re done with the landing page, head over to the apaleo store, and enter its URL as the connect link.\n",
      "timestamp": "2025-06-23T15:18:04.420427"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/review-consent-screen.html",
      "title": "Review the consent screen | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Review the consent screen</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>The consent screen will be rendered by apaleo, as part of the flow described below. Request your API credentials (the ones which work for all hotels) and tell us in the comments:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">API Credentials</th>\n<th align=\"left\">What’s this?</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Client name</td>\n<td align=\"left\">Your application’s name, used on the consent screen</td>\n</tr>\n<tr>\n<td align=\"left\">Scopes</td>\n<td align=\"left\">Permissions that define the type of protected resources a connected app can access. They are included with the OAuth tokens during the authorization flow. Check our Swagger documentation where each API endpoint describes which scope is required. <img src=\"/assets/images/oauth/content-scope.png\"/></td>\n</tr>\n<tr>\n<td align=\"left\">Redirect url</td>\n<td align=\"left\">It is where users are redirected after successful authorization. It is the connected app’s callback URL. If further setup is required to establish the connection to apaleo, such as mapping of fields or other configuration, it is a good idea to redirect the user there. Ensure the redirect URL can be called, and is using https.</td>\n</tr>\n</tbody>\n</table>\n<p>We will review the data to ensure that all will work okay and get back to you within a few days.</p>\n<p>This is how an example consent screen looks like:</p>\n<img src=\"/assets/images/oauth/consent.png\"/>\n</section>\n</main>",
      "markdown_content": "# Review the consent screen\n\nThe consent screen will be rendered by apaleo, as part of the flow described below. Request your API credentials (the ones which work for all hotels) and tell us in the comments:\n\nAPI Credentials | What’s this?  \n---|---  \nClient name | Your application’s name, used on the consent screen  \nScopes | Permissions that define the type of protected resources a connected app can access. They are included with the OAuth tokens during the authorization flow. Check our Swagger documentation where each API endpoint describes which scope is required. ![](/assets/images/oauth/content-scope.png)  \nRedirect url | It is where users are redirected after successful authorization. It is the connected app’s callback URL. If further setup is required to establish the connection to apaleo, such as mapping of fields or other configuration, it is a good idea to redirect the user there. Ensure the redirect URL can be called, and is using https.  \n  \nWe will review the data to ensure that all will work okay and get back to you within a few days.\n\nThis is how an example consent screen looks like:\n\n![](/assets/images/oauth/consent.png)\n",
      "timestamp": "2025-06-23T15:18:05.121583"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/create-success-page.html",
      "title": "Create a success page | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Create a success page</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>After the user authorizes your client, you’re all set. Well, almost. The last important step is\nstoring the refresh-token you get back during the flow and map it to the customer or hotel on your side.</p>\n<p>You can also use this as a trigger to initialize the integration. You can do this automatically,\nfetching all the data you need from apaleo, or manually. You can also combine both: Get all rate\nplans and let the user do the mapping to your rate codes. Get all rooms, and generate a housekeeping schedule from it, which needs further adjustment. The more you can do automatically, the better the Wow effect.</p>\n<p>Do not forget to display a success message, preferably one that directly shows that the integration works. Think about including the hotel name you just fetched from apaleo or the number of rooms you found.</p>\n</section>\n</main>",
      "markdown_content": "# Create a success page\n\nAfter the user authorizes your client, you’re all set. Well, almost. The last important step is storing the refresh-token you get back during the flow and map it to the customer or hotel on your side.\n\nYou can also use this as a trigger to initialize the integration. You can do this automatically, fetching all the data you need from apaleo, or manually. You can also combine both: Get all rate plans and let the user do the mapping to your rate codes. Get all rooms, and generate a housekeeping schedule from it, which needs further adjustment. The more you can do automatically, the better the Wow effect.\n\nDo not forget to display a success message, preferably one that directly shows that the integration works. Think about including the hotel name you just fetched from apaleo or the number of rooms you found.\n",
      "timestamp": "2025-06-23T15:18:05.825233"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/simple-client-copy.html",
      "title": "Share a simple client app (developer accounts only) | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Share a simple client app (developer accounts only)</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>If you have created a simple client and want to share it with a hotel, you can easily do that using the <strong>Copy create link</strong> feature. It creates a copy of the client in hotel’s account.</p>\n<p>To share a simple client:</p>\n<ol>\n<li>\n<p><a href=\"https://app.apaleo.com/dashboard\">Log into the apaleo Dashboard</a> with your apaleo developer credentials.</p>\n</li>\n<li>\n<p>Navigate to the <strong>Apps</strong> section and click <strong>Connected apps</strong>.</p>\n</li>\n<li>\n<p>On the connect clients page, select the app to use the <strong>Copy create link</strong> as follows.</p>\n<img src=\"/assets/images/oauth/CopyCreateLink.png\">\n</img></li>\n<li>\n<p>Send this link to the hotel.</p>\n</li>\n<li>\n<p>On clicking the link, the hotel will get the following message.</p>\n<img src=\"/assets/images/oauth/CopyCreateLinkClicked.png\"/>\n</li>\n<li>\n<p>On this page, the hotel has to review the following details:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Field</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Client code</td>\n<td align=\"left\">Unique key for the client application.</td>\n</tr>\n<tr>\n<td align=\"left\">Client name</td>\n<td align=\"left\">Human-readable string name of the client application.</td>\n</tr>\n<tr>\n<td align=\"left\">Personally identifiable information</td>\n<td align=\"left\">Personal information that is retrieved such as guest name, address, country, etc.</td>\n</tr>\n<tr>\n<td align=\"left\">Secrets</td>\n<td align=\"left\">Description of your secret.</td>\n</tr>\n<tr>\n<td align=\"left\">Scopes</td>\n<td align=\"left\">OAuth scopes, or permissions, let you specify exactly how your app needs to access an apaleo user’s account.</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>Save the app.</p>\n<img src=\"/assets/images/oauth/Secret.png\"/>\n</li>\n<li>\n<p>Keep in mind that the hotel must send you back the <code>client Id</code> and <code>client secret</code> after creating them. Please make sure to transfer those via a secure channel.</p>\n<ul>\n<li><strong>Client ID</strong> - This identifies the client responsible for the OAuth request. A unique key for the client application.</li>\n<li><strong>Client Secret</strong> - A client secret is a secret known only to your application and the authorization server. It protects your resources by only granting tokens to authorized requestors. Always store the client secret key securely; never reveal it publicly! If you suspect that the secret key has been compromised, regenerate it immediately by adding a new secret to the client application.</li>\n</ul>\n</li>\n</ol>\n</section>\n</main>",
      "markdown_content": "# Share a simple client app (developer accounts only)\n\nIf you have created a simple client and want to share it with a hotel, you can easily do that using the **Copy create link** feature. It creates a copy of the client in hotel’s account.\n\nTo share a simple client:\n\n  1. [Log into the apaleo Dashboard](https://app.apaleo.com/dashboard) with your apaleo developer credentials.\n\n  2. Navigate to the **Apps** section and click **Connected apps**.\n\n  3. On the connect clients page, select the app to use the **Copy create link** as follows.\n\n![](/assets/images/oauth/CopyCreateLink.png)\n  4. Send this link to the hotel.\n\n  5. On clicking the link, the hotel will get the following message.\n\n![](/assets/images/oauth/CopyCreateLinkClicked.png)\n  6. On this page, the hotel has to review the following details:\n\nField | Description  \n---|---  \nClient code | Unique key for the client application.  \nClient name | Human-readable string name of the client application.  \nPersonally identifiable information | Personal information that is retrieved such as guest name, address, country, etc.  \nSecrets | Description of your secret.  \nScopes | OAuth scopes, or permissions, let you specify exactly how your app needs to access an apaleo user’s account.  \n  7. Save the app.\n\n![](/assets/images/oauth/Secret.png)\n  8. Keep in mind that the hotel must send you back the `client Id` and `client secret` after creating them. Please make sure to transfer those via a secure channel.\n\n     * **Client ID** \\- This identifies the client responsible for the OAuth request. A unique key for the client application.\n     * **Client Secret** \\- A client secret is a secret known only to your application and the authorization server. It protects your resources by only granting tokens to authorized requestors. Always store the client secret key securely; never reveal it publicly! If you suspect that the secret key has been compromised, regenerate it immediately by adding a new secret to the client application.\n\n\n",
      "timestamp": "2025-06-23T15:18:06.520164"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/connect-disconnect-app.html",
      "title": "Connect and disconnect an app | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Connect and disconnect an app</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  2 minutes\n                                \n                            </p> -->\n<p>You can easily connect or disconnect an app in apaleo.</p>\n<h2 id=\"connect-an-app\">Connect an app</h2>\n<p>Connecting an app is breeze in apaleo. Simply, find the app in the apaleo Store, click the <strong>Connect to apaleo</strong> link and confirm the permissions required for app to connect to your apaleo account.</p>\n<h2 id=\"disconnect-an-app\">Disconnect an app</h2>\n<p>Disconnecting or removing an app differs depending on how it is built and configured. When an app is disconnected from apaleo, then apaleo revokes all granted OAuth permissions for the app and removes all connections to the APIs.</p>\n<blockquote>\n<p>Only users with administration management privileges can disconnect or delete apps.</p>\n</blockquote>\n<hr/>\n<h3 id=\"disconnect-your-apps-connection-to-an-apaleo-account-app-developers\">Disconnect your app’s connection to an apaleo account (app developers)</h3>\n<h4 id=\"prerequisites\">Prerequisites:</h4>\n<ul>\n<li>\n<p>Before you disconnect your app from an apaleo account, ensure that you delete all the subscriptions to that account. Also, delete UI integrations (if any) and hotel’s account data in consultation with the hotel.</p>\n</li>\n<li>\n<p>To get and delete webhook subscriptions, follow the instructions <a href=\"/guides/webhook/configuration\">here</a>.</p>\n</li>\n<li>\n<p>To get and delete ARI subscriptions, use the following endpoints in the <a href=\"https://distribution.apaleo.com/swagger/\">Distribution API</a>:</p>\n<ul>\n<li>Get subscriptions - <code>GET /v1/subscriptions</code></li>\n<li>Delete subscriptions - <code>DELETE /v1/subscriptions/{id}</code></li>\n</ul>\n</li>\n</ul>\n<p>Once you complete these steps, then complete the following steps to disconnect a hotel account from your app:</p>\n<ol>\n<li>\n<p><a href=\"https://app.apaleo.com/dashboard\">Log into the apaleo Dashboard</a> with your apaleo developer credentials.</p>\n</li>\n<li>\n<p>Navigate to the <strong>Apps</strong> section and click <strong>My store apps</strong>.</p>\n</li>\n<li>\n<p>On the My store apps page, use the down arrow on your app to expand <strong>Connected accounts</strong>.</p>\n</li>\n<li>\n<p>Click the <strong>Disconnect</strong> icon on the hotel account that you want to disconnect.</p>\n<img src=\"/assets/images/oauth/disconnect_app.png\">\n</img></li>\n</ol>\n<hr/>\n<h3 id=\"disconnect-or-delete-an-app-from-your-apaleo-account-hotels\">Disconnect or delete an app from your apaleo account (hotels)</h3>\n<p>If you gave your apaleo account access to an app that you no longer need, then you can remove its access to your apaleo account. The app will not be able to access any more info from your account.</p>\n<h4 id=\"prerequisites-1\">Prerequisites:</h4>\n<ul>\n<li>You must request the app partner that they delete the webhook or ARI subscriptions that they already have from your account.</li>\n<li>If there are any UI integrations, then ask the app partner to delete them.</li>\n</ul>\n<p>Once you get a confirmation from the app team that they have deleted all the subscriptions, then complete the following steps to disconnect or delete an app from your apaleo account.</p>\n<h4 id=\"to-disconnect-a-store-app\">To disconnect a store app:</h4>\n<ol>\n<li>\n<p><a href=\"https://app.apaleo.com/dashboard\">Log into the apaleo Dashboard</a>.</p>\n</li>\n<li>\n<p>Navigate to the <strong>Apps</strong> section and click <strong>Connected apps</strong>.</p>\n</li>\n<li>\n<p>On the Connected apps page, use the three dots on the app to view the <strong>Disconnect app</strong> icon.</p>\n</li>\n<li>\n<p>Click the <strong>Disconnect app</strong> icon to disconnect the app from your account.</p>\n<img src=\"/assets/images/oauth/disconnect_app_hotel.png\"/>\n</li>\n</ol>\n<h4 id=\"to-delete-a-simple-client-app\">To delete a simple client app:</h4>\n<ol>\n<li>\n<p><a href=\"https://app.apaleo.com/dashboard\">Log into the apaleo Dashboard</a>.</p>\n</li>\n<li>\n<p>Navigate to the <strong>Apps</strong> section and click <strong>Connected apps</strong>.</p>\n</li>\n<li>\n<p>On the Connected apps page, use the three dots on the app to view the <strong>Delete</strong> icon.</p>\n</li>\n<li>\n<p>Click the <strong>Delete</strong> icon to delete the app from your account.</p>\n<img src=\"/assets/images/oauth/delete_app_hotel.png\"/>\n</li>\n</ol>\n</section>\n</main>",
      "markdown_content": "# Connect and disconnect an app\n\nYou can easily connect or disconnect an app in apaleo.\n\n## Connect an app\n\nConnecting an app is breeze in apaleo. Simply, find the app in the apaleo Store, click the **Connect to apaleo** link and confirm the permissions required for app to connect to your apaleo account.\n\n## Disconnect an app\n\nDisconnecting or removing an app differs depending on how it is built and configured. When an app is disconnected from apaleo, then apaleo revokes all granted OAuth permissions for the app and removes all connections to the APIs.\n\n> Only users with administration management privileges can disconnect or delete apps.\n\n* * *\n\n### Disconnect your app’s connection to an apaleo account (app developers)\n\n#### Prerequisites:\n\n  * Before you disconnect your app from an apaleo account, ensure that you delete all the subscriptions to that account. Also, delete UI integrations (if any) and hotel’s account data in consultation with the hotel.\n\n  * To get and delete webhook subscriptions, follow the instructions [here](/guides/webhook/configuration).\n\n  * To get and delete ARI subscriptions, use the following endpoints in the [Distribution API](https://distribution.apaleo.com/swagger/):\n\n    * Get subscriptions - `GET /v1/subscriptions`\n    * Delete subscriptions - `DELETE /v1/subscriptions/{id}`\n\n\n\nOnce you complete these steps, then complete the following steps to disconnect a hotel account from your app:\n\n  1. [Log into the apaleo Dashboard](https://app.apaleo.com/dashboard) with your apaleo developer credentials.\n\n  2. Navigate to the **Apps** section and click **My store apps**.\n\n  3. On the My store apps page, use the down arrow on your app to expand **Connected accounts**.\n\n  4. Click the **Disconnect** icon on the hotel account that you want to disconnect.\n\n![](/assets/images/oauth/disconnect_app.png)\n\n\n\n* * *\n\n### Disconnect or delete an app from your apaleo account (hotels)\n\nIf you gave your apaleo account access to an app that you no longer need, then you can remove its access to your apaleo account. The app will not be able to access any more info from your account.\n\n#### Prerequisites:\n\n  * You must request the app partner that they delete the webhook or ARI subscriptions that they already have from your account.\n  * If there are any UI integrations, then ask the app partner to delete them.\n\n\n\nOnce you get a confirmation from the app team that they have deleted all the subscriptions, then complete the following steps to disconnect or delete an app from your apaleo account.\n\n#### To disconnect a store app:\n\n  1. [Log into the apaleo Dashboard](https://app.apaleo.com/dashboard).\n\n  2. Navigate to the **Apps** section and click **Connected apps**.\n\n  3. On the Connected apps page, use the three dots on the app to view the **Disconnect app** icon.\n\n  4. Click the **Disconnect app** icon to disconnect the app from your account.\n\n![](/assets/images/oauth/disconnect_app_hotel.png)\n\n\n\n#### To delete a simple client app:\n\n  1. [Log into the apaleo Dashboard](https://app.apaleo.com/dashboard).\n\n  2. Navigate to the **Apps** section and click **Connected apps**.\n\n  3. On the Connected apps page, use the three dots on the app to view the **Delete** icon.\n\n  4. Click the **Delete** icon to delete the app from your account.\n\n![](/assets/images/oauth/delete_app_hotel.png)\n\n\n",
      "timestamp": "2025-06-23T15:18:07.220979"
    },
    {
      "url": "https://apaleo.dev/guides/oauth-connection/working-with-api.html",
      "title": "Working with APIs | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Working with APIs</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>Working with APIs and using built-in HTTP clients looks straightforward but has some disadvantages. The biggest one is a lack of type safety. We recommend using auto-generated client libraries for a better developer experience while working with apaleo API.</p>\n<p>Many different generators are available, but our advice is <a href=\"https://github.com/Azure/autorest\">autorest</a>. They all do the job well and generate similar proxy classes, but there is a small but crucial feature that only autorest has - it generates enums as string values. To understand why this is so important, let’s consider a case when a new value was added to an enum. For example, when a new status is introduced. By using string values, we don’t need to worry about possible deserialization issues, while enum will most likely throw an exception when meeting an unknown value.</p>\n<p>To learn more about autorest, go to their GitHub <a href=\"https://github.com/Azure/autorest\">autorest</a>.</p>\n</section>\n</main>",
      "markdown_content": "# Working with APIs\n\nWorking with APIs and using built-in HTTP clients looks straightforward but has some disadvantages. The biggest one is a lack of type safety. We recommend using auto-generated client libraries for a better developer experience while working with apaleo API.\n\nMany different generators are available, but our advice is [autorest](https://github.com/Azure/autorest). They all do the job well and generate similar proxy classes, but there is a small but crucial feature that only autorest has - it generates enums as string values. To understand why this is so important, let’s consider a case when a new value was added to an enum. For example, when a new status is introduced. By using string values, we don’t need to worry about possible deserialization issues, while enum will most likely throw an exception when meeting an unknown value.\n\nTo learn more about autorest, go to their GitHub [autorest](https://github.com/Azure/autorest).\n",
      "timestamp": "2025-06-23T15:18:07.924450"
    },
    {
      "url": "https://apaleo.dev/guides/api/overview.html",
      "title": "Get started with the apaleo APIs | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Get started with the apaleo APIs</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>Get deeper access to the API to integrate your product, app, or service directly with apaleo. apaleo APIs provide the tools and data used to develop integrations with apaleo.</p>\n<p>You can find all of apaleo’s APIs on <a href=\"https://api.apaleo.com/\">api.apaleo.com</a>. We use Swagger to describe it and to generate our documentation.</p>\n<p><a href=\"https://swagger.io/\">Swagger</a>, or <a href=\"https://www.openapis.org/\">OpenAPI</a>, unites complex API information into an interactive and language-agnostic reference resource. Swagger provides critical reference material about which JSON payloads, HTTP methods, and specific endpoints to use to perform operations against an API.</p>\n<p>The first step is to <a href=\"https://identity.apaleo.com/account/register-dev-account\">sign up</a> for your free trial account. After you finish signup, you will be able to login to <a href=\"https://app.apaleo.com/\">apaleo</a> and start configuring your properties. Also, you can use the same credentials to access our <a href=\"https://api.apaleo.com/\">API</a> using Swagger.</p>\n<p>You can access apaleo’s API Swagger documentation at:</p>\n<pre><code>https://api.apaleo.com/swagger/\n</code></pre>\n<p>The automatically generated Swagger reference material provides a quick overview of essential\nconcepts, available API endpoints, and a description of each object model to assist development and\ntesting.</p>\n<p>A concise summary describes the API.</p>\n<img src=\"/assets/images/oauth/swagger-top-image.png\">\n<p>API object models are also listed.</p>\n<img src=\"/assets/images/oauth/swagger-models.png\"/>\n<p>You can select each listed object model for a more detailed summary of key attributes.</p>\n<img src=\"/assets/images/oauth/swagger-models-details.png\"/>\n<p>The generated Swagger object models are convenient to read all available apaleo’s objects and APIs.\nDevelopers can use this resource when they integrate their apps with apaleo.</p>\n</img></section>\n</main>",
      "markdown_content": "# Get started with the apaleo APIs\n\nGet deeper access to the API to integrate your product, app, or service directly with apaleo. apaleo APIs provide the tools and data used to develop integrations with apaleo.\n\nYou can find all of apaleo’s APIs on [api.apaleo.com](https://api.apaleo.com/). We use Swagger to describe it and to generate our documentation.\n\n[Swagger](https://swagger.io/), or [OpenAPI](https://www.openapis.org/), unites complex API information into an interactive and language-agnostic reference resource. Swagger provides critical reference material about which JSON payloads, HTTP methods, and specific endpoints to use to perform operations against an API.\n\nThe first step is to [sign up](https://identity.apaleo.com/account/register-dev-account) for your free trial account. After you finish signup, you will be able to login to [apaleo](https://app.apaleo.com/) and start configuring your properties. Also, you can use the same credentials to access our [API](https://api.apaleo.com/) using Swagger.\n\nYou can access apaleo’s API Swagger documentation at:\n    \n    \n    https://api.apaleo.com/swagger/\n    \n\nThe automatically generated Swagger reference material provides a quick overview of essential concepts, available API endpoints, and a description of each object model to assist development and testing.\n\nA concise summary describes the API.\n\n![](/assets/images/oauth/swagger-top-image.png)\n\nAPI object models are also listed.\n\n![](/assets/images/oauth/swagger-models.png)\n\nYou can select each listed object model for a more detailed summary of key attributes.\n\n![](/assets/images/oauth/swagger-models-details.png)\n\nThe generated Swagger object models are convenient to read all available apaleo’s objects and APIs. Developers can use this resource when they integrate their apps with apaleo.\n",
      "timestamp": "2025-06-23T15:18:08.637790"
    },
    {
      "url": "https://apaleo.dev/guides/api/authentication.html",
      "title": "Authentication | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Authentication</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>Follow the steps in <a href=\"/guides/start/oauth-connection/register-app\">Register OAuth client applications</a> to create and\nconfigure a client app. Alternatively, you can reuse an existing app registration.</p>\n<p>After completing the client app registration:</p>\n<ol>\n<li>\n<p>Select the <strong>Authorize</strong> button on your swagger page. ​\n<img src=\"/assets/images/oauth/swagger-oauth.png\"/></p>\n</li>\n<li>\n<p>Select the scopes and click <strong>Authorize</strong>. <strong><br/>Important</strong>: Do not paste your Client ID in the\n<strong>client_id</strong> field. It will always be auto-populated. For example, “<strong>swagger-ui</strong>”. ​\n<img src=\"/assets/images/oauth/swagger-client-id.png\"/></p>\n</li>\n<li>\n<p>You will then be redirected to the following success modal.</p>\n<img src=\"/assets/images/oauth/swagger-logout.png\"/>\n</li>\n<li>\n<p>If you have not created an app and want to log in, then you can use your apaleo app login\ncredentials to authorize Swagger. Click the <strong>Authorize</strong> button, as shown below.</p>\n<img src=\"/assets/images/oauth/swagger-oauth.png\"/>\n</li>\n<li>\n<p>You will then be redirected to the following login page. Enter your <strong>Email</strong> and <strong>Password</strong>.</p>\n<img src=\"/assets/images/oauth/swagger-apaleo-login.png\"/>\n</li>\n<li>\n<p>You will then be redirected to the following success modal.</p>\n<img src=\"/assets/images/oauth/swagger-apaleo-login-success.png\"/>\n</li>\n</ol>\n</section>\n</main>",
      "markdown_content": "# Authentication\n\nFollow the steps in [Register OAuth client applications](/guides/start/oauth-connection/register-app) to create and configure a client app. Alternatively, you can reuse an existing app registration.\n\nAfter completing the client app registration:\n\n  1. Select the **Authorize** button on your swagger page. ​ ![](/assets/images/oauth/swagger-oauth.png)\n\n  2. Select the scopes and click **Authorize**. **  \nImportant** : Do not paste your Client ID in the **client_id** field. It will always be auto-populated. For example, “**swagger-ui** ”. ​ ![](/assets/images/oauth/swagger-client-id.png)\n\n  3. You will then be redirected to the following success modal.\n\n![](/assets/images/oauth/swagger-logout.png)\n  4. If you have not created an app and want to log in, then you can use your apaleo app login credentials to authorize Swagger. Click the **Authorize** button, as shown below.\n\n![](/assets/images/oauth/swagger-oauth.png)\n  5. You will then be redirected to the following login page. Enter your **Email** and **Password**.\n\n![](/assets/images/oauth/swagger-apaleo-login.png)\n  6. You will then be redirected to the following success modal.\n\n![](/assets/images/oauth/swagger-apaleo-login-success.png)\n\n\n",
      "timestamp": "2025-06-23T15:18:09.324498"
    },
    {
      "url": "https://apaleo.dev/guides/api/versioning.html",
      "title": "Versioning | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Versioning</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>We have two versions of the APIs.</p>\n<p><strong>V1</strong> - These APIs are safe to work, and support is provided for these APIs.</p>\n<pre><code>GET /inventory/v1/properties\n</code></pre>\n<p><strong>NSFW</strong> - As the name suggests, they are not safe to work and are still in beta testing mode. Pilots are allowed on these APIs with prior approvals. No support is provided for these APIs.</p>\n<pre><code>GET /inventory/v0-nsfw/properties\n</code></pre>\n</section>\n</main>",
      "markdown_content": "# Versioning\n\nWe have two versions of the APIs.\n\n**V1** \\- These APIs are safe to work, and support is provided for these APIs.\n    \n    \n    GET /inventory/v1/properties\n    \n\n**NSFW** \\- As the name suggests, they are not safe to work and are still in beta testing mode. Pilots are allowed on these APIs with prior approvals. No support is provided for these APIs.\n    \n    \n    GET /inventory/v0-nsfw/properties\n    \n",
      "timestamp": "2025-06-23T15:18:10.032896"
    },
    {
      "url": "https://apaleo.dev/guides/api/rate-limiting.html",
      "title": "Rate Limiting | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Rate Limiting</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  5 minutes\n                                \n                            </p> -->\n<p>apaleo limits API call usage to maintain a high level of availability and ensure that we provide an\nexcellent API experience to all our customers.</p>\n<p>Rate limiting and throttling policies are designed to limit API access, but have different purposes:\nRate limiter limits the number of requests received by the API within any given period. Throttling\n(concurrency limiter) shapes API access by smoothing spikes in traffic by limiting the number of\nactive requests at any given time. apaleo calculates the throttling limit per Client ID and Account\nCode.</p>\n<p>APIs reject requests that exceed the limit. It is necessary to guarantee the system’s stability and\nquick response times to every app and user.</p>\n<p>Limits are set at two different levels:</p>\n<p><strong>Globally</strong>: Unless specified by an exemption every request to our APIs that returns an HTTP status code distinct to <code>429</code> counts towards a global limit per Client ID and Account\nCode.</p>\n<p><strong>By resource</strong>: Specified below in this page there is a list of API endpoints with different limits for a given resource per Client ID and Account\nCode.</p>\n<p>An example: assuming a limit of 20 requests every 5 minutes and the endpoint <code>PATCH /booking/v*/bookings/{id}</code> the following requests will affect different <em>RESOURCE</em> limits, even though they are performed against the same API endpoint</p>\n<ul>\n<li><code>PATCH /booking/v1/bookings/BOOK-1</code></li>\n<li><code>PATCH /booking/v1/bookings/BOOK-2</code></li>\n</ul>\n<p>so in a window of 5 minutes you can: <code>PATCH BOOK-1</code> 20 times and <code>PATCH BOOK-2</code> 20 times.</p>\n<p>Reaching the limit for <code>PATCH BOOK-1</code> doesn’t affect the limit for <code>PATCH BOOK-2</code> and vice versa.</p>\n<p>Also notice, the following calls will affect the same <em>RESOURCE</em> limit, even though they use the different API endpoints</p>\n<ul>\n<li><code>PATCH /booking/v1/bookings/BOOK-1</code></li>\n<li><code>PATCH /booking/v0-nsfw/bookings/BOOK-1</code></li>\n</ul>\n<p>For consistent access to the API services, ensure that your apps adhere to the following rate limits\nand best practices.</p>\n<table>\n<thead>\n<tr>\n<th>Limit</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A total of 3500 requests/minute with 100 requests/second on average and a burst of up to 200 requests/second</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>We might adjust the rate limits in the future.</p>\n</blockquote>\n<h2 id=\"live-accounts\">Live accounts</h2>\n<p>These are the rules that apply for access to apaleo Live accounts.</p>\n<h3 id=\"throttling-wont-apply-to-business-critical-api-calls-for-live-accounts-like\">Throttling won’t apply to business-critical API calls for live accounts, like:</h3>\n<table>\n<thead>\n<tr>\n<th>API Endpoint</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Offers</strong></td>\n</tr>\n<tr>\n<td><code>GET /booking/v*/offers</code></td>\n</tr>\n<tr>\n<td><code>GET /booking/v*/rate-plan-offers</code></td>\n</tr>\n<tr>\n<td><code>GET /booking/v*/service-offers</code></td>\n</tr>\n<tr>\n<td><code>GET /booking/v*/reservations/{id}/offers</code></td>\n</tr>\n<tr>\n<td><code>GET /booking/v*/reservations/{id}/service-offers</code></td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"get-endpoints\">GET endpoints</h5>\n<p>The standard API rate limits apply to all the GET (read) endpoints unless specified in the list\nabove.</p>\n<h5 id=\"specific-resource-limits\">Specific Resource limits</h5>\n<table>\n<thead>\n<tr>\n<th>API Endpoint</th>\n<th>Limit</th>\n<th>Period</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>PUT   /rateplan/v*/rate-plans/{id}/rates</code></td>\n<td><code>150</code></td>\n<td><code>60 min</code></td>\n</tr>\n<tr>\n<td><code>PUT   /rateplan/v*/rate-plans/{id}/rates</code></td>\n<td><code>50</code></td>\n<td><code>20 min</code></td>\n</tr>\n<tr>\n<td><code>PATCH /rateplan/v*/rates</code></td>\n<td><code>200</code></td>\n<td><code>1 min</code></td>\n</tr>\n<tr>\n<td><code>PATCH /booking/v*/bookings/{id}</code></td>\n<td><code>20</code></td>\n<td><code>5 min</code></td>\n</tr>\n<tr>\n<td><code>PATCH /booking/v*/reservations/{id}</code></td>\n<td><code>20</code></td>\n<td><code>5 min</code></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>To be prepared for future changes, your app should be prepared to handle rate limiting on\nall endpoints, rather than just those that are listed above.</p>\n</blockquote>\n<h2 id=\"development-and-trial-accounts\">Development and Trial accounts</h2>\n<p>For requests made to Development and Trial accounts all endpoints are throttled with no exceptions. Below you can see\nthe rules that apply:</p>\n<ul>\n<li>A total of 5 requests/second</li>\n<li>A total of 200 requests/minute</li>\n</ul>\n<h5 id=\"specific-resource-limits-1\">Specific Resource limits</h5>\n<table>\n<thead>\n<tr>\n<th>API Endpoint</th>\n<th>Limit</th>\n<th>Period</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>PUT   /rateplan/v*/rate-plans/{id}/rates</code></td>\n<td><code>30</code></td>\n<td><code>60 min</code></td>\n</tr>\n<tr>\n<td><code>PUT   /rateplan/v*/rate-plans/{id}/rates</code></td>\n<td><code>10</code></td>\n<td><code>20 min</code></td>\n</tr>\n<tr>\n<td><code>PATCH /rateplan/v*/rates</code></td>\n<td><code>50</code></td>\n<td><code>1 min</code></td>\n</tr>\n<tr>\n<td><code>PATCH /booking/v*/bookings/{id}</code></td>\n<td><code>5</code></td>\n<td><code>5 min</code></td>\n</tr>\n<tr>\n<td><code>PATCH /booking/v*/reservations/{id}</code></td>\n<td><code>5</code></td>\n<td><code>5 min</code></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"what-happens-if-my-app-hits-the-limit-wall\">What happens if my app hits the limit wall?</h2>\n<p>When you reach the limit, you receive the HTTP status code\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429\">429 Too many requests</a>. Additionally,\nthe server provides you with more information about which throttling limit you hit and when you can\nresume your calls. The response includes a <em>Retry-After</em> value, which specifies the number of\nseconds your application should wait before sending the next request.</p>\n<pre><code>StatusCode: 429\nContent-Type: text/plain\nRetry-After: 1\nApaleo-Tracking-Id: 0HM0MP4JURCKR:00000002\n</code></pre>\n<p>If you send a request before the retry value has elapsed, your request isn’t processed, and a new\nretry value is returned. If you don’t want to analyze those headers, you can try again in a few\nseconds. Throttled calls, of course, do <em>not</em> count towards your limit.</p>\n<h2 id=\"how-to-play-nice-with-apaleos-api\">How to play nice with apaleo’s API?</h2>\n<p>We noticed that many API calls could be avoided when designing and leveraging a better API together:</p>\n<ul>\n<li><strong>Use webhooks to get updated data</strong> - we have a\n<a href=\"https://webhook.apaleo.com/swagger/index.html\">webhook API</a> where you can subscribe for changes\ninstead of polling for changes. If you are missing events, request them at\n<a href=\"mailto:api@apaleo.com\">api@apaleo.com</a>, and we’ll do our best to add them.\nFor more information about webhooks, see the <a href=\"/guides/start/webhook\">webhook</a> guide.</li>\n<li><strong>Avoid fetching single items in a list</strong> - some apps fetch a list and afterward every item in\nthat list separately. After talking to the partners, we realized that it is usually just one or\ntwo fields missing in that list. Let us know at\n<a href=\"mailto:api@apaleo.com\">api@apaleo.com</a> which fields are missing. We’ll do\nour best to add them to the list, so you save yourself and us the headache to fetch every item one\nby one.</li>\n<li><strong>Avoid fetching data that’s not required</strong> - talking to some partners, we have noticed that\nsometimes data is fetched way too often, and not used during processing. Try to fetch data on\ndemand. apaleo’s API can answer over 90% of the requests in &lt; 500 milliseconds and over 50% in &lt;\n150 milliseconds.</li>\n<li><strong>Cache frequently used data</strong> - Use caching for data that your app uses often.</li>\n<li><strong>Breathe in, breathe out</strong> - Your app should stop making additional API requests until enough\ntime has passed to retry. The recommended backoff time is one second.</li>\n</ul>\n<h2 id=\"frequently-asked-questions\">Frequently asked questions</h2>\n<ul>\n<li>\n<p><strong>Do you folks have an endpoint that returns all endpoints to which rate limiting is applicable?</strong></p>\n<p>Sorry, we don’t have a rate-limit endpoint.</p>\n</li>\n<li>\n<p><strong>What happens when my app hits the rate limit?</strong></p>\n<p>Tell it to relax and try again after one second. The recommended backoff time is one second.</p>\n</li>\n</ul>\n<hr/>\n<p><em>Working smarter instead of harder doesn’t just reduce our server bill, but it also reduces\neveryone’s carbon footprint.</em></p>\n<p>If you have further questions regarding throttling and how to avoid hitting limits, reach out to our\n<a href=\"mailto:api@apaleo.com\">squad</a>.</p>\n</section>\n</main>",
      "markdown_content": "# Rate Limiting\n\napaleo limits API call usage to maintain a high level of availability and ensure that we provide an excellent API experience to all our customers.\n\nRate limiting and throttling policies are designed to limit API access, but have different purposes: Rate limiter limits the number of requests received by the API within any given period. Throttling (concurrency limiter) shapes API access by smoothing spikes in traffic by limiting the number of active requests at any given time. apaleo calculates the throttling limit per Client ID and Account Code.\n\nAPIs reject requests that exceed the limit. It is necessary to guarantee the system’s stability and quick response times to every app and user.\n\nLimits are set at two different levels:\n\n**Globally** : Unless specified by an exemption every request to our APIs that returns an HTTP status code distinct to `429` counts towards a global limit per Client ID and Account Code.\n\n**By resource** : Specified below in this page there is a list of API endpoints with different limits for a given resource per Client ID and Account Code.\n\nAn example: assuming a limit of 20 requests every 5 minutes and the endpoint `PATCH /booking/v*/bookings/{id}` the following requests will affect different _RESOURCE_ limits, even though they are performed against the same API endpoint\n\n  * `PATCH /booking/v1/bookings/BOOK-1`\n  * `PATCH /booking/v1/bookings/BOOK-2`\n\n\n\nso in a window of 5 minutes you can: `PATCH BOOK-1` 20 times and `PATCH BOOK-2` 20 times.\n\nReaching the limit for `PATCH BOOK-1` doesn’t affect the limit for `PATCH BOOK-2` and vice versa.\n\nAlso notice, the following calls will affect the same _RESOURCE_ limit, even though they use the different API endpoints\n\n  * `PATCH /booking/v1/bookings/BOOK-1`\n  * `PATCH /booking/v0-nsfw/bookings/BOOK-1`\n\n\n\nFor consistent access to the API services, ensure that your apps adhere to the following rate limits and best practices.\n\nLimit  \n---  \nA total of 3500 requests/minute with 100 requests/second on average and a burst of up to 200 requests/second  \n  \n> We might adjust the rate limits in the future.\n\n## Live accounts\n\nThese are the rules that apply for access to apaleo Live accounts.\n\n### Throttling won’t apply to business-critical API calls for live accounts, like:\n\nAPI Endpoint  \n---  \n**Offers**  \n`GET /booking/v*/offers`  \n`GET /booking/v*/rate-plan-offers`  \n`GET /booking/v*/service-offers`  \n`GET /booking/v*/reservations/{id}/offers`  \n`GET /booking/v*/reservations/{id}/service-offers`  \n  \n##### GET endpoints\n\nThe standard API rate limits apply to all the GET (read) endpoints unless specified in the list above.\n\n##### Specific Resource limits\n\nAPI Endpoint | Limit | Period  \n---|---|---  \n`PUT /rateplan/v*/rate-plans/{id}/rates` | `150` | `60 min`  \n`PUT /rateplan/v*/rate-plans/{id}/rates` | `50` | `20 min`  \n`PATCH /rateplan/v*/rates` | `200` | `1 min`  \n`PATCH /booking/v*/bookings/{id}` | `20` | `5 min`  \n`PATCH /booking/v*/reservations/{id}` | `20` | `5 min`  \n  \n> To be prepared for future changes, your app should be prepared to handle rate limiting on all endpoints, rather than just those that are listed above.\n\n## Development and Trial accounts\n\nFor requests made to Development and Trial accounts all endpoints are throttled with no exceptions. Below you can see the rules that apply:\n\n  * A total of 5 requests/second\n  * A total of 200 requests/minute\n\n\n\n##### Specific Resource limits\n\nAPI Endpoint | Limit | Period  \n---|---|---  \n`PUT /rateplan/v*/rate-plans/{id}/rates` | `30` | `60 min`  \n`PUT /rateplan/v*/rate-plans/{id}/rates` | `10` | `20 min`  \n`PATCH /rateplan/v*/rates` | `50` | `1 min`  \n`PATCH /booking/v*/bookings/{id}` | `5` | `5 min`  \n`PATCH /booking/v*/reservations/{id}` | `5` | `5 min`  \n  \n## What happens if my app hits the limit wall?\n\nWhen you reach the limit, you receive the HTTP status code [429 Too many requests](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429). Additionally, the server provides you with more information about which throttling limit you hit and when you can resume your calls. The response includes a _Retry-After_ value, which specifies the number of seconds your application should wait before sending the next request.\n    \n    \n    StatusCode: 429\n    Content-Type: text/plain\n    Retry-After: 1\n    Apaleo-Tracking-Id: 0HM0MP4JURCKR:00000002\n    \n\nIf you send a request before the retry value has elapsed, your request isn’t processed, and a new retry value is returned. If you don’t want to analyze those headers, you can try again in a few seconds. Throttled calls, of course, do _not_ count towards your limit.\n\n## How to play nice with apaleo’s API?\n\nWe noticed that many API calls could be avoided when designing and leveraging a better API together:\n\n  * **Use webhooks to get updated data** \\- we have a [webhook API](https://webhook.apaleo.com/swagger/index.html) where you can subscribe for changes instead of polling for changes. If you are missing events, request them at [api@apaleo.com](mailto:api@apaleo.com), and we’ll do our best to add them. For more information about webhooks, see the [webhook](/guides/start/webhook) guide.\n  * **Avoid fetching single items in a list** \\- some apps fetch a list and afterward every item in that list separately. After talking to the partners, we realized that it is usually just one or two fields missing in that list. Let us know at [api@apaleo.com](mailto:api@apaleo.com) which fields are missing. We’ll do our best to add them to the list, so you save yourself and us the headache to fetch every item one by one.\n  * **Avoid fetching data that’s not required** \\- talking to some partners, we have noticed that sometimes data is fetched way too often, and not used during processing. Try to fetch data on demand. apaleo’s API can answer over 90% of the requests in < 500 milliseconds and over 50% in < 150 milliseconds.\n  * **Cache frequently used data** \\- Use caching for data that your app uses often.\n  * **Breathe in, breathe out** \\- Your app should stop making additional API requests until enough time has passed to retry. The recommended backoff time is one second.\n\n\n\n## Frequently asked questions\n\n  * **Do you folks have an endpoint that returns all endpoints to which rate limiting is applicable?**\n\nSorry, we don’t have a rate-limit endpoint.\n\n  * **What happens when my app hits the rate limit?**\n\nTell it to relax and try again after one second. The recommended backoff time is one second.\n\n\n\n\n* * *\n\n_Working smarter instead of harder doesn’t just reduce our server bill, but it also reduces everyone’s carbon footprint._\n\nIf you have further questions regarding throttling and how to avoid hitting limits, reach out to our [squad](mailto:api@apaleo.com).\n",
      "timestamp": "2025-06-23T15:18:10.748175"
    },
    {
      "url": "https://apaleo.dev/guides/api/pagination.html",
      "title": "Pagination | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Pagination</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>We <strong>recommend</strong> not using a <code>pageSize</code> higher than <code>100</code>. This ensures optimal performance, minimizes memory usage, and works well across a wide range of scenarios.</p>\n<p>Some endpoints currently have no enforced limits, but this may change. It’s important to always implement proper pagination handling.</p>\n<ul>\n<li>The whole Reports module</li>\n<li>/finance/{version}/accounts/aggregate-pairs-daily</li>\n<li>/finance/{version}/accounts/aggregat<code>e</code>-daily</li>\n<li>/finance/{version}/accounts/aggregate</li>\n<li>/finance/{version}/accounts/export</li>\n<li>/finance/{version}/accounts/export-daily</li>\n<li>/finance/{version}/accounts/export-gross-daily</li>\n</ul>\n<p><strong>Best Practices:</strong></p>\n<ul>\n<li>Always specify a <code>pageSize</code>, ideally <code>100</code>, to ensure predictable and consistent data handling.</li>\n<li>Never assume that a single response contains all available data.</li>\n<li>Compare the number of items returned with the expected count.</li>\n<li>If the counts differ, continue calling the endpoint with the next page.</li>\n</ul>\n</section>\n</main>",
      "markdown_content": "# Pagination\n\nWe **recommend** not using a `pageSize` higher than `100`. This ensures optimal performance, minimizes memory usage, and works well across a wide range of scenarios.\n\nSome endpoints currently have no enforced limits, but this may change. It’s important to always implement proper pagination handling.\n\n  * The whole Reports module\n  * /finance/{version}/accounts/aggregate-pairs-daily\n  * /finance/{version}/accounts/aggregat`e`-daily\n  * /finance/{version}/accounts/aggregate\n  * /finance/{version}/accounts/export\n  * /finance/{version}/accounts/export-daily\n  * /finance/{version}/accounts/export-gross-daily\n\n\n\n**Best Practices:**\n\n  * Always specify a `pageSize`, ideally `100`, to ensure predictable and consistent data handling.\n  * Never assume that a single response contains all available data.\n  * Compare the number of items returned with the expected count.\n  * If the counts differ, continue calling the endpoint with the next page.\n\n\n",
      "timestamp": "2025-06-23T15:18:11.427316"
    },
    {
      "url": "https://apaleo.dev/guides/api/endpoints.html",
      "title": "Endpoints | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Endpoints</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>Swagger also provides a thorough overview of all endpoints that compose the APIs.</p>\n<p>Each listed endpoint also includes the required request information, such as the:</p>\n<ul>\n<li>Required parameters.</li>\n<li>Required parameter data types.</li>\n<li>HTTP method to access the resource.</li>\n</ul>\n<img src=\"/assets/images/oauth/swagger-end-points.png\">\n<p>Select each resource to display their additional content to get a more detailed overview.</p>\n<hr/>\n<h2 id=\"testing-endpoints\">Testing endpoints</h2>\n<p>One of the powerful functionalities Swagger provides is the ability to test an API endpoint directly\nthrough the documentation UI.</p>\n<p>After you select a specific endpoint, the <strong>Try it out</strong> button is displayed.</p>\n<img src=\"/assets/images/oauth/swagger-try-out.png\"/>\n<p>Expand that section to see the input fields for each required and optional parameter. Enter the\ncorrect values and select <strong>Execute</strong>.</p>\n<img src=\"/assets/images/oauth/swagger-execute.png\"/>\n<p>After you execute the test, you can validate the response data.</p>\n<hr/>\n<h2 id=\"swagger-response-data\">Swagger response data</h2>\n<p>Each listed endpoint also includes response body data to validate your development and tests. These\nexamples include the status codes and JSON for successful HTTP requests.</p>\n<img src=\"/assets/images/oauth/swagger-execute-result.png\"/>\n</img></section>\n</main>",
      "markdown_content": "# Endpoints\n\nSwagger also provides a thorough overview of all endpoints that compose the APIs.\n\nEach listed endpoint also includes the required request information, such as the:\n\n  * Required parameters.\n  * Required parameter data types.\n  * HTTP method to access the resource.\n\n![](/assets/images/oauth/swagger-end-points.png)\n\nSelect each resource to display their additional content to get a more detailed overview.\n\n* * *\n\n## Testing endpoints\n\nOne of the powerful functionalities Swagger provides is the ability to test an API endpoint directly through the documentation UI.\n\nAfter you select a specific endpoint, the **Try it out** button is displayed.\n\n![](/assets/images/oauth/swagger-try-out.png)\n\nExpand that section to see the input fields for each required and optional parameter. Enter the correct values and select **Execute**.\n\n![](/assets/images/oauth/swagger-execute.png)\n\nAfter you execute the test, you can validate the response data.\n\n* * *\n\n## Swagger response data\n\nEach listed endpoint also includes response body data to validate your development and tests. These examples include the status codes and JSON for successful HTTP requests.\n\n![](/assets/images/oauth/swagger-execute-result.png)\n",
      "timestamp": "2025-06-23T15:18:12.132038"
    },
    {
      "url": "https://apaleo.dev/guides/api/scopes.html",
      "title": "Scopes | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Scopes</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  7 minutes\n                                \n                            </p> -->\n<p>All OAuth 2.0 clients and access tokens have a scope. The scope restricts the endpoints to which a\nclient has access, and whether a client has read or write access to an endpoint. For example, if you\nwant to access endpoints that contain reservation data, then your app must have the\n<code>reservations.read</code> access scope.</p>\n<p>Following scopes are supported by apaleo:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"scopes\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"api\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Core API\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"scopes\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"companies.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Read companies\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"companies.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Modify companies\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"reports.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Retrieve report data\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"logs.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Read logs\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"invoices.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Mark invoices as paid\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"invoices.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Retrieve invoices and preview invoices as data or PDF\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"folios.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Perform actions on folios\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"folios.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Read folios, including charges and payments\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"account.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Update the current account\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"reservations.force-manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Modify stay dates regardless of availability or restrictions\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"reservations.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Modify, check in/out, cancel reservations\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"reservations.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Read reservations\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"availability.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Retrieve availability information\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"offer-index.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Request offer index\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"offers.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Request offers\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"rateplans.read-corporate\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Read corporate rate plans\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"rates.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Update rates and restrictions\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"rates.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Read rates and restrictions\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"maintenances.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Change maintenance windows\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"maintenances.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Read maintenance information\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"setup.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"This scope allows the app to read settings and configurations for the whole account and all properties, including reading units, unit groups, and rate plans.\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"setup.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"This scope allows the app to modify settings and configurations for the whole account and all properties, including creating, modifying and deleting units, unit groups, rate plans and properties.\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"accounting.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Read accounting details\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"operations.trigger-night-audit\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Trigger night audit\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"operations.change-room-state\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Change room state\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"availability.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"This scope allows to modify the availability\"</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n      </span><span class=\"p\">]</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"distribution\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Distribution API\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"scopes\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"distribution:subscriptions.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Manage ARI notification configuration\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"distribution:reservations.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Create and modify bookings and reservations\"</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n      </span><span class=\"p\">]</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"identity_server\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Identity API\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"scopes\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"identity:account-users.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Read users\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"identity:account-users.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Manage users\"</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n      </span><span class=\"p\">]</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"notifications\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Notifications API\"</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"integration\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Integration API\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"scopes\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"integration:ui-integrations.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Include apaleo One content\"</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n      </span><span class=\"p\">]</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"rendering\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Rendering API\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"scopes\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"rendering:upload-logo\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Upload invoice logo\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"rendering:manage-configuration\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Manage invoice configuration settings\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"rendering:render-invoice\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Render invoices\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"rendering:read-configuration\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Read invoice configuration settings\"</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n      </span><span class=\"p\">]</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"fiscalization\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"The Fiscalization API\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"scopes\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"fiscalization:configuration.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Full access to fiscalization configuration\"</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n      </span><span class=\"p\">]</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"fiscalization-austria\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"The Fiscalization Austria API\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"scopes\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"fiscalization-austria:snapshots.get\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Get snapshots\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"fiscalization-austria:configuration.manage\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Full access to fiscalization configuration\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n          </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"fiscalization-austria:receipts.read\"</span><span class=\"p\">,</span><span class=\"w\">\n          </span><span class=\"nl\">\"displayName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Read receipts\"</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n      </span><span class=\"p\">]</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n</section>\n</main>",
      "markdown_content": "# Scopes\n\nAll OAuth 2.0 clients and access tokens have a scope. The scope restricts the endpoints to which a client has access, and whether a client has read or write access to an endpoint. For example, if you want to access endpoints that contain reservation data, then your app must have the `reservations.read` access scope.\n\nFollowing scopes are supported by apaleo:\n    \n    \n    {\n      \"scopes\": [\n        {\n          \"name\": \"api\",\n          \"description\": \"Core API\",\n          \"scopes\": [\n            {\n              \"name\": \"companies.read\",\n              \"displayName\": \"Read companies\"\n            },\n            {\n              \"name\": \"companies.manage\",\n              \"displayName\": \"Modify companies\"\n            },\n            {\n              \"name\": \"reports.read\",\n              \"displayName\": \"Retrieve report data\"\n            },\n            {\n              \"name\": \"logs.read\",\n              \"displayName\": \"Read logs\"\n            },\n            {\n              \"name\": \"invoices.manage\",\n              \"displayName\": \"Mark invoices as paid\"\n            },\n            {\n              \"name\": \"invoices.read\",\n              \"displayName\": \"Retrieve invoices and preview invoices as data or PDF\"\n            },\n            {\n              \"name\": \"folios.manage\",\n              \"displayName\": \"Perform actions on folios\"\n            },\n            {\n              \"name\": \"folios.read\",\n              \"displayName\": \"Read folios, including charges and payments\"\n            },\n            {\n              \"name\": \"account.manage\",\n              \"displayName\": \"Update the current account\"\n            },\n            {\n              \"name\": \"reservations.force-manage\",\n              \"displayName\": \"Modify stay dates regardless of availability or restrictions\"\n            },\n            {\n              \"name\": \"reservations.manage\",\n              \"displayName\": \"Modify, check in/out, cancel reservations\"\n            },\n            {\n              \"name\": \"reservations.read\",\n              \"displayName\": \"Read reservations\"\n            },\n            {\n              \"name\": \"availability.read\",\n              \"displayName\": \"Retrieve availability information\"\n            },\n            {\n              \"name\": \"offer-index.read\",\n              \"displayName\": \"Request offer index\"\n            },\n            {\n              \"name\": \"offers.read\",\n              \"displayName\": \"Request offers\"\n            },\n            {\n              \"name\": \"rateplans.read-corporate\",\n              \"displayName\": \"Read corporate rate plans\"\n            },\n            {\n              \"name\": \"rates.manage\",\n              \"displayName\": \"Update rates and restrictions\"\n            },\n            {\n              \"name\": \"rates.read\",\n              \"displayName\": \"Read rates and restrictions\"\n            },\n            {\n              \"name\": \"maintenances.manage\",\n              \"displayName\": \"Change maintenance windows\"\n            },\n            {\n              \"name\": \"maintenances.read\",\n              \"displayName\": \"Read maintenance information\"\n            },\n            {\n              \"name\": \"setup.read\",\n              \"displayName\": \"This scope allows the app to read settings and configurations for the whole account and all properties, including reading units, unit groups, and rate plans.\"\n            },\n            {\n              \"name\": \"setup.manage\",\n              \"displayName\": \"This scope allows the app to modify settings and configurations for the whole account and all properties, including creating, modifying and deleting units, unit groups, rate plans and properties.\"\n            },\n            {\n              \"name\": \"accounting.read\",\n              \"displayName\": \"Read accounting details\"\n            },\n            {\n              \"name\": \"operations.trigger-night-audit\",\n              \"displayName\": \"Trigger night audit\"\n            },\n            {\n              \"name\": \"operations.change-room-state\",\n              \"displayName\": \"Change room state\"\n            },\n            {\n              \"name\": \"availability.manage\",\n              \"displayName\": \"This scope allows to modify the availability\"\n            }\n          ]\n        },\n        {\n          \"name\": \"distribution\",\n          \"description\": \"Distribution API\",\n          \"scopes\": [\n            {\n              \"name\": \"distribution:subscriptions.manage\",\n              \"displayName\": \"Manage ARI notification configuration\"\n            },\n            {\n              \"name\": \"distribution:reservations.manage\",\n              \"displayName\": \"Create and modify bookings and reservations\"\n            }\n          ]\n        },\n        {\n          \"name\": \"identity_server\",\n          \"description\": \"Identity API\",\n          \"scopes\": [\n            {\n              \"name\": \"identity:account-users.read\",\n              \"displayName\": \"Read users\"\n            },\n            {\n              \"name\": \"identity:account-users.manage\",\n              \"displayName\": \"Manage users\"\n            }\n          ]\n        },\n        {\n          \"name\": \"notifications\",\n          \"description\": \"Notifications API\"\n        },\n        {\n          \"name\": \"integration\",\n          \"description\": \"Integration API\",\n          \"scopes\": [\n            {\n              \"name\": \"integration:ui-integrations.manage\",\n              \"displayName\": \"Include apaleo One content\"\n            }\n          ]\n        },\n        {\n          \"name\": \"rendering\",\n          \"description\": \"Rendering API\",\n          \"scopes\": [\n            {\n              \"name\": \"rendering:upload-logo\",\n              \"displayName\": \"Upload invoice logo\"\n            },\n            {\n              \"name\": \"rendering:manage-configuration\",\n              \"displayName\": \"Manage invoice configuration settings\"\n            },\n            {\n              \"name\": \"rendering:render-invoice\",\n              \"displayName\": \"Render invoices\"\n            },\n            {\n              \"name\": \"rendering:read-configuration\",\n              \"displayName\": \"Read invoice configuration settings\"\n            }\n          ]\n        },\n        {\n          \"name\": \"fiscalization\",\n          \"description\": \"The Fiscalization API\",\n          \"scopes\": [\n            {\n              \"name\": \"fiscalization:configuration.manage\",\n              \"displayName\": \"Full access to fiscalization configuration\"\n            }\n          ]\n        },\n        {\n          \"name\": \"fiscalization-austria\",\n          \"description\": \"The Fiscalization Austria API\",\n          \"scopes\": [\n            {\n              \"name\": \"fiscalization-austria:snapshots.get\",\n              \"displayName\": \"Get snapshots\"\n            },\n            {\n              \"name\": \"fiscalization-austria:configuration.manage\",\n              \"displayName\": \"Full access to fiscalization configuration\"\n            },\n            {\n              \"name\": \"fiscalization-austria:receipts.read\",\n              \"displayName\": \"Read receipts\"\n            }\n          ]\n        }\n      ]\n    }\n    \n",
      "timestamp": "2025-06-23T15:18:12.895759"
    },
    {
      "url": "https://apaleo.dev/guides/api/errors.html",
      "title": "HTTP status codes and error types | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>HTTP status codes and error types</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>apaleo uses <a href=\"https://tools.ietf.org/html/rfc2616#section-10\">standard HTTP status codes</a> for each API’s response.</p>\n<p>Status codes are divided into the following five categories:</p>\n<ul>\n<li>1xx: Informational - Communicates transfer protocol-level information.</li>\n<li>2xx: Success - The request was successful.</li>\n<li>3xx: Redirection - The client must take some additional action to complete the request.</li>\n<li>4xx: Client Error - Failed request due to client error.</li>\n<li>5xx: Server Error - Failed request due to server error.</li>\n</ul>\n</section>\n</main>",
      "markdown_content": "# HTTP status codes and error types\n\napaleo uses [standard HTTP status codes](https://tools.ietf.org/html/rfc2616#section-10) for each API’s response.\n\nStatus codes are divided into the following five categories:\n\n  * 1xx: Informational - Communicates transfer protocol-level information.\n  * 2xx: Success - The request was successful.\n  * 3xx: Redirection - The client must take some additional action to complete the request.\n  * 4xx: Client Error - Failed request due to client error.\n  * 5xx: Server Error - Failed request due to server error.\n\n\n",
      "timestamp": "2025-06-23T15:18:13.589048"
    },
    {
      "url": "https://apaleo.dev/guides/api/trouble-shooting.html",
      "title": "Troubleshooting | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Troubleshooting</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  2 minutes\n                                \n                            </p> -->\n<p>Sometimes things don’t work as you expect them to - here are some tips &amp; tricks on how to figure out what’s wrong, and what to do then:</p>\n<hr/>\n<h2 id=\"error-handling\">Error handling</h2>\n<p>Your integration might have to deal with errors at some point when making requests to our APIs.\nFirst thing to check is the status code that you get in that error response:</p>\n<table>\n<thead>\n<tr>\n<th>Status Code</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>401</td>\n<td><strong>Unauthorized</strong>. When you are using the client credentials flow, this means there is something wrong with your token, or the way you pass it. Check the Getting Started Guide or Connect your app with OAuth 2.0 for how to do it. When you are using the apaleo UI or Swagger UI, all should be good if you log in. On Swagger, use the “Authorize” button in the top-right corner.</td>\n</tr>\n<tr>\n<td>403</td>\n<td><strong>Forbidden</strong>. Your client or user does not have the rights to access a specific resource. Contact us to request more access.</td>\n</tr>\n<tr>\n<td>404</td>\n<td><strong>Not Found</strong>. You can get this, when you try getting, updating or deleting a resource. That can either be a typo in the URL, or a wrong id you are passing as a - query parameter.</td>\n</tr>\n<tr>\n<td>405</td>\n<td><strong>Method not allowed</strong>. You will get this, if you use the wrong HTTP verb, for example POST instead of PUT. Check the API definition to see which verbs to use for which action.</td>\n</tr>\n<tr>\n<td>422</td>\n<td><strong>Something’s wrong</strong>. The apaleo API uses this as a catch-all for client side errors, and we try our best to provide more information in the error response message. In simple cases, the request you passed in is not valid: mandatory fields are not set, or in a wrong format we don’t understand. But it can also be that some setup is missing, for example when you are trying to add a unit to a group that does not exist. If you do not have access to the resources to fix the root cause, please reach out to the customer for which this problem appears, because we can’t fix it, either. We would rather not want to mess with our clients data.</td>\n</tr>\n<tr>\n<td>500</td>\n<td><strong>Server errors</strong>. Oh no! This should never happen, as it means there is something broken on our side. We monitor those errors, and will see it as soon as you do - and then start investigating and fixing. If you want to be notified when it’s fixed, or want to help us by providing additional information on what you did, <a href=\"mailto:api@apaleo.com\">api@apaleo.com</a> is the best way to get in touch.</td>\n</tr>\n</tbody>\n</table>\n<hr/>\n<h2 id=\"authentication-and-authorization-blues\">Authentication and authorization blues?</h2>\n<p>Facing issues with authenticating your app with our authorization server? Well, you are in good\nhands, just head to <a href=\"/guides/start/oauth-connection/best-practices\">Best practices for OAuth</a>.</p>\n<hr/>\n<h2 id=\"webhooks-not-getting-hooked\">Webhooks not getting hooked?</h2>\n<p>Facing issues with webhooks? Not a problem, just refer to\n<a href=\"/guides/start/webhook/best-practices\">Best practices for webhooks</a>.</p>\n<hr/>\n<h2 id=\"nothing-works\">Nothing works?</h2>\n<p>Check <a href=\"https://status.apaleo.com/\">https://status.apaleo.com/</a> to see if apaleo is up and running -\nand if it’s not, check back in a few minutes. There’s no need to tell us, as our army of friendly\nrobots already did that.</p>\n</section>\n</main>",
      "markdown_content": "# Troubleshooting\n\nSometimes things don’t work as you expect them to - here are some tips & tricks on how to figure out what’s wrong, and what to do then:\n\n* * *\n\n## Error handling\n\nYour integration might have to deal with errors at some point when making requests to our APIs. First thing to check is the status code that you get in that error response:\n\nStatus Code | Description  \n---|---  \n401 | **Unauthorized**. When you are using the client credentials flow, this means there is something wrong with your token, or the way you pass it. Check the Getting Started Guide or Connect your app with OAuth 2.0 for how to do it. When you are using the apaleo UI or Swagger UI, all should be good if you log in. On Swagger, use the “Authorize” button in the top-right corner.  \n403 | **Forbidden**. Your client or user does not have the rights to access a specific resource. Contact us to request more access.  \n404 | **Not Found**. You can get this, when you try getting, updating or deleting a resource. That can either be a typo in the URL, or a wrong id you are passing as a - query parameter.  \n405 | **Method not allowed**. You will get this, if you use the wrong HTTP verb, for example POST instead of PUT. Check the API definition to see which verbs to use for which action.  \n422 | **Something’s wrong**. The apaleo API uses this as a catch-all for client side errors, and we try our best to provide more information in the error response message. In simple cases, the request you passed in is not valid: mandatory fields are not set, or in a wrong format we don’t understand. But it can also be that some setup is missing, for example when you are trying to add a unit to a group that does not exist. If you do not have access to the resources to fix the root cause, please reach out to the customer for which this problem appears, because we can’t fix it, either. We would rather not want to mess with our clients data.  \n500 | **Server errors**. Oh no! This should never happen, as it means there is something broken on our side. We monitor those errors, and will see it as soon as you do - and then start investigating and fixing. If you want to be notified when it’s fixed, or want to help us by providing additional information on what you did, [api@apaleo.com](mailto:api@apaleo.com) is the best way to get in touch.  \n  \n* * *\n\n## Authentication and authorization blues?\n\nFacing issues with authenticating your app with our authorization server? Well, you are in good hands, just head to [Best practices for OAuth](/guides/start/oauth-connection/best-practices).\n\n* * *\n\n## Webhooks not getting hooked?\n\nFacing issues with webhooks? Not a problem, just refer to [Best practices for webhooks](/guides/start/webhook/best-practices).\n\n* * *\n\n## Nothing works?\n\nCheck <https://status.apaleo.com/> to see if apaleo is up and running - and if it’s not, check back in a few minutes. There’s no need to tell us, as our army of friendly robots already did that.\n",
      "timestamp": "2025-06-23T15:18:14.290490"
    },
    {
      "url": "https://apaleo.dev/guides/webhook/overview.html",
      "title": "Overview | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Overview</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>For a better integration between apaleo and your app, we provide you two ways to share information between apaleo and your app: polling and webhooks. Polling is like pinging apaleo APIs to ask whether an event has occurred, and webhooks are like receiving automated messages from apaleo Webhooks API when something happens.</p>\n<p>Webhook allows you to build or set up apps that subscribe to certain events on apaleo. Any change\nthat happens to the property is captured as an event. These include changes relating to\nreservations, units, folio, invoice, system, and so on. When configured, a webhook pushes the data\nto your application’s webhooks URL automatically. Webhooks are more scalable than regularly polling\nfor changes, especially for apps with a large install base.</p>\n<p>Using the Webhooks API requires the following:</p>\n<ul>\n<li>That you use webhooks by subscribing to the events that you want to be notified about, and by\nspecifying a URL to send those notifications.</li>\n<li>That you deploy a publicly available, secure (HTTPS) endpoint for that URL that can handle the\nwebhook payloads.</li>\n</ul>\n<p>Once you’ve configured the URL, apaleo will post the event as a JSON to your webhook URL. For\nexample, if a “checked-out” event occurs, then a notification is sent to the specified URL. Webhooks\ncan send reservation confirmations or check-out emails with the invoice attached, issuing mobile\nkeys on the check-in, and much more.</p>\n<p>Before we dig into the details, let’s clarify some terms.</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Term</th>\n<th align=\"left\">What’s this?</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Webhook</td>\n<td align=\"left\">A serialized message sent from one application to another’s unique URL over the web.</td>\n</tr>\n<tr>\n<td align=\"left\">Webhook URL</td>\n<td align=\"left\">The URL where an application will receive webhook data from apaleo.</td>\n</tr>\n<tr>\n<td align=\"left\">Hook</td>\n<td align=\"left\">A software function that runs when a specific event happens.</td>\n</tr>\n<tr>\n<td align=\"left\">Poll</td>\n<td align=\"left\">To ping a URL and ask for new data.</td>\n</tr>\n<tr>\n<td align=\"left\">Payload</td>\n<td align=\"left\">The data sent from apaleo to the webhook URL of your application.</td>\n</tr>\n</tbody>\n</table>\n</section>\n</main>",
      "markdown_content": "# Overview\n\nFor a better integration between apaleo and your app, we provide you two ways to share information between apaleo and your app: polling and webhooks. Polling is like pinging apaleo APIs to ask whether an event has occurred, and webhooks are like receiving automated messages from apaleo Webhooks API when something happens.\n\nWebhook allows you to build or set up apps that subscribe to certain events on apaleo. Any change that happens to the property is captured as an event. These include changes relating to reservations, units, folio, invoice, system, and so on. When configured, a webhook pushes the data to your application’s webhooks URL automatically. Webhooks are more scalable than regularly polling for changes, especially for apps with a large install base.\n\nUsing the Webhooks API requires the following:\n\n  * That you use webhooks by subscribing to the events that you want to be notified about, and by specifying a URL to send those notifications.\n  * That you deploy a publicly available, secure (HTTPS) endpoint for that URL that can handle the webhook payloads.\n\n\n\nOnce you’ve configured the URL, apaleo will post the event as a JSON to your webhook URL. For example, if a “checked-out” event occurs, then a notification is sent to the specified URL. Webhooks can send reservation confirmations or check-out emails with the invoice attached, issuing mobile keys on the check-in, and much more.\n\nBefore we dig into the details, let’s clarify some terms.\n\nTerm | What’s this?  \n---|---  \nWebhook | A serialized message sent from one application to another’s unique URL over the web.  \nWebhook URL | The URL where an application will receive webhook data from apaleo.  \nHook | A software function that runs when a specific event happens.  \nPoll | To ping a URL and ask for new data.  \nPayload | The data sent from apaleo to the webhook URL of your application.\n",
      "timestamp": "2025-06-23T15:18:15.005881"
    },
    {
      "url": "https://apaleo.dev/guides/webhook/configuration.html",
      "title": "Configure webhooks | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Configure webhooks</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  15 minutes\n                                \n                            </p> -->\n<p>Webhooks can be configured for as many topics and properties as you would like. All you need to do\nis create a subscription by making a <code>POST</code> request to the <strong>Webhook API</strong>.</p>\n<pre><code>POST https://webhook.apaleo.com/v1/subscriptions\n</code></pre>\n<p>These subscriptions tell apaleo which events your particular app would like to receive.</p>\n<blockquote>\n<p>You must subscribe to events in your app rather than subscribe to them through <strong>Webhook\nAPI</strong> Swagger reference.</p>\n</blockquote>\n<h3 id=\"important-considerations\">Important considerations</h3>\n<p>We recommend that your webhook URLs be protected using basic authentication or HTTPS.</p>\n<p>It also needs to be reachable from apaleo.com. If you’re not sure, check with your security or ops\nteam, if any firewalls prevent incoming traffic on (usually) port 443, and ask to whitelist us.</p>\n<p>Our outbound IP addresses are:</p>\n<pre><code>34.240.36.71\n52.212.76.75\n63.33.249.221\n</code></pre>\n<h3 id=\"events\">Events</h3>\n<p>When subscribing, you can choose events from which topic you want to receive. A topic is grouping\nevents of several types. The available events are:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">TOPIC</th>\n<th align=\"left\">TYPE</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">account</td>\n<td align=\"left\">set-to-live*</td>\n<td>You will receive a <code>set-to-live</code> event when an account is live.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">suspended*</td>\n<td>You will receive a <code>suspended</code> event when an account is suspended.</td>\n</tr>\n<tr>\n<td align=\"left\">property</td>\n<td align=\"left\">created*</td>\n<td>You will receive a <code>created</code> event when a new property is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">changed</td>\n<td>You will receive a <code>changed</code> event when property settings are changed like description, address, and so on.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">set-to-live</td>\n<td>You will receive a <code>set-to-live</code> event when a property is live.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">archived</td>\n<td>You will receive a <code>archived</code> event when a property is archived.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted</td>\n<td>You will receive a <code>deleted</code> event when a property is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\">reservation</td>\n<td align=\"left\">created</td>\n<td>You will receive a <code>created</code> event when a new reservation is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">amended</td>\n<td>You will receive a <code>amended</code> event when the stay-related data is amended such as services, rate plan, stay dates etc.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">changed</td>\n<td>You will receive a <code>changed</code> event when anything other than stay details is changed in a reservation such as name, comments, additional guests.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">checked-in</td>\n<td>You will receive a <code>checked-in</code> event when a reservation is checked-in.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">checked-out</td>\n<td>You will receive a <code>checked-out</code> event when a reservation is checked-out.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">check-in-reverted</td>\n<td>You will receive a <code>check-in-reverted</code> event when a reservation is moved from the InHouse status back to confirmed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">set-to-no-show</td>\n<td>You will receive a <code>set-to-no-show</code> event when a reservation is marked as no-show.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">unit-assigned</td>\n<td>You will receive a <code>unit-assigned</code> event when a unit is assigned to a reservation.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">unit-unassigned</td>\n<td>You will receive a <code>unit-unassigned</code> event when a unit is unassigned from a reservation.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">payment-account-set</td>\n<td>You will receive a <code>payment-account-set</code> event when a payment account details are added or updated for a reservation.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">payment-account-removed</td>\n<td>You will receive a <code>payment-account-removed</code> event when a payment account is removed from a reservation.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">canceled</td>\n<td>You will receive a <code>canceled</code> event when a reservation is canceled.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted</td>\n<td>You will receive a <code>deleted</code> event when a reservation is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\">booking</td>\n<td align=\"left\">created*</td>\n<td>You will receive a <code>created</code> event when a booking is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">changed*</td>\n<td>You will receive a <code>changed</code> event when a booking is changed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted*</td>\n<td>You will receive a <code>deleted</code> event when a booking is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\">company</td>\n<td align=\"left\">created</td>\n<td>You will receive a <code>created</code> event when a company is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">changed</td>\n<td>You will receive a <code>changed</code> event when a company is changed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted</td>\n<td>You will receive a <code>deleted</code> event when a company is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\">group</td>\n<td align=\"left\">created</td>\n<td>You will receive a <code>created</code> event when a group is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">changed</td>\n<td>You will receive a <code>changed</code> event when a group is changed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted</td>\n<td>You will receive a <code>deleted</code> event when a group is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\">block</td>\n<td align=\"left\">created</td>\n<td>You will receive a <code>created</code> event when a block is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">changed</td>\n<td>You will receive a <code>changed</code> event when a block is changed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted</td>\n<td>You will receive a <code>deleted</code> event when a block is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">confirmed</td>\n<td>You will receive a <code>confirmed</code> event when a block is confirmed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">released</td>\n<td>You will receive a <code>released</code> event when a block is released.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">washed</td>\n<td>You will receive a <code>washed</code> event when a block is washed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">cancelled</td>\n<td>You will receive a <code>cancelled</code> event when a block is cancelled.</td>\n</tr>\n<tr>\n<td align=\"left\">unit</td>\n<td align=\"left\">created</td>\n<td>You will receive a <code>created</code> event when a unit is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">changed</td>\n<td>You will receive a <code>changed</code> event when a unit is changed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted</td>\n<td>You will receive a <code>deleted</code> event when a unit is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\">unitgroup</td>\n<td align=\"left\">created</td>\n<td>You will receive a <code>created</code> event when a unit group is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">changed</td>\n<td>You will receive a <code>changed</code> event when a unit group is changed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted</td>\n<td>You will receive a <code>deleted</code> event when a unit group is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\">unitattributedefinition</td>\n<td align=\"left\">created</td>\n<td>You will receive a <code>created</code> event when a unit attribute definition is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">changed</td>\n<td>You will receive a <code>changed</code> event when a unit attribute definition is changed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted</td>\n<td>You will receive a <code>deleted</code> event when a unit attribute definition is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\">folio</td>\n<td align=\"left\">created</td>\n<td>You will receive a <code>created</code> event when a folio is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">closed</td>\n<td>You will receive a <code>closed</code> event when a folio is closed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">balance-changed</td>\n<td>You will receive a <code>balance-changed</code> event when there are changes in the folio balance.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">reopened</td>\n<td>You will receive a <code>reopened</code> event when a folio is reopened.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted</td>\n<td>You will receive a <code>deleted</code> event when a folio is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">charges-changed</td>\n<td>You will receive a <code>charges-changed</code> event when a charge is added to the folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">charge-posted</td>\n<td>You will receive a <code>charge-posted</code> event when a charge is posted to the folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">debitor-changed</td>\n<td>You will receive a <code>debitor-changed</code> event when a debitor is changed in the folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">transitory-charge-posted</td>\n<td>You will receive a <code>transitory-charge-posted</code> event when a transitory charge is posted to the folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">allowance-posted</td>\n<td>You will receive a <code>allowance-posted</code> event when an allowance (equal or less) for a charge is posted to the folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deposit-item-added</td>\n<td>You will receive a <code>deposit-item-added</code> event when a deposit item is added.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deposit-item-changed</td>\n<td>You will receive a <code>deposit-item-changed</code> event when a deposit item is changed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deposit-item-deleted</td>\n<td>You will receive a <code>deposit-item-deleted</code> event when a deposit item is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">payment-added</td>\n<td>You will receive a <code>payment-added</code> event when a payment is added to the folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">payment-posted</td>\n<td>You will receive a <code>payment-posted</code> event when a payment is posted to the folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">payment-failed</td>\n<td>You will receive a <code>payment-failed</code> event when a payment fails.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">payment-canceled</td>\n<td>You will receive a <code>payment-canceled</code> event when a payment is canceled.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">refund-added</td>\n<td>You will receive a <code>refund-added</code> event when a payment refund is added to the folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">refund-posted</td>\n<td>You will receive a <code>refund-posted</code> event when a payment refund is posted to the folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">refund-failed</td>\n<td>You will receive a <code>refund-failed</code> event when a payment refund fails.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">charge-moved-from-folio</td>\n<td>You will receive a <code>charge-moved-from-folio</code> event when a charge is moved from one folio to another.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">transitory-charge-moved-from-folio</td>\n<td>You will receive a <code>transitory-charge-moved-from-folio</code> event when a transitory charge is moved from one folio to another.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">payment-moved-from-folio</td>\n<td>You will receive a <code>payment-moved-from-folio</code> event when a payment is moved from one folio to another.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">refund-moved-from-folio</td>\n<td>You will receive a <code>refund-moved-from-folio</code> event when a refund is moved from one folio to another.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">charge-moved-to-folio</td>\n<td>You will receive a <code>charge-moved-to-folio</code> event when a charge is successfully moved to the other folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">transitory-charge-moved-to-folio</td>\n<td>You will receive a <code>transitory-charge-moved-to-folio</code> event when a transitory charge is successfully moved to the other folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">payment-moved-to-folio</td>\n<td>You will receive a <code>payment-moved-to-folio</code> event when a payment is successfully moved to the other folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">refund-moved-to-folio</td>\n<td>You will receive a <code>refund-moved-to-folio</code> event when a refund is successfully moved to the other folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">allowance-moved-to-folio</td>\n<td>You will receive a <code>allowance-moved-to-folio</code> event when a allowance is moved to the other folio.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">allowance-moved-from-folio</td>\n<td>You will receive a <code>allowance-moved-from-folio</code> event when a charge is moved from one folio to another.</td>\n</tr>\n<tr>\n<td align=\"left\">invoice</td>\n<td align=\"left\">created</td>\n<td>You will receive a <code>created</code> event when a invoice is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">canceled</td>\n<td>You will receive a <code>canceled</code> event when a invoice is canceled.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">paid</td>\n<td>You will receive a <code>paid</code> event when a invoice is paid.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">written-off</td>\n<td>You will receive a <code>written-off</code> event when a invoice is written off.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">signed</td>\n<td>You will receive a <code>signed</code> event when a <strong>fiscal</strong> invoice is signed by authorities.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">rendered</td>\n<td>You will receive a <code>rendered</code> event when a <strong>fiscal</strong> invoice is rendered.</td>\n</tr>\n<tr>\n<td align=\"left\">rateplan</td>\n<td align=\"left\">created</td>\n<td>You will receive a <code>created</code> event when a rate plan is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">changed</td>\n<td>You will receive a <code>changed</code> event when a rate plan is changed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted</td>\n<td>You will receive a <code>deleted</code> event when a rate plan is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\">nightaudit</td>\n<td align=\"left\">started</td>\n<td>You will receive a <code>started</code> event when night audit starts.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">succeeded</td>\n<td>You will receive a <code>succeeded</code> event when night audit has succeeded.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">failed</td>\n<td>You will receive a <code>failed</code> event if night audit has failed.</td>\n</tr>\n<tr>\n<td align=\"left\">maintenance</td>\n<td align=\"left\">created</td>\n<td>You will receive a <code>created</code> event when a maintenance slot is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">changed</td>\n<td>You will receive a <code>changed</code> event when a maintenance slot is changed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted</td>\n<td>You will receive a <code>deleted</code> event when a maintenance slot is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\">citytax</td>\n<td align=\"left\">created</td>\n<td>You will receive a <code>created</code> event when a city tax is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">changed</td>\n<td>You will receive a <code>changed</code> event when a city tax is changed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted</td>\n<td>You will receive a <code>deleted</code> event when a city tax is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\">service</td>\n<td align=\"left\">created</td>\n<td>You will receive a <code>created</code> event when a service is created.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">changed</td>\n<td>You will receive a <code>changed</code> event when a service is changed.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">deleted</td>\n<td>You will receive a <code>deleted</code> event when a service is deleted.</td>\n</tr>\n<tr>\n<td align=\"left\">paymenttransaction</td>\n<td align=\"left\">authorized</td>\n<td>You will receive an <code>authorized</code> event when a new <code>Authorized</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">refused</td>\n<td>You will receive a <code>refused</code> event when a new <code>Refused</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">authorization-adjusted</td>\n<td>You will receive an <code>authorization-adjusted</code> event when a new <code>AuthorizationAdjusted</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">cancelled</td>\n<td>You will receive a <code>cancelled</code> event when a new <code>Cancelled</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">cancellation-denied</td>\n<td>You will receive a <code>cancellation-denied</code> event when a new <code>CancellationDenied</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">sent-for-settle</td>\n<td>You will receive a <code>sent-for-settle</code> event when a new <code>SentForSettle</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">capture-denied</td>\n<td>You will receive a <code>capture-denied</code> event when a new <code>CaptureDenied</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">sent-for-settle-reversed</td>\n<td>You will receive a <code>sent-for-settle-reversed</code> event when a new <code>SentForSettleReversed</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">sent-for-refund</td>\n<td>You will receive a <code>sent-for-refund</code> event when a new <code>SentForRefund</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">refund-denied</td>\n<td>You will receive a <code>refund-denied</code> event when a new <code>RefundDenied</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">refunded**</td>\n<td>You will receive a <code>refunded</code> event when a new <code>Refunded</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">sent-for-refund-reversed</td>\n<td>You will receive a <code>sent-for-refund-reversed</code> event when a new <code>SentForRefundReversed</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">refund-reversed</td>\n<td>You will receive a <code>refund-reversed</code> event when a new <code>RefundReversed</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">settled**</td>\n<td>You will receive a <code>settled</code> event when a new <code>Settled</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">dispute-opened**</td>\n<td>You will receive a <code>dispute-opened</code> event when a new <code>DisputeOpened</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">dispute-information-requested**</td>\n<td>You will receive a <code>dispute-information-requested</code> event when a new <code>DisputeInformationRequested</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">dispute-information-supplied**</td>\n<td>You will receive a <code>dispute-information-supplied</code> event when a new <code>DisputeInformationSupplied</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">fraud-detected**</td>\n<td>You will receive a <code>fraud-detected</code> event when a new <code>FraudDetected</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">dispute-lost**</td>\n<td>You will receive a <code>dispute-lost</code> event when a new <code>DisputeLost</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">dispute-won**</td>\n<td>You will receive a <code>dispute-won</code> event when a new <code>DisputeWon</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">settled-on-merchant-account**</td>\n<td>You will receive a <code>settled-on-merchant-account</code> event when a new <code>SettledOnMerchantAccount</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">refunded-from-merchant-account**</td>\n<td>You will receive a <code>refunded-from-merchant-account</code> event when a new <code>RefundedFromMerchantAccount</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">charged-back**</td>\n<td>You will receive a <code>charged-back</code> event when a new <code>ChargedBack</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">charged-back-from-merchant-account**</td>\n<td>You will receive a <code>charged-back-from-merchant-account</code> event when a new <code>ChargedBackFromMerchantAccount</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">chargeback-reversed**</td>\n<td>You will receive a <code>chargeback-reversed</code> event when a new <code>ChargebackReversed</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">chargeback-reversed-on-merchant-account**</td>\n<td>You will receive a <code>chargeback-reversed-on-merchant-account</code> event when a new <code>ChargebackReversedOnMerchantAccount</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">second-time-charged-back**</td>\n<td>You will receive a <code>second-time-charged-back</code> event when a new <code>SecondTimeChargedBack</code> event has been added to the payment transaction.</td>\n</tr>\n<tr>\n<td align=\"left\"></td>\n<td align=\"left\">second-time-charged-back-from-merchant-account**</td>\n<td>You will receive a <code>second-time-charged-back-from-merchant-account</code> event when a new <code>SecondTimeChargedBackFromMerchantAccount</code> event has been added to the payment transaction.</td>\n</tr>\n</tbody>\n</table>\n<p>* When subscribing to these events make sure to leave <code>propertyIds</code> empty. Since these are account-level events, they will not be delivered for subscriptions with property filter.</p>\n<p>** Only available for Apaleo Pay accounts.</p>\n<p>The list of types within one topic can grow in the future, make sure your implementation is ready\nfor unexpected event types appearing in the payloads.</p>\n</section>\n</main>",
      "markdown_content": "# Configure webhooks  \n  \nWebhooks can be configured for as many topics and properties as you would like. All you need to do is create a subscription by making a `POST` request to the **Webhook API**.\n    \n    \n    POST https://webhook.apaleo.com/v1/subscriptions\n    \n\nThese subscriptions tell apaleo which events your particular app would like to receive.\n\n> You must subscribe to events in your app rather than subscribe to them through **Webhook API** Swagger reference.\n\n### Important considerations\n\nWe recommend that your webhook URLs be protected using basic authentication or HTTPS.\n\nIt also needs to be reachable from apaleo.com. If you’re not sure, check with your security or ops team, if any firewalls prevent incoming traffic on (usually) port 443, and ask to whitelist us.\n\nOur outbound IP addresses are:\n    \n    \n    34.240.36.71\n    52.212.76.75\n    63.33.249.221\n    \n\n### Events\n\nWhen subscribing, you can choose events from which topic you want to receive. A topic is grouping events of several types. The available events are:\n\nTOPIC | TYPE | Description  \n---|---|---  \naccount | set-to-live* | You will receive a `set-to-live` event when an account is live.  \n| suspended* | You will receive a `suspended` event when an account is suspended.  \nproperty | created* | You will receive a `created` event when a new property is created.  \n| changed | You will receive a `changed` event when property settings are changed like description, address, and so on.  \n| set-to-live | You will receive a `set-to-live` event when a property is live.  \n| archived | You will receive a `archived` event when a property is archived.  \n| deleted | You will receive a `deleted` event when a property is deleted.  \nreservation | created | You will receive a `created` event when a new reservation is created.  \n| amended | You will receive a `amended` event when the stay-related data is amended such as services, rate plan, stay dates etc.  \n| changed | You will receive a `changed` event when anything other than stay details is changed in a reservation such as name, comments, additional guests.  \n| checked-in | You will receive a `checked-in` event when a reservation is checked-in.  \n| checked-out | You will receive a `checked-out` event when a reservation is checked-out.  \n| check-in-reverted | You will receive a `check-in-reverted` event when a reservation is moved from the InHouse status back to confirmed.  \n| set-to-no-show | You will receive a `set-to-no-show` event when a reservation is marked as no-show.  \n| unit-assigned | You will receive a `unit-assigned` event when a unit is assigned to a reservation.  \n| unit-unassigned | You will receive a `unit-unassigned` event when a unit is unassigned from a reservation.  \n| payment-account-set | You will receive a `payment-account-set` event when a payment account details are added or updated for a reservation.  \n| payment-account-removed | You will receive a `payment-account-removed` event when a payment account is removed from a reservation.  \n| canceled | You will receive a `canceled` event when a reservation is canceled.  \n| deleted | You will receive a `deleted` event when a reservation is deleted.  \nbooking | created* | You will receive a `created` event when a booking is created.  \n| changed* | You will receive a `changed` event when a booking is changed.  \n| deleted* | You will receive a `deleted` event when a booking is deleted.  \ncompany | created | You will receive a `created` event when a company is created.  \n| changed | You will receive a `changed` event when a company is changed.  \n| deleted | You will receive a `deleted` event when a company is deleted.  \ngroup | created | You will receive a `created` event when a group is created.  \n| changed | You will receive a `changed` event when a group is changed.  \n| deleted | You will receive a `deleted` event when a group is deleted.  \nblock | created | You will receive a `created` event when a block is created.  \n| changed | You will receive a `changed` event when a block is changed.  \n| deleted | You will receive a `deleted` event when a block is deleted.  \n| confirmed | You will receive a `confirmed` event when a block is confirmed.  \n| released | You will receive a `released` event when a block is released.  \n| washed | You will receive a `washed` event when a block is washed.  \n| cancelled | You will receive a `cancelled` event when a block is cancelled.  \nunit | created | You will receive a `created` event when a unit is created.  \n| changed | You will receive a `changed` event when a unit is changed.  \n| deleted | You will receive a `deleted` event when a unit is deleted.  \nunitgroup | created | You will receive a `created` event when a unit group is created.  \n| changed | You will receive a `changed` event when a unit group is changed.  \n| deleted | You will receive a `deleted` event when a unit group is deleted.  \nunitattributedefinition | created | You will receive a `created` event when a unit attribute definition is created.  \n| changed | You will receive a `changed` event when a unit attribute definition is changed.  \n| deleted | You will receive a `deleted` event when a unit attribute definition is deleted.  \nfolio | created | You will receive a `created` event when a folio is created.  \n| closed | You will receive a `closed` event when a folio is closed.  \n| balance-changed | You will receive a `balance-changed` event when there are changes in the folio balance.  \n| reopened | You will receive a `reopened` event when a folio is reopened.  \n| deleted | You will receive a `deleted` event when a folio is deleted.  \n| charges-changed | You will receive a `charges-changed` event when a charge is added to the folio.  \n| charge-posted | You will receive a `charge-posted` event when a charge is posted to the folio.  \n| debitor-changed | You will receive a `debitor-changed` event when a debitor is changed in the folio.  \n| transitory-charge-posted | You will receive a `transitory-charge-posted` event when a transitory charge is posted to the folio.  \n| allowance-posted | You will receive a `allowance-posted` event when an allowance (equal or less) for a charge is posted to the folio.  \n| deposit-item-added | You will receive a `deposit-item-added` event when a deposit item is added.  \n| deposit-item-changed | You will receive a `deposit-item-changed` event when a deposit item is changed.  \n| deposit-item-deleted | You will receive a `deposit-item-deleted` event when a deposit item is deleted.  \n| payment-added | You will receive a `payment-added` event when a payment is added to the folio.  \n| payment-posted | You will receive a `payment-posted` event when a payment is posted to the folio.  \n| payment-failed | You will receive a `payment-failed` event when a payment fails.  \n| payment-canceled | You will receive a `payment-canceled` event when a payment is canceled.  \n| refund-added | You will receive a `refund-added` event when a payment refund is added to the folio.  \n| refund-posted | You will receive a `refund-posted` event when a payment refund is posted to the folio.  \n| refund-failed | You will receive a `refund-failed` event when a payment refund fails.  \n| charge-moved-from-folio | You will receive a `charge-moved-from-folio` event when a charge is moved from one folio to another.  \n| transitory-charge-moved-from-folio | You will receive a `transitory-charge-moved-from-folio` event when a transitory charge is moved from one folio to another.  \n| payment-moved-from-folio | You will receive a `payment-moved-from-folio` event when a payment is moved from one folio to another.  \n| refund-moved-from-folio | You will receive a `refund-moved-from-folio` event when a refund is moved from one folio to another.  \n| charge-moved-to-folio | You will receive a `charge-moved-to-folio` event when a charge is successfully moved to the other folio.  \n| transitory-charge-moved-to-folio | You will receive a `transitory-charge-moved-to-folio` event when a transitory charge is successfully moved to the other folio.  \n| payment-moved-to-folio | You will receive a `payment-moved-to-folio` event when a payment is successfully moved to the other folio.  \n| refund-moved-to-folio | You will receive a `refund-moved-to-folio` event when a refund is successfully moved to the other folio.  \n| allowance-moved-to-folio | You will receive a `allowance-moved-to-folio` event when a allowance is moved to the other folio.  \n| allowance-moved-from-folio | You will receive a `allowance-moved-from-folio` event when a charge is moved from one folio to another.  \ninvoice | created | You will receive a `created` event when a invoice is created.  \n| canceled | You will receive a `canceled` event when a invoice is canceled.  \n| paid | You will receive a `paid` event when a invoice is paid.  \n| written-off | You will receive a `written-off` event when a invoice is written off.  \n| signed | You will receive a `signed` event when a **fiscal** invoice is signed by authorities.  \n| rendered | You will receive a `rendered` event when a **fiscal** invoice is rendered.  \nrateplan | created | You will receive a `created` event when a rate plan is created.  \n| changed | You will receive a `changed` event when a rate plan is changed.  \n| deleted | You will receive a `deleted` event when a rate plan is deleted.  \nnightaudit | started | You will receive a `started` event when night audit starts.  \n| succeeded | You will receive a `succeeded` event when night audit has succeeded.  \n| failed | You will receive a `failed` event if night audit has failed.  \nmaintenance | created | You will receive a `created` event when a maintenance slot is created.  \n| changed | You will receive a `changed` event when a maintenance slot is changed.  \n| deleted | You will receive a `deleted` event when a maintenance slot is deleted.  \ncitytax | created | You will receive a `created` event when a city tax is created.  \n| changed | You will receive a `changed` event when a city tax is changed.  \n| deleted | You will receive a `deleted` event when a city tax is deleted.  \nservice | created | You will receive a `created` event when a service is created.  \n| changed | You will receive a `changed` event when a service is changed.  \n| deleted | You will receive a `deleted` event when a service is deleted.  \npaymenttransaction | authorized | You will receive an `authorized` event when a new `Authorized` event has been added to the payment transaction.  \n| refused | You will receive a `refused` event when a new `Refused` event has been added to the payment transaction.  \n| authorization-adjusted | You will receive an `authorization-adjusted` event when a new `AuthorizationAdjusted` event has been added to the payment transaction.  \n| cancelled | You will receive a `cancelled` event when a new `Cancelled` event has been added to the payment transaction.  \n| cancellation-denied | You will receive a `cancellation-denied` event when a new `CancellationDenied` event has been added to the payment transaction.  \n| sent-for-settle | You will receive a `sent-for-settle` event when a new `SentForSettle` event has been added to the payment transaction.  \n| capture-denied | You will receive a `capture-denied` event when a new `CaptureDenied` event has been added to the payment transaction.  \n| sent-for-settle-reversed | You will receive a `sent-for-settle-reversed` event when a new `SentForSettleReversed` event has been added to the payment transaction.  \n| sent-for-refund | You will receive a `sent-for-refund` event when a new `SentForRefund` event has been added to the payment transaction.  \n| refund-denied | You will receive a `refund-denied` event when a new `RefundDenied` event has been added to the payment transaction.  \n| refunded** | You will receive a `refunded` event when a new `Refunded` event has been added to the payment transaction.  \n| sent-for-refund-reversed | You will receive a `sent-for-refund-reversed` event when a new `SentForRefundReversed` event has been added to the payment transaction.  \n| refund-reversed | You will receive a `refund-reversed` event when a new `RefundReversed` event has been added to the payment transaction.  \n| settled** | You will receive a `settled` event when a new `Settled` event has been added to the payment transaction.  \n| dispute-opened** | You will receive a `dispute-opened` event when a new `DisputeOpened` event has been added to the payment transaction.  \n| dispute-information-requested** | You will receive a `dispute-information-requested` event when a new `DisputeInformationRequested` event has been added to the payment transaction.  \n| dispute-information-supplied** | You will receive a `dispute-information-supplied` event when a new `DisputeInformationSupplied` event has been added to the payment transaction.  \n| fraud-detected** | You will receive a `fraud-detected` event when a new `FraudDetected` event has been added to the payment transaction.  \n| dispute-lost** | You will receive a `dispute-lost` event when a new `DisputeLost` event has been added to the payment transaction.  \n| dispute-won** | You will receive a `dispute-won` event when a new `DisputeWon` event has been added to the payment transaction.  \n| settled-on-merchant-account** | You will receive a `settled-on-merchant-account` event when a new `SettledOnMerchantAccount` event has been added to the payment transaction.  \n| refunded-from-merchant-account** | You will receive a `refunded-from-merchant-account` event when a new `RefundedFromMerchantAccount` event has been added to the payment transaction.  \n| charged-back** | You will receive a `charged-back` event when a new `ChargedBack` event has been added to the payment transaction.  \n| charged-back-from-merchant-account** | You will receive a `charged-back-from-merchant-account` event when a new `ChargedBackFromMerchantAccount` event has been added to the payment transaction.  \n| chargeback-reversed** | You will receive a `chargeback-reversed` event when a new `ChargebackReversed` event has been added to the payment transaction.  \n| chargeback-reversed-on-merchant-account** | You will receive a `chargeback-reversed-on-merchant-account` event when a new `ChargebackReversedOnMerchantAccount` event has been added to the payment transaction.  \n| second-time-charged-back** | You will receive a `second-time-charged-back` event when a new `SecondTimeChargedBack` event has been added to the payment transaction.  \n| second-time-charged-back-from-merchant-account** | You will receive a `second-time-charged-back-from-merchant-account` event when a new `SecondTimeChargedBackFromMerchantAccount` event has been added to the payment transaction.  \n  \n* When subscribing to these events make sure to leave `propertyIds` empty. Since these are account-level events, they will not be delivered for subscriptions with property filter.\n\n** Only available for Apaleo Pay accounts.\n\nThe list of types within one topic can grow in the future, make sure your implementation is ready for unexpected event types appearing in the payloads.\n",
      "timestamp": "2025-06-23T15:18:15.759334"
    },
    {
      "url": "https://apaleo.dev/guides/webhook/create-subscription.html",
      "title": "Create a new subscription | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Create a new subscription</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  2 minutes\n                                \n                            </p> -->\n<p>Webhook API endpoints allow you to create subscriptions programmatically. To create new\nsubscriptions, you must make a <code>POST</code> request to the <strong>Webhook API</strong>.</p>\n<pre><code>POST https://webhook.apaleo.com/v1/subscriptions\n</code></pre>\n<p>With a request body like:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"endpointUrl\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://example.com\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"events\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"reservation/*\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"folio/created\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"folio/charges-changed\"</span><span class=\"w\">\n  </span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"propertyIds\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"MUC\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"BER\"</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>In the payload above, you can see how your subscription can be if you want to subscribe to all reservation events and only certain folio events.</p>\n<blockquote>\n<p>⚠️ As you may have noticed you can subscribe to all the events of one of the topics or to specific ones.\nTo subscribe to all events of the topic you should follow the pattern: <code>\"{topic}/*\"</code></p>\n</blockquote>\n<p>If you create the subscription without specifying a list of properties, then the subscription will\nautomatically work for all current and future properties of the account.</p>\n<p>A subscription object has the following fields:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Field</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">endpointUrl</td>\n<td align=\"left\">The URL where the webhook payload is sent.</td>\n</tr>\n<tr>\n<td align=\"left\">events</td>\n<td align=\"left\">This describes what types of events this subscription is listening. Specify one or more events.</td>\n</tr>\n<tr>\n<td align=\"left\">propertyIds</td>\n<td align=\"left\">The property id (s) for which the events are subscribed. If you create the subscription without specifying a list of properties, then the subscription will automatically work for all current and future properties of the account.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"filtering-mechanism-for-subscriptions\">Filtering mechanism for subscriptions</h3>\n<p>Two useful filtering mechanisms allow you to tailor your subscriptions to your needs. As mentioned\nbefore you can create subscriptions for a set of events, what you can also do is to create the\nsubscription for a group of properties or none at all.</p>\n<p>As a requirement, your subscriptions <strong>must</strong> be for at least one event. However, when it comes to\nproperties, you can not provide any, and your subscription will work for all of them out of the box,\nthink of it as your wildcard.</p>\n<p>Here is an example of a payload to create a subscription for <code>reservation</code> and <code>folio</code> topics for a\nset of properties:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"endpointUrl\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://example.com\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"events\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"reservation/*\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"folio/*\"</span><span class=\"w\">\n  </span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"propertyIds\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"MUC\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"BER\"</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>Using the same payload above, however, without the properties filter:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"endpointUrl\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://example.com\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"events\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"reservation/*\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"folio/*\"</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n</section>\n</main>",
      "markdown_content": "# Create a new subscription\n\nWebhook API endpoints allow you to create subscriptions programmatically. To create new subscriptions, you must make a `POST` request to the **Webhook API**.\n    \n    \n    POST https://webhook.apaleo.com/v1/subscriptions\n    \n\nWith a request body like:\n    \n    \n    {\n      \"endpointUrl\": \"https://example.com\",\n      \"events\": [\n        \"reservation/*\",\n        \"folio/created\",\n        \"folio/charges-changed\"\n      ],\n      \"propertyIds\": [\n        \"MUC\",\n        \"BER\"\n      ]\n    }\n    \n\nIn the payload above, you can see how your subscription can be if you want to subscribe to all reservation events and only certain folio events.\n\n> ⚠️ As you may have noticed you can subscribe to all the events of one of the topics or to specific ones. To subscribe to all events of the topic you should follow the pattern: `\"{topic}/*\"`\n\nIf you create the subscription without specifying a list of properties, then the subscription will automatically work for all current and future properties of the account.\n\nA subscription object has the following fields:\n\nField | Description  \n---|---  \nendpointUrl | The URL where the webhook payload is sent.  \nevents | This describes what types of events this subscription is listening. Specify one or more events.  \npropertyIds | The property id (s) for which the events are subscribed. If you create the subscription without specifying a list of properties, then the subscription will automatically work for all current and future properties of the account.  \n  \n### Filtering mechanism for subscriptions\n\nTwo useful filtering mechanisms allow you to tailor your subscriptions to your needs. As mentioned before you can create subscriptions for a set of events, what you can also do is to create the subscription for a group of properties or none at all.\n\nAs a requirement, your subscriptions **must** be for at least one event. However, when it comes to properties, you can not provide any, and your subscription will work for all of them out of the box, think of it as your wildcard.\n\nHere is an example of a payload to create a subscription for `reservation` and `folio` topics for a set of properties:\n    \n    \n    {\n      \"endpointUrl\": \"https://example.com\",\n      \"events\": [\n        \"reservation/*\",\n        \"folio/*\"\n      ],\n      \"propertyIds\": [\n        \"MUC\",\n        \"BER\"\n      ]\n    }\n    \n\nUsing the same payload above, however, without the properties filter:\n    \n    \n    {\n      \"endpointUrl\": \"https://example.com\",\n      \"events\": [\n        \"reservation/*\",\n        \"folio/*\"\n      ]\n    }\n    \n",
      "timestamp": "2025-06-23T15:18:16.468507"
    },
    {
      "url": "https://apaleo.dev/guides/webhook/get-subscription.html",
      "title": "Get a subscription | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Get a subscription</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>To retrieve the list of subscriptions:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">GET</span><span class=\"w\"> </span><span class=\"err\">https://webhook.apaleo.com/v</span><span class=\"mi\">1</span><span class=\"err\">/subscriptions/</span><span class=\"p\">{</span><span class=\"err\">id</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>The response will be an array of objects representing your subscriptions. Each object will include\ninformation on the subscription like the ID, create date, and property IDs. Here’s what an example\nresponse would look like:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"dd193d24-136e-4f87-830a-ea790e58d87d\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"events\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"reservation/*\"</span><span class=\"p\">,</span><span class=\"w\"> \n    </span><span class=\"s2\">\"folio/created\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"folio/charges-changed\"</span><span class=\"w\">\n  </span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"endpointUrl\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://example.com\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"created\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"2020-05-20T11:37:16.712071Z\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"propertyIds\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"MUC\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"BER\"</span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<hr/>\n</section>\n</main>",
      "markdown_content": "# Get a subscription\n\nTo retrieve the list of subscriptions:\n    \n    \n    GET https://webhook.apaleo.com/v1/subscriptions/{id}\n    \n\nThe response will be an array of objects representing your subscriptions. Each object will include information on the subscription like the ID, create date, and property IDs. Here’s what an example response would look like:\n    \n    \n    {\n      \"id\": \"dd193d24-136e-4f87-830a-ea790e58d87d\",\n      \"events\": [\n        \"reservation/*\", \n        \"folio/created\",\n        \"folio/charges-changed\"\n      ],\n      \"endpointUrl\": \"https://example.com\",\n      \"created\": \"2020-05-20T11:37:16.712071Z\",\n      \"propertyIds\": [\"MUC\", \"BER\"]\n    }\n    \n\n* * *\n",
      "timestamp": "2025-06-23T15:18:17.175182"
    },
    {
      "url": "https://apaleo.dev/guides/webhook/update-subscription.html",
      "title": "Update a subscription | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Update a subscription</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>To update a subscription, you can use the following endpoint:</p>\n<pre><code>PUT https://webhook.apaleo.com/v1/subscriptions/{id}\n</code></pre>\n<p>By default we allow you to update all settings of your subscription, like the URL, the list of event and properties. But keep in mind that you cannot update a subscription to the same configuration that your other subscription already has. We try to prevent duplicates and thereby remove unnecessary load from your server.</p>\n<p>Here is a sample payload:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"endpointUrl\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://www.example.com\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"events\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"reservation/*\"</span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"propertyIds\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"MUC\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"LON\"</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n</section>\n</main>",
      "markdown_content": "# Update a subscription\n\nTo update a subscription, you can use the following endpoint:\n    \n    \n    PUT https://webhook.apaleo.com/v1/subscriptions/{id}\n    \n\nBy default we allow you to update all settings of your subscription, like the URL, the list of event and properties. But keep in mind that you cannot update a subscription to the same configuration that your other subscription already has. We try to prevent duplicates and thereby remove unnecessary load from your server.\n\nHere is a sample payload:\n    \n    \n    {\n      \"endpointUrl\": \"https://www.example.com\",\n      \"events\": [\"reservation/*\"],\n      \"propertyIds\": [\n        \"MUC\",\n        \"LON\"\n      ]\n    }\n    \n",
      "timestamp": "2025-06-23T15:18:17.885971"
    },
    {
      "url": "https://apaleo.dev/guides/webhook/delete-subscription.html",
      "title": "Delete a subscription | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Delete a subscription</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>To delete a subscription, you can call the following endpoint:</p>\n<pre><code>DELETE https://webhook.apaleo.com/v1/subscriptions/{id}\n</code></pre>\n<p>If a subscription with this <code>id</code> is found, then the service returns a <code>204</code> status code; on the\nother hand, if it is not found, it returns a <code>404</code> status code.</p>\n</section>\n</main>",
      "markdown_content": "# Delete a subscription\n\nTo delete a subscription, you can call the following endpoint:\n    \n    \n    DELETE https://webhook.apaleo.com/v1/subscriptions/{id}\n    \n\nIf a subscription with this `id` is found, then the service returns a `204` status code; on the other hand, if it is not found, it returns a `404` status code.\n",
      "timestamp": "2025-06-23T15:18:18.609150"
    },
    {
      "url": "https://apaleo.dev/guides/webhook/webhooks-payload.html",
      "title": "Webhooks payload | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Webhooks payload</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  2 minutes\n                                \n                            </p> -->\n<h3 id=\"health-check\">Health check</h3>\n<p>When you subscribe, apaleo will send a health-check event. If that fails, the subscription would not be created.</p>\n<blockquote>\n<p>A webhook is considered as successful when the <code>endpointUrl</code> responds with 2xx code.</p>\n</blockquote>\n<p>Here is a sample healthcheck payload:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"56eca994-f272-47b3-a56b-1327e9125ff3\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"topic\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"system\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"healthcheck\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"accountId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"SDXE\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"propertyIds\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"MUC\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"BER\"</span><span class=\"w\">\n  </span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"timestamp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1655824163606</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>Once you have created your subscription, all you have to do is process the incoming events from apaleo.</p>\n<p>The webhook service will send all types of events as a <code>POST</code> request to the <code>endpointUrl</code> that you\nhave set up for your subscription.</p>\n<p>Events that we send to your webhooks all have the same structure as follows:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"topic\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Reservation\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"created\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ec5a1fe4-331c-450a-915c-5caa231cc825\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"accountId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"HFTF\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"propertyId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"HFTF-AADS\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"timestamp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1692268510605</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"clientId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ABCD-SP-APPDOINGSOMETHING\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"subjectId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"6f1c719d-1f45-4331-a30c-c6da0f642b60\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"data\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"entityId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"XPGMSXGF-1\"</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>The payload has the following fields and headers:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Field</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">topic</td>\n<td align=\"left\">The webhook topic</td>\n</tr>\n<tr>\n<td align=\"left\">type</td>\n<td align=\"left\">The operation type (created, changed, and so on)</td>\n</tr>\n<tr>\n<td align=\"left\">id</td>\n<td align=\"left\">The webhook internal id</td>\n</tr>\n<tr>\n<td align=\"left\">accountId</td>\n<td align=\"left\">The account id to where the notification is related to</td>\n</tr>\n<tr>\n<td align=\"left\">propertyId</td>\n<td align=\"left\">The property id to where the notification is related to</td>\n</tr>\n<tr>\n<td align=\"left\">entityId</td>\n<td align=\"left\">The object for which the event is created</td>\n</tr>\n<tr>\n<td align=\"left\">clientId</td>\n<td align=\"left\">The client id of the app which triggered the process related to the notification</td>\n</tr>\n<tr>\n<td align=\"left\">subjectId</td>\n<td align=\"left\">The optional subject id of the triggering request related to the notification</td>\n</tr>\n<tr>\n<td align=\"left\">timestamp</td>\n<td align=\"left\">The time of the event</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Header</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">apaleo-tracking-id</td>\n<td align=\"left\">The tracking Id of the request that initiated the event. It can be useful if you want to track the whole flow from sending the first request to being notified that this request has changed something in the platform.</td>\n</tr>\n</tbody>\n</table>\n<p>Typically, you might want to use this information to query more data. For example, get the\nreservation entity by its ID. The <code>data</code> element is optional and can in the future contain payloads\nwith different schemas. For now, it’s always the <code>entityId</code>.</p>\n</section>\n</main>",
      "markdown_content": "# Webhooks payload\n\n### Health check\n\nWhen you subscribe, apaleo will send a health-check event. If that fails, the subscription would not be created.\n\n> A webhook is considered as successful when the `endpointUrl` responds with 2xx code.\n\nHere is a sample healthcheck payload:\n    \n    \n    {\n      \"id\": \"56eca994-f272-47b3-a56b-1327e9125ff3\",\n      \"topic\": \"system\",\n      \"type\": \"healthcheck\",\n      \"accountId\": \"SDXE\",\n      \"propertyIds\": [\n        \"MUC\",\n        \"BER\"\n      ],\n      \"timestamp\": 1655824163606\n    }\n    \n\nOnce you have created your subscription, all you have to do is process the incoming events from apaleo.\n\nThe webhook service will send all types of events as a `POST` request to the `endpointUrl` that you have set up for your subscription.\n\nEvents that we send to your webhooks all have the same structure as follows:\n    \n    \n    {\n      \"topic\": \"Reservation\",\n      \"type\": \"created\",\n      \"id\": \"ec5a1fe4-331c-450a-915c-5caa231cc825\",\n      \"accountId\": \"HFTF\",\n      \"propertyId\": \"HFTF-AADS\",\n      \"timestamp\": 1692268510605,\n      \"clientId\": \"ABCD-SP-APPDOINGSOMETHING\",\n      \"subjectId\": \"6f1c719d-1f45-4331-a30c-c6da0f642b60\",\n      \"data\": {\n        \"entityId\": \"XPGMSXGF-1\"\n      }\n    }\n    \n\nThe payload has the following fields and headers:\n\nField | Description  \n---|---  \ntopic | The webhook topic  \ntype | The operation type (created, changed, and so on)  \nid | The webhook internal id  \naccountId | The account id to where the notification is related to  \npropertyId | The property id to where the notification is related to  \nentityId | The object for which the event is created  \nclientId | The client id of the app which triggered the process related to the notification  \nsubjectId | The optional subject id of the triggering request related to the notification  \ntimestamp | The time of the event  \nHeader | Description  \n---|---  \napaleo-tracking-id | The tracking Id of the request that initiated the event. It can be useful if you want to track the whole flow from sending the first request to being notified that this request has changed something in the platform.  \n  \nTypically, you might want to use this information to query more data. For example, get the reservation entity by its ID. The `data` element is optional and can in the future contain payloads with different schemas. For now, it’s always the `entityId`.\n",
      "timestamp": "2025-06-23T15:18:19.302262"
    },
    {
      "url": "https://apaleo.dev/guides/webhook/best-practices.html",
      "title": "Best practices for webhooks | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Best practices for webhooks</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  2 minutes\n                                \n                            </p> -->\n<p>Webhooks provide a powerful method to track what is going on in apaleo and to take actions within your app. Review these best practices to ensure your webhooks remain secure and function seamlessly with your integration.</p>\n<hr/>\n<h2 id=\"secure-subscription\">Secure subscription</h2>\n<p>There are a set of measures that you can take to ensure that your subscriptions are secure and\nidentifiable.</p>\n<hr/>\n<h3 id=\"whitelist-ip\">Whitelist IP</h3>\n<p>The first thing is to whitelist the apaleo outbound IP addresses as shown below to make your life\neasier.</p>\n<div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"mf\">34.240</span><span class=\"p\">.</span><span class=\"mf\">36.71</span>\n<span class=\"mf\">52.212</span><span class=\"p\">.</span><span class=\"mf\">76.75</span>\n<span class=\"mf\">63.33</span><span class=\"p\">.</span><span class=\"mf\">249.221</span>\n</code></pre></div></div>\n<hr/>\n<h3 id=\"https\">HTTPS</h3>\n<p>The webhook service will send all types of events as a <code>POST</code> request to the <code>endpointUrl</code> that you\nhave set up for your subscription. The <code>endpointUrl</code> must be working via HTTPS. Your app should also\nideally be hosted on a secure server.</p>\n<hr/>\n<h3 id=\"event-types\">Event types</h3>\n<p>Your subscription should only be configured for the events and properties that you require. Getting\nirrelevant events that you do not need, will put unnecessary strain on your server.</p>\n<hr/>\n<h3 id=\"handle-duplicate-events\">Handle duplicate events</h3>\n<p>Webhooks might occasionally be sent more than once. We advise you to guard against duplicate events\nby making your event processing <a href=\"https://en.wikipedia.org/wiki/Idempotence\">idempotent</a>. One way of\ndoing this is logging the events you’ve processed, and then not process already-logged events.</p>\n<hr/>\n<h3 id=\"unique-token\">Unique token</h3>\n<p>This next one is optional, but highly recommended, appending a unique token to your URL can help you\nauthenticate and certify that you are receiving a valid webhook notification.</p>\n<p>For instance, let’s say that you want to receive notifications on the following endpoint</p>\n<pre><code>https://www.example.com\n</code></pre>\n<p>With your new token, your URL would look like the following:</p>\n<pre><code>https://www.example.com/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5\n</code></pre>\n<p>In the example above the URL has a <a href=\"https://jwt.io/\">JWT</a> token attached to it for identification.\nThis specific approach would allow you to use a single base URL and identify for which client the event is intended based on the token.</p>\n<hr/>\n<h2 id=\"guarantees-and-error-handling\">Guarantees and error handling</h2>\n<p>Under normal circumstances, you will receive the notification latest 60 seconds after the actual\nevent happened in apaleo. Events are not sent in any specific order, and it can happen that you\nreceive, for example, a ‘reservation canceled’ before a ‘reservation created’ event. You can use the\ntimestamp to order events. Each event is delivered at least once. You can deduplicate them using the\nID field.</p>\n<p>The notification service expects your endpoint to respond with a 2xx success code, also for event\ntypes you are not supporting. When something goes wrong, return 4xx or 5xx error codes, just like\nyou always do. If a delivery attempt fails, we will try resending the event every minute. Even if\none of the events is not acknowledged by you with a 2xx, apaleo continues sending the other events.</p>\n</section>\n</main>",
      "markdown_content": "# Best practices for webhooks\n\nWebhooks provide a powerful method to track what is going on in apaleo and to take actions within your app. Review these best practices to ensure your webhooks remain secure and function seamlessly with your integration.\n\n* * *\n\n## Secure subscription\n\nThere are a set of measures that you can take to ensure that your subscriptions are secure and identifiable.\n\n* * *\n\n### Whitelist IP\n\nThe first thing is to whitelist the apaleo outbound IP addresses as shown below to make your life easier.\n    \n    \n    34.240.36.71\n    52.212.76.75\n    63.33.249.221\n    \n\n* * *\n\n### HTTPS\n\nThe webhook service will send all types of events as a `POST` request to the `endpointUrl` that you have set up for your subscription. The `endpointUrl` must be working via HTTPS. Your app should also ideally be hosted on a secure server.\n\n* * *\n\n### Event types\n\nYour subscription should only be configured for the events and properties that you require. Getting irrelevant events that you do not need, will put unnecessary strain on your server.\n\n* * *\n\n### Handle duplicate events\n\nWebhooks might occasionally be sent more than once. We advise you to guard against duplicate events by making your event processing [idempotent](https://en.wikipedia.org/wiki/Idempotence). One way of doing this is logging the events you’ve processed, and then not process already-logged events.\n\n* * *\n\n### Unique token\n\nThis next one is optional, but highly recommended, appending a unique token to your URL can help you authenticate and certify that you are receiving a valid webhook notification.\n\nFor instance, let’s say that you want to receive notifications on the following endpoint\n    \n    \n    https://www.example.com\n    \n\nWith your new token, your URL would look like the following:\n    \n    \n    https://www.example.com/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5\n    \n\nIn the example above the URL has a [JWT](https://jwt.io/) token attached to it for identification. This specific approach would allow you to use a single base URL and identify for which client the event is intended based on the token.\n\n* * *\n\n## Guarantees and error handling\n\nUnder normal circumstances, you will receive the notification latest 60 seconds after the actual event happened in apaleo. Events are not sent in any specific order, and it can happen that you receive, for example, a ‘reservation canceled’ before a ‘reservation created’ event. You can use the timestamp to order events. Each event is delivered at least once. You can deduplicate them using the ID field.\n\nThe notification service expects your endpoint to respond with a 2xx success code, also for event types you are not supporting. When something goes wrong, return 4xx or 5xx error codes, just like you always do. If a delivery attempt fails, we will try resending the event every minute. Even if one of the events is not acknowledged by you with a 2xx, apaleo continues sending the other events.\n",
      "timestamp": "2025-06-23T15:18:19.999255"
    },
    {
      "url": "https://apaleo.dev/guides/apaleo-one/overview.html",
      "title": "Overview | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Overview</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  4 minutes\n                                \n                            </p> -->\n<p>This topic explains how you can include your views into the apaleo user interface. The addition of\nviews allows the users to see information or even trigger actions in your product. Let them generate\naccess keys, send emails, see the guest’s loyalty status, display rate recommendations, or videos of\nlittle puppy dogs - anything. It works best when you already have an API-integration in place, which\nallows you to look up additional data for the context you are in (such as the guest’s name).</p>\n<hr/>\n<h2 id=\"the-basics\">The basics</h2>\n<p>In the apaleo UI, there are well-defined places, targets, where you can put your content. Each of\nthem has a specific size or other properties.</p>\n<p>Each target also forwards specific data to your application. The information is passed as query\nparameters appended to the URL to your integration. You have the possibility of extracting these\nquery parameters in your application.</p>\n<div class=\"code-example\" markdown=\"1\">\nHere is an example of an application with the URL https://apaleo.com/home which has the DashboardPropertyContext as the target, where the values `ACCOUNT` and `PROPERTY` for the accountCode and propertyId are forwarded.\n</div>\n<pre><code>https://apaleo.com/home?accountCode=ACCOUNT&amp;propertyId=PROPERTY\n</code></pre>\n<p>Technically, those placeholders are iframes. This has the benefit that you can use whatever\ntechnology you want to create this page. Server-side generation of pages or client-side rendering?\nUp to you. “Wait,” we hear you say, “you said iframe? Is that secure?” It sure is! Modern browsers\nuse sandboxed environments for iframes, which means that your integration can co-exist with apaleo’s\nUI, and we won’t be able to hurt each other. Additionally, you must use HTTPS URLs for the iframe\nsource. The browser enforces this because iframes are active mixed content and apaleo UI is only\nserved via HTTPS. You can read more about it on\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content/How_to_fix_website_with_mixed_content\">MDN</a>.</p>\n<blockquote>\n<p>You have to check <code>accountCode</code> and <code>subjectId</code> with every request. The <code>accountCode</code> and\n<code>subjectId</code> values must match the currently logged in user on your side. If the values do not match,\nit means that the user has logged out from apaleo, and a different user has logged in. In that case,\nre-authenticate the user on your side.</p>\n</blockquote>\n<p>The following places are available as targets.</p>\n<hr/>\n<h2 id=\"dashboardaccountcontext\">DashboardAccountContext</h2>\n<h3 id=\"properties\">Properties</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">NAME</th>\n<th> </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">Location</td>\n<td><img src=\"/guides/apaleo-one/DashboardAccountContext.png\"/></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">Size</td>\n<td>min. 340 x 350</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"forwarded-data\">Forwarded data</h3>\n<pre><code>accountCode, subjectId, lang\n</code></pre>\n<br/>\n<hr/>\n<h2 id=\"dashboardpropertycontext\">DashboardPropertyContext</h2>\n<h3 id=\"properties-1\">Properties</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">NAME</th>\n<th> </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">Location</td>\n<td><img src=\"/guides/apaleo-one/DashboardPropertyContext.png\"/></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">Size</td>\n<td>min. 340 x 350</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"forwarded-data-1\">Forwarded data</h3>\n<pre><code>accountCode, subjectId, propertyId, lang\n</code></pre>\n<br/>\n<hr/>\n<h2 id=\"reservationdetailstab\">ReservationDetailsTab</h2>\n<h3 id=\"properties-2\">Properties</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">NAME</th>\n<th> </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">Location</td>\n<td><img \"=\"\" src=\"/guides/apaleo-one/ReservationDetailsTab.png\"/></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">Size</td>\n<td>responsive (tab)</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">iFrame Resizer</td>\n<td><a href=\"https://apaleo.dev/guides/apaleo-one/iframe-resizer.html\">supported</a></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"forwarded-data-2\">Forwarded data</h3>\n<pre><code>accountCode, subjectId, reservationId, propertyId, lang\n</code></pre>\n<br/>\n<hr/>\n<h2 id=\"bookingdetailstab\">BookingDetailsTab</h2>\n<h3 id=\"properties-3\">Properties</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">NAME</th>\n<th> </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">Location</td>\n<td><img \"=\"\" src=\"/guides/apaleo-one/bookingdetailstab.png\"/></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">Size</td>\n<td>responsive (tab)</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">iFrame Resizer</td>\n<td><a href=\"https://apaleo.dev/guides/apaleo-one/iframe-resizer.html\">supported</a></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"forwarded-data-3\">Forwarded data</h3>\n<pre><code>accountCode, subjectId, bookingId, propertyId, lang\n</code></pre>\n<br/>\n<hr/>\n<h2 id=\"companydetailstab\">CompanyDetailsTab</h2>\n<h3 id=\"properties-4\">Properties</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">NAME</th>\n<th> </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">Location</td>\n<td><img src=\"/guides/apaleo-one/companydetailstab.png\"/></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">Size</td>\n<td>responsive (tab)</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">iFrame Resizer</td>\n<td><a href=\"https://apaleo.dev/guides/apaleo-one/iframe-resizer.html\">supported</a></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"forwarded-data-4\">Forwarded data</h3>\n<pre><code>accountCode, subjectId, companyId, lang\n</code></pre>\n<br/>\n<hr/>\n<h2 id=\"propertymenureports\">PropertyMenuReports</h2>\n<h3 id=\"properties-5\">Properties</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">NAME</th>\n<th> </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">Location</td>\n<td><img src=\"/guides/apaleo-one/PropertyMenuREports.png\"/></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">Size</td>\n<td>responsive (full content page)</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">iFrame Resizer</td>\n<td><a href=\"https://apaleo.dev/guides/apaleo-one/iframe-resizer.html\">supported</a></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"forwarded-data-5\">Forwarded data</h3>\n<pre><code>accountCode, subjectId, propertyId, lang\n</code></pre>\n<br/>\n<hr/>\n<h2 id=\"propertymenuapps\">PropertyMenuApps</h2>\n<h3 id=\"properties-6\">Properties</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">NAME</th>\n<th> </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">Location</td>\n<td><img src=\"/guides/apaleo-one/PropertyMenuApps.png\"/></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">Size</td>\n<td>responsive (full content page)</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">iFrame Resizer</td>\n<td><a href=\"https://apaleo.dev/guides/apaleo-one/iframe-resizer.html\">supported</a></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"forwarded-data-6\">Forwarded data</h3>\n<pre><code>accountCode, subjectId, propertyId, lang\n</code></pre>\n<br/>\n<hr/>\n<h2 id=\"accountmenuapps\">AccountMenuApps</h2>\n<h3 id=\"properties-7\">Properties</h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align: left\">NAME</th>\n<th> </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align: left\">Location</td>\n<td><img src=\"/guides/apaleo-one/AccountMenuApps.png\"/></td>\n</tr>\n<tr>\n<td style=\"text-align: left\">Size</td>\n<td>responsive (full content page)</td>\n</tr>\n<tr>\n<td style=\"text-align: left\">iFrame Resizer</td>\n<td><a href=\"https://apaleo.dev/guides/apaleo-one/iframe-resizer.html\">supported</a></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"forwarded-data-7\">Forwarded data</h3>\n<pre><code>accountCode, subjectId, lang\n</code></pre>\n<br/>\n<p>For the rest of the guide, we’ll use the additional tab on reservations as an example.</p>\n<p>There are two different types of integrations with apaleo One, public and private integrations. Both\ndo the same, but they present some fundamental differences that are worth mentioning.</p>\n</section>\n</main>",
      "markdown_content": "# Overview\n\nThis topic explains how you can include your views into the apaleo user interface. The addition of views allows the users to see information or even trigger actions in your product. Let them generate access keys, send emails, see the guest’s loyalty status, display rate recommendations, or videos of little puppy dogs - anything. It works best when you already have an API-integration in place, which allows you to look up additional data for the context you are in (such as the guest’s name).\n\n* * *\n\n## The basics\n\nIn the apaleo UI, there are well-defined places, targets, where you can put your content. Each of them has a specific size or other properties.\n\nEach target also forwards specific data to your application. The information is passed as query parameters appended to the URL to your integration. You have the possibility of extracting these query parameters in your application.\n\nHere is an example of an application with the URL https://apaleo.com/home which has the DashboardPropertyContext as the target, where the values `ACCOUNT` and `PROPERTY` for the accountCode and propertyId are forwarded. \n    \n    \n    https://apaleo.com/home?accountCode=ACCOUNT&propertyId=PROPERTY\n    \n\nTechnically, those placeholders are iframes. This has the benefit that you can use whatever technology you want to create this page. Server-side generation of pages or client-side rendering? Up to you. “Wait,” we hear you say, “you said iframe? Is that secure?” It sure is! Modern browsers use sandboxed environments for iframes, which means that your integration can co-exist with apaleo’s UI, and we won’t be able to hurt each other. Additionally, you must use HTTPS URLs for the iframe source. The browser enforces this because iframes are active mixed content and apaleo UI is only served via HTTPS. You can read more about it on [MDN](https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content/How_to_fix_website_with_mixed_content).\n\n> You have to check `accountCode` and `subjectId` with every request. The `accountCode` and `subjectId` values must match the currently logged in user on your side. If the values do not match, it means that the user has logged out from apaleo, and a different user has logged in. In that case, re-authenticate the user on your side.\n\nThe following places are available as targets.\n\n* * *\n\n## DashboardAccountContext\n\n### Properties\n\nNAME |   \n---|---  \nLocation | ![](/guides/apaleo-one/DashboardAccountContext.png)  \nSize | min. 340 x 350  \n  \n### Forwarded data\n    \n    \n    accountCode, subjectId, lang\n    \n\n  \n\n\n* * *\n\n## DashboardPropertyContext\n\n### Properties\n\nNAME |   \n---|---  \nLocation | ![](/guides/apaleo-one/DashboardPropertyContext.png)  \nSize | min. 340 x 350  \n  \n### Forwarded data\n    \n    \n    accountCode, subjectId, propertyId, lang\n    \n\n  \n\n\n* * *\n\n## ReservationDetailsTab\n\n### Properties\n\nNAME |   \n---|---  \nLocation | ![](/guides/apaleo-one/ReservationDetailsTab.png)  \nSize | responsive (tab)  \niFrame Resizer | [supported](https://apaleo.dev/guides/apaleo-one/iframe-resizer.html)  \n  \n### Forwarded data\n    \n    \n    accountCode, subjectId, reservationId, propertyId, lang\n    \n\n  \n\n\n* * *\n\n## BookingDetailsTab\n\n### Properties\n\nNAME |   \n---|---  \nLocation | ![](/guides/apaleo-one/bookingdetailstab.png)  \nSize | responsive (tab)  \niFrame Resizer | [supported](https://apaleo.dev/guides/apaleo-one/iframe-resizer.html)  \n  \n### Forwarded data\n    \n    \n    accountCode, subjectId, bookingId, propertyId, lang\n    \n\n  \n\n\n* * *\n\n## CompanyDetailsTab\n\n### Properties\n\nNAME |   \n---|---  \nLocation | ![](/guides/apaleo-one/companydetailstab.png)  \nSize | responsive (tab)  \niFrame Resizer | [supported](https://apaleo.dev/guides/apaleo-one/iframe-resizer.html)  \n  \n### Forwarded data\n    \n    \n    accountCode, subjectId, companyId, lang\n    \n\n  \n\n\n* * *\n\n## PropertyMenuReports\n\n### Properties\n\nNAME |   \n---|---  \nLocation | ![](/guides/apaleo-one/PropertyMenuREports.png)  \nSize | responsive (full content page)  \niFrame Resizer | [supported](https://apaleo.dev/guides/apaleo-one/iframe-resizer.html)  \n  \n### Forwarded data\n    \n    \n    accountCode, subjectId, propertyId, lang\n    \n\n  \n\n\n* * *\n\n## PropertyMenuApps\n\n### Properties\n\nNAME |   \n---|---  \nLocation | ![](/guides/apaleo-one/PropertyMenuApps.png)  \nSize | responsive (full content page)  \niFrame Resizer | [supported](https://apaleo.dev/guides/apaleo-one/iframe-resizer.html)  \n  \n### Forwarded data\n    \n    \n    accountCode, subjectId, propertyId, lang\n    \n\n  \n\n\n* * *\n\n## AccountMenuApps\n\n### Properties\n\nNAME |   \n---|---  \nLocation | ![](/guides/apaleo-one/AccountMenuApps.png)  \nSize | responsive (full content page)  \niFrame Resizer | [supported](https://apaleo.dev/guides/apaleo-one/iframe-resizer.html)  \n  \n### Forwarded data\n    \n    \n    accountCode, subjectId, lang\n    \n\n  \n\n\nFor the rest of the guide, we’ll use the additional tab on reservations as an example.\n\nThere are two different types of integrations with apaleo One, public and private integrations. Both do the same, but they present some fundamental differences that are worth mentioning.\n",
      "timestamp": "2025-06-23T15:18:20.706871"
    },
    {
      "url": "https://apaleo.dev/guides/apaleo-one/server-details.html",
      "title": "Server-side details | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Server-side details</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  12 minutes\n                                \n                            </p> -->\n<h2 id=\"public-integrations\">Public integrations</h2>\n<p>Having a public integration means that the URL that you configure is directly used as the source of\nthe iframe. That’s the way to go for the puppy-dog videos, or anything else that needs no security.\nKeep in mind that the source URL must be HTTPS.</p>\n<hr/>\n<h2 id=\"private-integrations\">Private integrations</h2>\n<p>With a private integration, the URL that you provide is not included directly, but instead used to\nfetch the public URL from your service. This approach is recommended as it provides an additional\nlayer of security, which we will discuss later. For these kinds of integrations, both afore\nmentioned URLs must be HTTPS.</p>\n<p>The image below shows how the integration service fetches the public URL from your service using the\nprivate URLs</p>\n<img src=\"/assets/images/integrations/ui-integration-private-integrations.png\">\n<p>This is the format we expect as a response from your secure-URL endpoint:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"url\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"string\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"expTimestamp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"datetime\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<blockquote>\n<p>Be aware that datetime must be a ISO 8601 string such as ‘2019-06-06T12:55:38Z’.</p>\n</blockquote>\n<hr/>\n<h2 id=\"the-flow\">The flow</h2>\n<p>Now that we have gone through the basics, let’s get to the fun part. How do I get this to work?</p>\n<p>In order to publish your integrations, you will need to access the apaleo integration service here\n<a href=\"https://integration.apaleo.com\">https://integration.apaleo.com</a>. It provides the endpoints to set\neverything up, and even run tests for you, to be sure that your integration is doing what you want.</p>\n<h3 id=\"set-up-integration\">Set up integration</h3>\n<p>Setting up an integration is as easy as riding a bike on a sunny day, all you need to do is call the\ncreation endpoint:</p>\n<p><code>POST /integration/v1/ui-integrations/{target}</code></p>\n<p>However, before we jump into the chapter, you might have the question “How do I make this available\nto customers?” lingering around your mind. The answer is simple: Because manual work is for non-lazy\npeople, and remembering to do something is error-prone, you should plug that into the connect and\nsetup flow. So, whenever a user connects your product to apaleo, they immediately get it in their\napaleo UI. But of course, nothing stops you from adding the integration for the users from your\ndesired customized flow and UI.</p>\n<p>When no URL is configured for a specific apaleo account, no content will be displayed. This is what\nyou want, but don’t forget to configure the integration every time a new connection is made. Because\nmanual work is for non-lazy people, and remembering to do something is error-prone, you should plug\nthat into the connect flow.</p>\n<img src=\"/assets/images/integrations/ui-integration-setup.png\"/>\n<p>This is the payload you have to pass when creating your UI integration:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">PROPERTY</th>\n<th align=\"left\">DESCRIPTION</th>\n<th align=\"left\">MANDATORY</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Code</td>\n<td align=\"left\">The identifier of your integration. If no code is provided the target of the integration is used as code.</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">Label</td>\n<td align=\"left\">The text shown in the header of your widget, for example the tab, or title of a dashboard tile. If you do not know what to use, your product name is a good choice.</td>\n<td align=\"left\">Yes</td>\n</tr>\n<tr>\n<td align=\"left\">LabelTranslations</td>\n<td align=\"left\">Different language translations for your integration’s label. You only need to set iso code for the language, for instance, ‘de’ for German. <a href=\"#set-up-translations\">Read more here</a>.</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">IconSource</td>\n<td align=\"left\">Nice icon to brand that part of the apaleo UI as yours.</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">SourceUrl</td>\n<td align=\"left\">The URL of your integration. Basically, the most important part of your integration.</td>\n<td align=\"left\">Yes</td>\n</tr>\n<tr>\n<td align=\"left\">SourceType</td>\n<td align=\"left\">Whether your integration is a public (SourceUrl is public) or a private (SourceUrl is private) integration.</td>\n<td align=\"left\">Yes</td>\n</tr>\n<tr>\n<td align=\"left\">Roles</td>\n<td align=\"left\">The roles in the account that can see the integration. If no roles are provided, the integration is visible to every user.</td>\n<td align=\"left\">-</td>\n</tr>\n<tr>\n<td align=\"left\">PropertyIds</td>\n<td align=\"left\">Property-IDs for which your integration is enabled. If no properties are provided, then the integration is available for all of them.</td>\n<td align=\"left\">-</td>\n</tr>\n</tbody>\n</table>\n<p>Here is a sample payload for a private integration limited to the properties “AWE” and “SOME”:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"AwesomeIntegration\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"label\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\" My Awesome Reservation Integration\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"iconSource\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://www.example.com/awesomeicon.png\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"sourceUrl\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://www.example.com/apaleo/reservations/integration?token=[GUID/JWT]\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"sourceType\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Private\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"roles\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"PROPERTYADMIN\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"FRONTDESK\"</span><span class=\"w\">\n  </span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"propertyIds\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n      </span><span class=\"s2\">\"AWE\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"s2\">\"SOME\"</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>There are certain things to keep in mind when creating or modifying your integrations.</p>\n<ul>\n<li>\n<p><strong>For both source types</strong></p>\n<ul>\n<li>You can have multiple integrations for the same target, as long as they have different URLs and\ncodes.</li>\n<li>The separation of properties is completely optional and if no properties are provided then the\nintegration will be available for all properties.</li>\n</ul>\n</li>\n<li>\n<p><strong>Public integrations</strong></p>\n<ul>\n<li>When creating/modifying a public integration we validate that the provided SourceUrl is a valid\n<strong>HTTPS URL.</strong></li>\n</ul>\n</li>\n<li>\n<p><strong>Private integrations</strong></p>\n<ul>\n<li>When creating/modifying a private integration in addition of validating that it is a valid HTTPS\nURL, we validate and run the complete test suite. To learn more about the tests executed refer\nto the section <a href=\"#testing-your-integration\">Testing your integration</a> in this guide.</li>\n</ul>\n</li>\n</ul>\n<pre><code>⚠️ For security reasons URLs that can be resolved to IP addresses belonging to a private network (RFC-1918) are not allowed.\n</code></pre>\n<h3 id=\"set-up-translations\">Set up translations</h3>\n<p>In order to set up the translations for your integration’s label, you need only to provide the\n<code>LabelTranslations</code> field in your payload.</p>\n<p>Keep in mind that <code>LabelTranslations</code> is a <code>map</code>, meaning it is a key and value pair collection.\nWhere your <code>key</code> is the language code, and the <code>value</code> is the text for your translation.</p>\n<p>Using the previous example for a private integration. We have included the translations for the label.</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"AwesomeIntegration\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"label\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"My Awesome Integration for Reservations\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"labelTranslations\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"de\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"meine fantastische Integration für Reservierungen\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"es\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Mi Fantastica Integración para Reservaciones\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"iconSource\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://www.example.com/awesomeicon.png\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"sourceUrl\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://www.example.com/apaleo/reservations/integration?token=[GUID/JWT]\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"sourceType\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Private\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"propertyIds\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n      </span><span class=\"s2\">\"AWE\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"s2\">\"SOME\"</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>As you can see you simply have to add the following part to your payload:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nl\">\"labelTranslations\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"de\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"meine fantastische Integration für Reservierungen\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"es\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Mi Fantastica Integración para Reservaciones\"</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p><strong>When updating</strong></p>\n<p>If you already have an existing integration, and would like to add translations, you can update it\nby calling <code>PUT /integration/v1/ui-integrations/{target}/{id}</code> and send your updated payload. Below\nis a sample.</p>\n<p>Remember it is a <code>PUT</code> call. So you are updating the existing integration, so you still need to provide all the fields including the new information.</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"label\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"My Awesome Integration for Reservations\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"labelTranslations\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"de\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"meine fantastische Integration für Reservierungen\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"es\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Mi Fantastica Integración para Reservaciones\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"fr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Ma Fantastique Réservation Intégration\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"iconSource\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://www.example.com/awesomeicon.png\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"sourceUrl\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://www.example.com/apaleo/reservations/integration?token=[GUID/JWT]\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"sourceType\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Private\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"propertyIds\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n      </span><span class=\"s2\">\"AWE\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"s2\">\"SOME\"</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<blockquote>\n<p>Once you have set up your translations, you need to do nothing else. Our services will take care of making sure that your users see the correct language if there is a translation available.</p>\n</blockquote>\n<blockquote>\n<p>In the case that there is not a translation set up for a specific language, then the service will\nuse the text set for the <code>Label</code> as default. So setting it as a general representative text is\nalways required.</p>\n</blockquote>\n<h3 id=\"set-up-roles\">Set up roles</h3>\n<p>In order to set up the roles to which your integration will be visible to, you only need to provide the <code>Roles</code> field in your payload.</p>\n<p>Using the previous example for a private integration. We have included the roles.</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"AwesomeIntegration\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"label\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"My Awesome Integration for Reservations\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"labelTranslations\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"de\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"meine fantastische Integration für Reservierungen\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"es\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Mi Fantastica Integración para Reservaciones\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"iconSource\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://www.example.com/awesomeicon.png\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"sourceUrl\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://www.example.com/apaleo/reservations/integration?token=[GUID/JWT]\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"sourceType\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Private\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"roles\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"PROPERTYADMIN\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"FRONTDESK\"</span><span class=\"w\">\n  </span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"propertyIds\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n      </span><span class=\"s2\">\"AWE\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"s2\">\"SOME\"</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p><strong>When updating</strong></p>\n<p>Just like with the translations above, if you already have an integration created, and would like to update the roles to which it should be visible to.\nYou can make a request to <code>PUT /integration/v1/ui-integrations/{target}/{id}</code> and send your updated payload. Below\nis a sample.</p>\n<p>Remember it is a <code>PUT</code> call. So you are updating the existing integration, so you still need to provide all the fields including the new information.</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"label\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"My Awesome Integration for Reservations\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"labelTranslations\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"de\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"meine fantastische Integration für Reservierungen\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"es\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Mi Fantastica Integración para Reservaciones\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"fr\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Ma Fantastique Réservation Intégration\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"iconSource\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://www.example.com/awesomeicon.png\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"sourceUrl\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://www.example.com/apaleo/reservations/integration?token=[GUID/JWT]\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"sourceType\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Private\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"propertyIds\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n      </span><span class=\"s2\">\"AWE\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"s2\">\"SOME\"</span><span class=\"w\">\n  </span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"roles\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"RESERVATIONMANAGER\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"ACCOUNTANT\"</span><span class=\"w\">\n  </span><span class=\"p\">],</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<blockquote>\n<p>Keep in mind that if you provide a role that does not exist or is invalid, you will get a validation error. In order to get the list of valid roles you can make a request to <code>GET https://identity.apaleo.com/api/v1/roles</code> before sending the request to make sure that you are sending the correct information.</p>\n</blockquote>\n<hr/>\n<h2 id=\"securing-private-integrations\">Securing private integrations</h2>\n<p>When constructing the secure URL, you can go wild and implement whatever security magic you want,\nbut it’s your responsibility to make sure that only apaleo can call your service. Not doing this may\nlead to intruders getting an easy way into the connected application. Here are some measures that\nmight be helpful:</p>\n<p>Make it so that your endpoint is only accessible from one of the apaleo public IP addresses:</p>\n<p>(Whitelist the public IP if required)</p>\n<pre><code> 34.240.36.71,\n 52.212.76.75,\n 63.33.249.221 \n</code></pre>\n<p>Attach some sort of long key / string / guid as a query parameter which is recognized by your\nservice <code>https://www.example.com/integration?token=[GUID/JWT]</code>, like a JWT or reference token:\n<a href=\"http://docs.identityserver.io/en/latest/topics/reference_tokens.html\">http://docs.identityserver.io/en/latest/topics/reference_tokens.html</a>.</p>\n<hr/>\n<h2 id=\"transmitting-data\">Transmitting data</h2>\n<p>When calling the final URL, apaleo appends the data to the URL, as a query parameter. Check the\ntable of available integration targets to see which data that is.</p>\n<img src=\"/assets/images/integrations/ui-integration-data.png\"/>\n<hr/>\n<h2 id=\"testing-your-integration\">Testing your integration</h2>\n<p>This section only applies to private integrations, public integrations are not testable.</p>\n<p>If you make any changes on your side, you may want to make sure that our integration service can get\nyour integration without any hiccups. That is where our nice test suite comes into play. Just call:</p>\n<p><code>GET /integration/v1/ui-integrations/{target}/{id}/$test</code></p>\n<p>So, what are we testing for?</p>\n<ol>\n<li>Validate that the provided private URL is valid (proper body and https)</li>\n<li>Make sure that the result of the response is a successful 2xx status code</li>\n<li>Validate that the response body is not empty</li>\n<li>Check that the response body fits the expected schema, as shown in the JSON code below</li>\n<li>Validate that the expiration date is in the future in UTC time zone</li>\n<li>Make sure that the received public URL is valid (proper body and https)</li>\n</ol>\n<p>Sample expected response body:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"url\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://www.example.com\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"expTimestamp\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"2019-06-06T12:55:38Z\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>Sample response for a successful test result:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"success\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"receivedResponse\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"{'url': 'https://www.example.com', 'expTimestamp': '2019-06-06T12:55:38Z' }\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>Sample response for a failed test result:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"success\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"false\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"errorType\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"HttpRequestToPrivateUrlError\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"errorMessage\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Status code: 404\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"errorContent\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Response from https://www.example.com was not successful (2xx)\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n</img></section>\n</main>",
      "markdown_content": "# Server-side details\n\n## Public integrations\n\nHaving a public integration means that the URL that you configure is directly used as the source of the iframe. That’s the way to go for the puppy-dog videos, or anything else that needs no security. Keep in mind that the source URL must be HTTPS.\n\n* * *\n\n## Private integrations\n\nWith a private integration, the URL that you provide is not included directly, but instead used to fetch the public URL from your service. This approach is recommended as it provides an additional layer of security, which we will discuss later. For these kinds of integrations, both afore mentioned URLs must be HTTPS.\n\nThe image below shows how the integration service fetches the public URL from your service using the private URLs\n\n![](/assets/images/integrations/ui-integration-private-integrations.png)\n\nThis is the format we expect as a response from your secure-URL endpoint:\n    \n    \n    {\n        \"url\": \"string\",\n        \"expTimestamp\": \"datetime\"\n    }\n    \n\n> Be aware that datetime must be a ISO 8601 string such as ‘2019-06-06T12:55:38Z’.\n\n* * *\n\n## The flow\n\nNow that we have gone through the basics, let’s get to the fun part. How do I get this to work?\n\nIn order to publish your integrations, you will need to access the apaleo integration service here <https://integration.apaleo.com>. It provides the endpoints to set everything up, and even run tests for you, to be sure that your integration is doing what you want.\n\n### Set up integration\n\nSetting up an integration is as easy as riding a bike on a sunny day, all you need to do is call the creation endpoint:\n\n`POST /integration/v1/ui-integrations/{target}`\n\nHowever, before we jump into the chapter, you might have the question “How do I make this available to customers?” lingering around your mind. The answer is simple: Because manual work is for non-lazy people, and remembering to do something is error-prone, you should plug that into the connect and setup flow. So, whenever a user connects your product to apaleo, they immediately get it in their apaleo UI. But of course, nothing stops you from adding the integration for the users from your desired customized flow and UI.\n\nWhen no URL is configured for a specific apaleo account, no content will be displayed. This is what you want, but don’t forget to configure the integration every time a new connection is made. Because manual work is for non-lazy people, and remembering to do something is error-prone, you should plug that into the connect flow.\n\n![](/assets/images/integrations/ui-integration-setup.png)\n\nThis is the payload you have to pass when creating your UI integration:\n\nPROPERTY | DESCRIPTION | MANDATORY  \n---|---|---  \nCode | The identifier of your integration. If no code is provided the target of the integration is used as code. | -  \nLabel | The text shown in the header of your widget, for example the tab, or title of a dashboard tile. If you do not know what to use, your product name is a good choice. | Yes  \nLabelTranslations | Different language translations for your integration’s label. You only need to set iso code for the language, for instance, ‘de’ for German. Read more here. | -  \nIconSource | Nice icon to brand that part of the apaleo UI as yours. | -  \nSourceUrl | The URL of your integration. Basically, the most important part of your integration. | Yes  \nSourceType | Whether your integration is a public (SourceUrl is public) or a private (SourceUrl is private) integration. | Yes  \nRoles | The roles in the account that can see the integration. If no roles are provided, the integration is visible to every user. | -  \nPropertyIds | Property-IDs for which your integration is enabled. If no properties are provided, then the integration is available for all of them. | -  \n  \nHere is a sample payload for a private integration limited to the properties “AWE” and “SOME”:\n    \n    \n    {\n      \"code\": \"AwesomeIntegration\",\n      \"label\": \" My Awesome Reservation Integration\",\n      \"iconSource\": \"https://www.example.com/awesomeicon.png\",\n      \"sourceUrl\": \"https://www.example.com/apaleo/reservations/integration?token=[GUID/JWT]\",\n      \"sourceType\": \"Private\",\n      \"roles\": [\n        \"PROPERTYADMIN\",\n        \"FRONTDESK\"\n      ],\n      \"propertyIds\": [\n          \"AWE\",\n          \"SOME\"\n      ]\n    }\n    \n\nThere are certain things to keep in mind when creating or modifying your integrations.\n\n  * **For both source types**\n\n    * You can have multiple integrations for the same target, as long as they have different URLs and codes.\n    * The separation of properties is completely optional and if no properties are provided then the integration will be available for all properties.\n  * **Public integrations**\n\n    * When creating/modifying a public integration we validate that the provided SourceUrl is a valid **HTTPS URL.**\n  * **Private integrations**\n\n    * When creating/modifying a private integration in addition of validating that it is a valid HTTPS URL, we validate and run the complete test suite. To learn more about the tests executed refer to the section Testing your integration in this guide.\n\n\n    \n    \n    ⚠️ For security reasons URLs that can be resolved to IP addresses belonging to a private network (RFC-1918) are not allowed.\n    \n\n### Set up translations\n\nIn order to set up the translations for your integration’s label, you need only to provide the `LabelTranslations` field in your payload.\n\nKeep in mind that `LabelTranslations` is a `map`, meaning it is a key and value pair collection. Where your `key` is the language code, and the `value` is the text for your translation.\n\nUsing the previous example for a private integration. We have included the translations for the label.\n    \n    \n    {\n      \"code\": \"AwesomeIntegration\",\n      \"label\": \"My Awesome Integration for Reservations\",\n      \"labelTranslations\": {\n        \"de\": \"meine fantastische Integration für Reservierungen\",\n        \"es\": \"Mi Fantastica Integración para Reservaciones\"\n      },\n      \"iconSource\": \"https://www.example.com/awesomeicon.png\",\n      \"sourceUrl\": \"https://www.example.com/apaleo/reservations/integration?token=[GUID/JWT]\",\n      \"sourceType\": \"Private\",\n      \"propertyIds\": [\n          \"AWE\",\n          \"SOME\"\n      ]\n    }\n    \n\nAs you can see you simply have to add the following part to your payload:\n    \n    \n    \"labelTranslations\": {\n        \"de\": \"meine fantastische Integration für Reservierungen\",\n        \"es\": \"Mi Fantastica Integración para Reservaciones\"\n      }\n    \n\n**When updating**\n\nIf you already have an existing integration, and would like to add translations, you can update it by calling `PUT /integration/v1/ui-integrations/{target}/{id}` and send your updated payload. Below is a sample.\n\nRemember it is a `PUT` call. So you are updating the existing integration, so you still need to provide all the fields including the new information.\n    \n    \n    {\n      \"label\": \"My Awesome Integration for Reservations\",\n      \"labelTranslations\": {\n        \"de\": \"meine fantastische Integration für Reservierungen\",\n        \"es\": \"Mi Fantastica Integración para Reservaciones\",\n        \"fr\": \"Ma Fantastique Réservation Intégration\"\n      },\n      \"iconSource\": \"https://www.example.com/awesomeicon.png\",\n      \"sourceUrl\": \"https://www.example.com/apaleo/reservations/integration?token=[GUID/JWT]\",\n      \"sourceType\": \"Private\",\n      \"propertyIds\": [\n          \"AWE\",\n          \"SOME\"\n      ]\n    }\n    \n\n> Once you have set up your translations, you need to do nothing else. Our services will take care of making sure that your users see the correct language if there is a translation available.\n\n> In the case that there is not a translation set up for a specific language, then the service will use the text set for the `Label` as default. So setting it as a general representative text is always required.\n\n### Set up roles\n\nIn order to set up the roles to which your integration will be visible to, you only need to provide the `Roles` field in your payload.\n\nUsing the previous example for a private integration. We have included the roles.\n    \n    \n    {\n      \"code\": \"AwesomeIntegration\",\n      \"label\": \"My Awesome Integration for Reservations\",\n      \"labelTranslations\": {\n        \"de\": \"meine fantastische Integration für Reservierungen\",\n        \"es\": \"Mi Fantastica Integración para Reservaciones\"\n      },\n      \"iconSource\": \"https://www.example.com/awesomeicon.png\",\n      \"sourceUrl\": \"https://www.example.com/apaleo/reservations/integration?token=[GUID/JWT]\",\n      \"sourceType\": \"Private\",\n      \"roles\": [\n        \"PROPERTYADMIN\",\n        \"FRONTDESK\"\n      ],\n      \"propertyIds\": [\n          \"AWE\",\n          \"SOME\"\n      ]\n    }\n    \n\n**When updating**\n\nJust like with the translations above, if you already have an integration created, and would like to update the roles to which it should be visible to. You can make a request to `PUT /integration/v1/ui-integrations/{target}/{id}` and send your updated payload. Below is a sample.\n\nRemember it is a `PUT` call. So you are updating the existing integration, so you still need to provide all the fields including the new information.\n    \n    \n    {\n      \"label\": \"My Awesome Integration for Reservations\",\n      \"labelTranslations\": {\n        \"de\": \"meine fantastische Integration für Reservierungen\",\n        \"es\": \"Mi Fantastica Integración para Reservaciones\",\n        \"fr\": \"Ma Fantastique Réservation Intégration\"\n      },\n      \"iconSource\": \"https://www.example.com/awesomeicon.png\",\n      \"sourceUrl\": \"https://www.example.com/apaleo/reservations/integration?token=[GUID/JWT]\",\n      \"sourceType\": \"Private\",\n      \"propertyIds\": [\n          \"AWE\",\n          \"SOME\"\n      ],\n      \"roles\": [\n        \"RESERVATIONMANAGER\",\n        \"ACCOUNTANT\"\n      ],\n    }\n    \n\n> Keep in mind that if you provide a role that does not exist or is invalid, you will get a validation error. In order to get the list of valid roles you can make a request to `GET https://identity.apaleo.com/api/v1/roles` before sending the request to make sure that you are sending the correct information.\n\n* * *\n\n## Securing private integrations\n\nWhen constructing the secure URL, you can go wild and implement whatever security magic you want, but it’s your responsibility to make sure that only apaleo can call your service. Not doing this may lead to intruders getting an easy way into the connected application. Here are some measures that might be helpful:\n\nMake it so that your endpoint is only accessible from one of the apaleo public IP addresses:\n\n(Whitelist the public IP if required)\n    \n    \n     34.240.36.71,\n     52.212.76.75,\n     63.33.249.221 \n    \n\nAttach some sort of long key / string / guid as a query parameter which is recognized by your service `https://www.example.com/integration?token=[GUID/JWT]`, like a JWT or reference token: <http://docs.identityserver.io/en/latest/topics/reference_tokens.html>.\n\n* * *\n\n## Transmitting data\n\nWhen calling the final URL, apaleo appends the data to the URL, as a query parameter. Check the table of available integration targets to see which data that is.\n\n![](/assets/images/integrations/ui-integration-data.png)\n\n* * *\n\n## Testing your integration\n\nThis section only applies to private integrations, public integrations are not testable.\n\nIf you make any changes on your side, you may want to make sure that our integration service can get your integration without any hiccups. That is where our nice test suite comes into play. Just call:\n\n`GET /integration/v1/ui-integrations/{target}/{id}/$test`\n\nSo, what are we testing for?\n\n  1. Validate that the provided private URL is valid (proper body and https)\n  2. Make sure that the result of the response is a successful 2xx status code\n  3. Validate that the response body is not empty\n  4. Check that the response body fits the expected schema, as shown in the JSON code below\n  5. Validate that the expiration date is in the future in UTC time zone\n  6. Make sure that the received public URL is valid (proper body and https)\n\n\n\nSample expected response body:\n    \n    \n    {\n      \"url\": \"https://www.example.com\",\n      \"expTimestamp\": \"2019-06-06T12:55:38Z\"\n    }\n    \n\nSample response for a successful test result:\n    \n    \n    {\n      \"success\": true,\n      \"receivedResponse\": \"{'url': 'https://www.example.com', 'expTimestamp': '2019-06-06T12:55:38Z' }\"\n    }\n    \n\nSample response for a failed test result:\n    \n    \n    {\n      \"success\": \"false\",\n      \"errorType\": \"HttpRequestToPrivateUrlError\",\n      \"errorMessage\": \"Status code: 404\",\n      \"errorContent\": \"Response from https://www.example.com was not successful (2xx)\"\n    }\n    \n",
      "timestamp": "2025-06-23T15:18:21.456237"
    },
    {
      "url": "https://apaleo.dev/guides/apaleo-one/client-details.html",
      "title": "Client-side functionalities | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Client-side functionalities</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  5 minutes\n                                \n                            </p> -->\n<p>All set to go on communicating with apaleo’s UI? Before we jump into the funny part, let’s start with the basics.</p>\n<p>Your app is running in an iframe. That means, that the parent of your <code>Window Object</code> is apaleo.\nBecause of that, you can communicate with us in a message based way.</p>\n<p>To achieve this, you have to use the following methods:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\">postMessage</a> method to send us a message</li>\n</ul>\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"na\">parent</span><span class=\"o\">.</span><span class=\"na\">postMessage</span><span class=\"o\">(&lt;</span><span class=\"n\">your</span> <span class=\"n\">message</span><span class=\"o\">&gt;,</span> <span class=\"s\">\"*\"</span><span class=\"o\">)</span>\n</code></pre></div></div>\n<blockquote>\n<p>We expect stringified JSON as a message. That means you have to convert your JSON / message to a string before you send it. For example,</p>\n</blockquote>\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"na\">parent</span><span class=\"o\">.</span><span class=\"na\">postMessage</span> <span class=\"o\">(</span><span class=\"no\">JSON</span><span class=\"o\">.</span><span class=\"na\">stringify</span> <span class=\"o\">(&lt;</span><span class=\"n\">your</span> <span class=\"n\">message</span><span class=\"o\">&gt;),</span> <span class=\"s\">\"*\"</span><span class=\"o\">)</span>\n</code></pre></div></div>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\">addEventListener</a> method to receive a message from us</li>\n</ul>\n<div class=\"language-java highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"n\">window</span><span class=\"o\">.</span><span class=\"na\">addEventListener</span><span class=\"o\">(</span><span class=\"s\">\"message\"</span><span class=\"o\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">your</span> <span class=\"n\">callback</span><span class=\"o\">&gt;)</span>\n</code></pre></div></div>\n<h3 id=\"response\">Response</h3>\n<p>The response which you can listen with <code>window.addEventListener(\"message\", &lt;your callback&gt;)</code> has the\nfollowing structure.</p>\n<table>\n<thead>\n<tr>\n<th>PROPERTY</th>\n<th>DESCRIPTION</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>from</td>\n<td>It is a hardcoded string <code>[apaleo]</code>. With this you will know that the response is from us.</td>\n</tr>\n<tr>\n<td>message</td>\n<td>The message is a string which is used to give the user information about the problem or it can be a success message.</td>\n</tr>\n<tr>\n<td>extra</td>\n<td>Extra can be anything. This is used to send you additional information.</td>\n</tr>\n</tbody>\n</table>\n<p>Here is a sample response:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"from\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"[apaleo]\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"message\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"A stringified JSON was expected but it was something else\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"extra\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"&lt;- here would be your message that you send -&gt;\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<hr/>\n<h2 id=\"navigation\">Navigation</h2>\n<p>If you want to navigate in the apaleo UI without causing a reload, then you can send us this\npayload.</p>\n<table>\n<thead>\n<tr>\n<th>PROPERTY</th>\n<th>DESCRIPTION</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>This is an identifier for us to know which type of message you send to us. For navigation messages it should be <code>navigate</code>.</td>\n</tr>\n<tr>\n<td>path</td>\n<td>The path describes the navigation endpoint you want to go.</td>\n</tr>\n<tr>\n<td>context</td>\n<td>Context can be account-level, property-level or both.</td>\n</tr>\n<tr>\n<td>id</td>\n<td>The identifier is needed to differentiate between multiple navigation endpoints. As an example if you want to navigate to a reservation, then the id would be the reservation id.</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>account-level: You can only navigate in the account context. Allowed value: <code>$ACCOUNT</code>.</li>\n<li>property-level: You can only navigate within properties. You can only navigate to properties where\nyou have access to. Allowed values: <code>$CURRENT_PROPERTY</code> or the property id.</li>\n<li>both: It means that the path is available in account-level and property-level.</li>\n</ul>\n<h3 id=\"endpoint-details\">Endpoint details</h3>\n<p>Here you can see the available endpoints and in which context they can be used.</p>\n<table>\n<thead>\n<tr>\n<th>PATH</th>\n<th>CONTEXT LEVEL</th>\n<th>ID NEEDED</th>\n<th>DESCRIPTION</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>apps</td>\n<td>both</td>\n<td>YES</td>\n<td>Navigates to a UI Integration</td>\n</tr>\n<tr>\n<td>properties</td>\n<td>account-level</td>\n<td>-</td>\n<td>Navigates to the properties overview in the account context</td>\n</tr>\n<tr>\n<td>reservation-details</td>\n<td>property-level</td>\n<td>YES</td>\n<td>Navigates to the reservation details of a reservation</td>\n</tr>\n</tbody>\n</table>\n<p>Here is a sample payload to navigate to the reservation details of the reservation with the id “SOME-1” and property “AWE”:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"navigate\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"path\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"reservation-details\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"context\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"AWE\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"SOME-1\"</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>Here is a sample payload to navigate to the reservation details of the reservation with the id “SOME-1” in the current property:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"navigate\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"path\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"reservation-details\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"context\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"$CURRENT_PROPERTY\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"SOME-1\"</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<hr/>\n<h2 id=\"notifications\">Notifications</h2>\n<p>Showing a notification is also easy. You can use the apaleo UI notification service to display any\nsort of message above your iframe, just as shown in the screen shot below.</p>\n<img src=\"/assets/images/integrations/apaleo-one-notification-sample.png\">\n<p>In order to do so, you can send us the following payload</p>\n<p>Here is a sample payload to show a success notification:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"notification\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"title\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"apaleo\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"content\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"rocks\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"notificationType\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"success\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<h3 id=\"properties\">Properties</h3>\n<table>\n<thead>\n<tr>\n<th>PROPERTY</th>\n<th>OPTIONAL</th>\n<th>DESCRIPTION</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>-</td>\n<td>This is an identifier for us to know which type of message you send to us. For notification messages it should be <code>notification</code>.</td>\n</tr>\n<tr>\n<td>title</td>\n<td>-</td>\n<td>The title of the toast message.</td>\n</tr>\n<tr>\n<td>content</td>\n<td>YES</td>\n<td>The content of the toast message.</td>\n</tr>\n<tr>\n<td>notificationType</td>\n<td>-</td>\n<td>Type can be success, alert or error.</td>\n</tr>\n</tbody>\n</table>\n<hr/>\n<h2 id=\"language-and-translations\">Language and translations</h2>\n<p>In order for you to be able to manage the language of your integration, we provide the current\nlanguage of the apaleo UI to the iframe as a query parameter. So, if you want to translate your\nintegration so it is in the same language as the apaleo UI, you can use the <code>lang</code> query parameter.</p>\n<p>For example, when we load your integration into the iframe with your URL we provide the query parameters as follows</p>\n<pre><code>https://www.yourintegration.com?accountCode=[CurrentUserAccountCode]&amp;lang=en&amp;subjectId=[CurrentUserSubjectId]\n</code></pre>\n<p>As you can see the URL contains the query parameter <code>lang=en</code> which you can use in your integration\nin order to show in the desired language.</p>\n</img></section>\n</main>",
      "markdown_content": "# Client-side functionalities\n\nAll set to go on communicating with apaleo’s UI? Before we jump into the funny part, let’s start with the basics.\n\nYour app is running in an iframe. That means, that the parent of your `Window Object` is apaleo. Because of that, you can communicate with us in a message based way.\n\nTo achieve this, you have to use the following methods:\n\n  * [postMessage](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) method to send us a message\n\n\n    \n    \n    window.parent.postMessage(<your message>, \"*\")\n    \n\n> We expect stringified JSON as a message. That means you have to convert your JSON / message to a string before you send it. For example,\n    \n    \n    window.parent.postMessage (JSON.stringify (<your message>), \"*\")\n    \n\n  * [addEventListener](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener) method to receive a message from us\n\n\n    \n    \n     window.addEventListener(\"message\", <your callback>)\n    \n\n### Response\n\nThe response which you can listen with `window.addEventListener(\"message\", <your callback>)` has the following structure.\n\nPROPERTY | DESCRIPTION  \n---|---  \nfrom | It is a hardcoded string `[apaleo]`. With this you will know that the response is from us.  \nmessage | The message is a string which is used to give the user information about the problem or it can be a success message.  \nextra | Extra can be anything. This is used to send you additional information.  \n  \nHere is a sample response:\n    \n    \n    {\n      \"from\": \"[apaleo]\",\n      \"message\": \"A stringified JSON was expected but it was something else\",\n      \"extra\": \"<- here would be your message that you send ->\"\n    }\n    \n\n* * *\n\n## Navigation\n\nIf you want to navigate in the apaleo UI without causing a reload, then you can send us this payload.\n\nPROPERTY | DESCRIPTION  \n---|---  \ntype | This is an identifier for us to know which type of message you send to us. For navigation messages it should be `navigate`.  \npath | The path describes the navigation endpoint you want to go.  \ncontext | Context can be account-level, property-level or both.  \nid | The identifier is needed to differentiate between multiple navigation endpoints. As an example if you want to navigate to a reservation, then the id would be the reservation id.  \n  \n  * account-level: You can only navigate in the account context. Allowed value: `$ACCOUNT`.\n  * property-level: You can only navigate within properties. You can only navigate to properties where you have access to. Allowed values: `$CURRENT_PROPERTY` or the property id.\n  * both: It means that the path is available in account-level and property-level.\n\n\n\n### Endpoint details\n\nHere you can see the available endpoints and in which context they can be used.\n\nPATH | CONTEXT LEVEL | ID NEEDED | DESCRIPTION  \n---|---|---|---  \napps | both | YES | Navigates to a UI Integration  \nproperties | account-level | - | Navigates to the properties overview in the account context  \nreservation-details | property-level | YES | Navigates to the reservation details of a reservation  \n  \nHere is a sample payload to navigate to the reservation details of the reservation with the id “SOME-1” and property “AWE”:\n    \n    \n    {\n      \"type\": \"navigate\",\n      \"path\": \"reservation-details\",\n      \"context\": \"AWE\",\n      \"id\": \"SOME-1\",\n    }\n    \n\nHere is a sample payload to navigate to the reservation details of the reservation with the id “SOME-1” in the current property:\n    \n    \n    {\n      \"type\": \"navigate\",\n      \"path\": \"reservation-details\",\n      \"context\": \"$CURRENT_PROPERTY\",\n      \"id\": \"SOME-1\",\n    }\n    \n\n* * *\n\n## Notifications\n\nShowing a notification is also easy. You can use the apaleo UI notification service to display any sort of message above your iframe, just as shown in the screen shot below.\n\n![](/assets/images/integrations/apaleo-one-notification-sample.png)\n\nIn order to do so, you can send us the following payload\n\nHere is a sample payload to show a success notification:\n    \n    \n    {\n      \"type\": \"notification\",\n      \"title\": \"apaleo\",\n      \"content\": \"rocks\",\n      \"notificationType\": \"success\"\n    }\n    \n\n### Properties\n\nPROPERTY | OPTIONAL | DESCRIPTION  \n---|---|---  \ntype | - | This is an identifier for us to know which type of message you send to us. For notification messages it should be `notification`.  \ntitle | - | The title of the toast message.  \ncontent | YES | The content of the toast message.  \nnotificationType | - | Type can be success, alert or error.  \n  \n* * *\n\n## Language and translations\n\nIn order for you to be able to manage the language of your integration, we provide the current language of the apaleo UI to the iframe as a query parameter. So, if you want to translate your integration so it is in the same language as the apaleo UI, you can use the `lang` query parameter.\n\nFor example, when we load your integration into the iframe with your URL we provide the query parameters as follows\n    \n    \n    https://www.yourintegration.com?accountCode=[CurrentUserAccountCode]&lang=en&subjectId=[CurrentUserSubjectId]\n    \n\nAs you can see the URL contains the query parameter `lang=en` which you can use in your integration in order to show in the desired language.\n",
      "timestamp": "2025-06-23T15:18:22.187531"
    },
    {
      "url": "https://apaleo.dev/guides/apaleo-one/guest-details-crm.html",
      "title": "Guest details CRM | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Guest details CRM</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  3 minutes\n                                \n                            </p> -->\n<h2 id=\"purpose\">Purpose</h2>\n<p>This feature allows customers to integrate their own CRMs into the Apaleo platform, enabling them to use guest data from their CRM and provide it at the booking and reservation level.</p>\n<h2 id=\"integration-creation\">Integration Creation</h2>\n<p>To create an integration, follow these steps:</p>\n<ol>\n<li>\n<p>Navigate to <a href=\"https://integration.apaleo.com/swagger/index.html\">Apaleo Integration Swagger UI</a>.</p>\n</li>\n<li>\n<p>Authorize yourself.</p>\n</li>\n<li>\n<p>Scroll down to <strong>POST /integration/v1/ui-integrations/{target}</strong>.</p>\n</li>\n<li>\n<p>Click <strong>Try it out</strong>.</p>\n</li>\n<li>\n<p>Set the <code>target</code> parameter to <strong>GuestDetailsDialog</strong>.</p>\n</li>\n<li>\n<p>The request body should look like this:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"MYINTEGRATIONWITHAPALEO\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"label\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"My Integration\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"sourceUrl\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"https://www.myintegration.com\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"sourceType\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Public\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n\n</span></code></pre></div></div>\n</li>\n<li>\n<p>Submit the request to create the integration.</p>\n</li>\n</ol>\n<h3 id=\"supporting-multiple-integrations\">Supporting Multiple Integrations</h3>\n<p>Apaleo supports multiple CRM integrations simultaneously. Each integration is registered separately using a unique <code>code</code> in the request body. When integrating multiple CRMs, ensure that each has a distinct <code>code</code> and <code>sourceUrl</code>. Users will be able to select the desired integration from the Guest Details modal in Apaleo.</p>\n<h2 id=\"crm-adjustments\">CRM Adjustments</h2>\n<p>Apaleo and your CRM communicate securely via the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\">postMessage API</a>, ensuring seamless data exchange between the iframe and the host.</p>\n<h3 id=\"sending-guest-data-to-apaleo\">Sending Guest Data to Apaleo</h3>\n<p>To share guest data with Apaleo, use the following script inside your CRM:</p>\n<div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">parent</span><span class=\"p\">.</span><span class=\"nx\">postMessage</span><span class=\"p\">({</span>\n  <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">GuestDetails</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"c1\">// Required for Apaleo to recognize the message type</span>\n  <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"nx\">selectedGuestData</span><span class=\"p\">,</span> <span class=\"c1\">// GuestModel or BookerModel (see Apaleo API documentation)</span>\n<span class=\"p\">},</span> <span class=\"dl\">'</span><span class=\"s1\">https://app.apaleo.com</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n</code></pre></div></div>\n<p>For reference on guest data models, see the <a href=\"https://api.apaleo.com/swagger/index.html?urls.primaryName=Booking%20NSFW\">Apaleo API</a>.</p>\n<h3 id=\"supporting-booker-and-guest-models\">Supporting Booker and Guest Models</h3>\n<p>Apaleo supports both <strong>Booker</strong> and <strong>Guest</strong> models, as they share many common fields. When integrating your CRM, you can use a unified approach for handling data related to both entities.</p>\n<p>However, if your CRM contains specific data that differs between a booker and a guest, you can implement custom processing logic. Apaleo provides information about the entity type via iframe <code>src</code> query parameters. You can check for the <code>personType</code> parameter in the iframe URL:</p>\n<ul>\n<li><code>?personType=Guest</code> – Indicates that the current entity is a guest.</li>\n<li><code>?personType=Booker</code> – Indicates that the current entity is a booker.</li>\n</ul>\n<p>Your CRM can leverage this information to tailor data processing accordingly, ensuring accurate handling of booker and guest details.</p>\n<img src=\"/assets/images/integrations/guest-details-1.png\">\n<h3 id=\"handling-standalone-and-embedded-crm-modes\">Handling Standalone and Embedded CRM Modes</h3>\n<p>If your CRM functions as a standalone website, ensure it properly detects when it is embedded in an iframe:</p>\n<div class=\"language-jsx highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">function</span> <span class=\"nx\">selectGuest</span><span class=\"p\">(</span><span class=\"nx\">guest</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nb\">self</span> <span class=\"o\">!==</span> <span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">top</span><span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"c1\">// true if CRM is open in an iframe</span>\n    <span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">parent</span><span class=\"p\">.</span><span class=\"nx\">postMessage</span><span class=\"p\">({</span>\n      <span class=\"na\">type</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">GuestDetails</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n      <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"nx\">guest</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span> <span class=\"dl\">'</span><span class=\"s1\">https://app.apaleo.com</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// Handle selection when CRM is used as a standalone website</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n</code></pre></div></div>\n<h3 id=\"enhancing-integration-with-responsive-height\">Enhancing Integration with Responsive Height</h3>\n<p>To ensure your CRM integration utilizes the available screen space efficiently, include the following script:</p>\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;script </span><span class=\"na\">onload=</span><span class=\"s\">\"broadcastIframeHeight()\"</span> <span class=\"na\">src=</span><span class=\"s\">\"https://cdn.apaleo.com/scripts/broadcast-iframe-resize.min.js\"</span> <span class=\"na\">defer</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n\n</code></pre></div></div>\n<p>This script dynamically adjusts the iframe height based on the content inside your CRM.\nRead more about responsive height <a href=\"/guides/apaleo-one/iframe-resizer.html\">here</a>.</p>\n<h2 id=\"see-the-integration-in-action\">See the Integration in Action</h2>\n<ol>\n<li>Make sure <code>guestDetailsDialogIntegration</code> feature flag is turned on.</li>\n<li>Go to <a href=\"https://app.apaleo.com/\">Apaleo</a>.</li>\n<li>Open any reservation and navigate to the <strong>Guests</strong> tab.</li>\n<li>Click <strong>Edit</strong> to open Guest Details modal.</li>\n<li>Next to the search bar, click the button to search in your CRM.</li>\n<li>Your integrated CRM should appear inside the modal window.</li>\n<li>Select a guest from your CRM, and Apaleo will automatically populate the form fields with the selected guest’s data.</li>\n</ol>\n<img src=\"/assets/images/integrations/guest-details-2.png\"/>\n<img src=\"/assets/images/integrations/guest-details-3.png\"/>\n</img></section>\n</main>",
      "markdown_content": "# Guest details CRM\n\n## Purpose\n\nThis feature allows customers to integrate their own CRMs into the Apaleo platform, enabling them to use guest data from their CRM and provide it at the booking and reservation level.\n\n## Integration Creation\n\nTo create an integration, follow these steps:\n\n  1. Navigate to [Apaleo Integration Swagger UI](https://integration.apaleo.com/swagger/index.html).\n\n  2. Authorize yourself.\n\n  3. Scroll down to **POST /integration/v1/ui-integrations/{target}**.\n\n  4. Click **Try it out**.\n\n  5. Set the `target` parameter to **GuestDetailsDialog**.\n\n  6. The request body should look like this:\n         \n         {\n           \"code\": \"MYINTEGRATIONWITHAPALEO\",\n           \"label\": \"My Integration\",\n           \"sourceUrl\": \"https://www.myintegration.com\",\n           \"sourceType\": \"Public\"\n         }\n         \n         \n\n  7. Submit the request to create the integration.\n\n\n\n\n### Supporting Multiple Integrations\n\nApaleo supports multiple CRM integrations simultaneously. Each integration is registered separately using a unique `code` in the request body. When integrating multiple CRMs, ensure that each has a distinct `code` and `sourceUrl`. Users will be able to select the desired integration from the Guest Details modal in Apaleo.\n\n## CRM Adjustments\n\nApaleo and your CRM communicate securely via the [postMessage API](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage), ensuring seamless data exchange between the iframe and the host.\n\n### Sending Guest Data to Apaleo\n\nTo share guest data with Apaleo, use the following script inside your CRM:\n    \n    \n    window.parent.postMessage({\n      type: 'GuestDetails', // Required for Apaleo to recognize the message type\n      value: selectedGuestData, // GuestModel or BookerModel (see Apaleo API documentation)\n    }, 'https://app.apaleo.com');\n    \n    \n\nFor reference on guest data models, see the [Apaleo API](https://api.apaleo.com/swagger/index.html?urls.primaryName=Booking%20NSFW).\n\n### Supporting Booker and Guest Models\n\nApaleo supports both **Booker** and **Guest** models, as they share many common fields. When integrating your CRM, you can use a unified approach for handling data related to both entities.\n\nHowever, if your CRM contains specific data that differs between a booker and a guest, you can implement custom processing logic. Apaleo provides information about the entity type via iframe `src` query parameters. You can check for the `personType` parameter in the iframe URL:\n\n  * `?personType=Guest` – Indicates that the current entity is a guest.\n  * `?personType=Booker` – Indicates that the current entity is a booker.\n\n\n\nYour CRM can leverage this information to tailor data processing accordingly, ensuring accurate handling of booker and guest details.\n\n![](/assets/images/integrations/guest-details-1.png)\n\n### Handling Standalone and Embedded CRM Modes\n\nIf your CRM functions as a standalone website, ensure it properly detects when it is embedded in an iframe:\n    \n    \n    function selectGuest(guest) {\n      if (window.self !== window.top) { // true if CRM is open in an iframe\n        window.parent.postMessage({\n          type: 'GuestDetails',\n          value: guest,\n        }, 'https://app.apaleo.com');\n      } else {\n        // Handle selection when CRM is used as a standalone website\n      }\n    }\n    \n    \n\n### Enhancing Integration with Responsive Height\n\nTo ensure your CRM integration utilizes the available screen space efficiently, include the following script:\n    \n    \n    <script onload=\"broadcastIframeHeight()\" src=\"https://cdn.apaleo.com/scripts/broadcast-iframe-resize.min.js\" defer></script>\n    \n    \n\nThis script dynamically adjusts the iframe height based on the content inside your CRM. Read more about responsive height [here](/guides/apaleo-one/iframe-resizer.html).\n\n## See the Integration in Action\n\n  1. Make sure `guestDetailsDialogIntegration` feature flag is turned on.\n  2. Go to [Apaleo](https://app.apaleo.com/).\n  3. Open any reservation and navigate to the **Guests** tab.\n  4. Click **Edit** to open Guest Details modal.\n  5. Next to the search bar, click the button to search in your CRM.\n  6. Your integrated CRM should appear inside the modal window.\n  7. Select a guest from your CRM, and Apaleo will automatically populate the form fields with the selected guest’s data.\n\n![](/assets/images/integrations/guest-details-2.png) ![](/assets/images/integrations/guest-details-3.png)\n",
      "timestamp": "2025-06-23T15:18:22.916629"
    },
    {
      "url": "https://apaleo.dev/guides/apaleo-one/iframe-resizer.html",
      "title": "iFrame responsive height | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>iFrame responsive height</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  2 minutes\n                                \n                            </p> -->\n<p>Together, we want to build an ultra-connected interface for users. That means no clicking between browsers, no iframes with clunky scrollbars, and no crazy clashes in UI/branding. apaleo one displays your app’s data directly within apaleo’s PMS.</p>\n<hr/>\n<p>Every responsive <a href=\"/guides/apaleo-one/overview#the-basics\">target</a> supports these two solutions:</p>\n<ul>\n<li>native Apaleo script (recommended)</li>\n<li><a href=\"https://github.com/davidjbradshaw/iframe-resizer\">iframe-resizer</a> library by David J. Bradshaw (deprecated)</li>\n</ul>\n<hr/>\n<h2 id=\"native-apaleo-script-recommended\">Native Apaleo script (recommended)</h2>\n<p>The native Apaleo script is the recommended way to seamlessly integrate your application into Apaleo. All you need to do is to add the following script into your application’s HTML file:</p>\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;script </span><span class=\"na\">onload=</span><span class=\"s\">\"broadcastIframeHeight()\"</span> <span class=\"na\">src=</span><span class=\"s\">\"https://cdn.apaleo.com/scripts/broadcast-iframe-resize.min.js\"</span> <span class=\"na\">defer</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n</code></pre></div></div>\n<p>You can optionally provide an element as an argument if your app’s body element is not a main scrollable container:</p>\n<div class=\"language-html highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"scrollableContainer\"</span><span class=\"nt\">&gt;</span>...<span class=\"nt\">&lt;/div&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">onload=</span><span class=\"s\">\"broadcastIframeHeight(document.getElementById('scrollableContainer'))\"</span> <span class=\"na\">src=</span><span class=\"s\">\"https://cdn.apaleo.com/scripts/broadcast-iframe-resize.min.js\"</span> <span class=\"na\">defer</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n</code></pre></div></div>\n<hr/>\n<h2 id=\"iframe-resizer-deprecated\">iframe-resizer (deprecated)</h2>\n<blockquote>\n<p>NOTE: Apaleo uses iframe-resizer v4.\nNewer versions will not be integrated with Apaleo.\nWe strongly encourage using a native script, described above.\niframe-resizer integration will be removed in future in favor of a native solution.</p>\n</blockquote>\n<h3 id=\"how-to-use-it\">How to use it</h3>\n<p>You just have to <a href=\"https://github.com/davidjbradshaw/iframe-resizer#install\">install</a> the library and load the file <code>iframeResizer.contentWindow.min.js</code> into your application. That’s it. You don’t need anything else. After that, the iframe will have the same height as your application.</p>\n<p>You can also use a <a href=\"https://cdnjs.com/libraries/iframe-resizer\">cdn</a>, if you don’t want a local installation of the library.</p>\n<h3 id=\"things-to-be-aware-of\">Things to be aware of</h3>\n<p>The library doesn’t support elements that are positioned <code>fixed</code>. The reason for that is, that the\niframe doesn’t have any scrollbars anymore. The scrolling is moved to the parent window (apaleo), so\nyour <code>fixed</code> element isn’t aware of scrolling events.</p>\n<p>Dialogs and other modals aren’t fully supported by the library too. If your application has a very\nlong page and the user isn’t in the correct position, then the user may have to scroll to see them.\n<strong>Don’t panic, we are working on a solution to fix this problem.</strong></p>\n<p>We only support resizing the height of the iframe. That means, that your application needs to be\nresponsive, otherwise if there is an overflow in the width, then that part will be not visible.</p>\n<h3 id=\"frequently-asked-questions\">Frequently asked questions</h3>\n<p><strong>Question: It works on page A but not on page B.</strong><br/> Answer: You have to load\n<code>iframeResizer.contentWindow.min.js</code> on every page.</p>\n<p><strong>Question: The height of my application isn’t detected correctly.</strong><br/> Answer: You can use\nanother\n<a href=\"https://github.com/davidjbradshaw/iframe-resizer/blob/master/docs/iframed_page/options.md#heightcalculationmethod--widthcalculationmethod\">height calculation method</a>.\nThe options are listed\n<a href=\"https://github.com/davidjbradshaw/iframe-resizer/blob/master/docs/parent_page/options.md#heightcalculationmethod\">here</a>.</p>\n<p><strong>Question: I opened a dialog and the height didn’t change.</strong><br/> Answer: That happens because the\nlibrary can’t always detect the dialog. You can switch the\n<a href=\"https://github.com/davidjbradshaw/iframe-resizer/blob/master/docs/iframed_page/options.md#heightcalculationmethod--widthcalculationmethod\">height calculation method</a>.\nThe options are listed\n<a href=\"https://github.com/davidjbradshaw/iframe-resizer/blob/master/docs/parent_page/options.md#heightcalculationmethod\">here</a>.\nYou can also use a <code>min-height</code> for your application.</p>\n<p><strong>Question: My notification / toast message isn’t visible. I have to scroll to the bottom of the\npage to see it.</strong><br/> Answer: That happens because the iframe has the same height as your\napplication and because of that the notification stays at the bottom of the page. You can use\n<a href=\"/guides/apaleo-one/client-details#notifications\">the notification functionality provided by the ui</a>.</p>\n</section>\n</main>",
      "markdown_content": "# iFrame responsive height\n\nTogether, we want to build an ultra-connected interface for users. That means no clicking between browsers, no iframes with clunky scrollbars, and no crazy clashes in UI/branding. apaleo one displays your app’s data directly within apaleo’s PMS.\n\n* * *\n\nEvery responsive [target](/guides/apaleo-one/overview#the-basics) supports these two solutions:\n\n  * native Apaleo script (recommended)\n  * [iframe-resizer](https://github.com/davidjbradshaw/iframe-resizer) library by David J. Bradshaw (deprecated)\n\n\n\n* * *\n\n## Native Apaleo script (recommended)\n\nThe native Apaleo script is the recommended way to seamlessly integrate your application into Apaleo. All you need to do is to add the following script into your application’s HTML file:\n    \n    \n    <script onload=\"broadcastIframeHeight()\" src=\"https://cdn.apaleo.com/scripts/broadcast-iframe-resize.min.js\" defer></script>\n    \n\nYou can optionally provide an element as an argument if your app’s body element is not a main scrollable container:\n    \n    \n    <div id=\"scrollableContainer\">...</div>\n    <script onload=\"broadcastIframeHeight(document.getElementById('scrollableContainer'))\" src=\"https://cdn.apaleo.com/scripts/broadcast-iframe-resize.min.js\" defer></script>\n    \n\n* * *\n\n## iframe-resizer (deprecated)\n\n> NOTE: Apaleo uses iframe-resizer v4. Newer versions will not be integrated with Apaleo. We strongly encourage using a native script, described above. iframe-resizer integration will be removed in future in favor of a native solution.\n\n### How to use it\n\nYou just have to [install](https://github.com/davidjbradshaw/iframe-resizer#install) the library and load the file `iframeResizer.contentWindow.min.js` into your application. That’s it. You don’t need anything else. After that, the iframe will have the same height as your application.\n\nYou can also use a [cdn](https://cdnjs.com/libraries/iframe-resizer), if you don’t want a local installation of the library.\n\n### Things to be aware of\n\nThe library doesn’t support elements that are positioned `fixed`. The reason for that is, that the iframe doesn’t have any scrollbars anymore. The scrolling is moved to the parent window (apaleo), so your `fixed` element isn’t aware of scrolling events.\n\nDialogs and other modals aren’t fully supported by the library too. If your application has a very long page and the user isn’t in the correct position, then the user may have to scroll to see them. **Don’t panic, we are working on a solution to fix this problem.**\n\nWe only support resizing the height of the iframe. That means, that your application needs to be responsive, otherwise if there is an overflow in the width, then that part will be not visible.\n\n### Frequently asked questions\n\n**Question: It works on page A but not on page B.**  \nAnswer: You have to load `iframeResizer.contentWindow.min.js` on every page.\n\n**Question: The height of my application isn’t detected correctly.**  \nAnswer: You can use another [height calculation method](https://github.com/davidjbradshaw/iframe-resizer/blob/master/docs/iframed_page/options.md#heightcalculationmethod--widthcalculationmethod). The options are listed [here](https://github.com/davidjbradshaw/iframe-resizer/blob/master/docs/parent_page/options.md#heightcalculationmethod).\n\n**Question: I opened a dialog and the height didn’t change.**  \nAnswer: That happens because the library can’t always detect the dialog. You can switch the [height calculation method](https://github.com/davidjbradshaw/iframe-resizer/blob/master/docs/iframed_page/options.md#heightcalculationmethod--widthcalculationmethod). The options are listed [here](https://github.com/davidjbradshaw/iframe-resizer/blob/master/docs/parent_page/options.md#heightcalculationmethod). You can also use a `min-height` for your application.\n\n**Question: My notification / toast message isn’t visible. I have to scroll to the bottom of the page to see it.**  \nAnswer: That happens because the iframe has the same height as your application and because of that the notification stays at the bottom of the page. You can use [the notification functionality provided by the ui](/guides/apaleo-one/client-details#notifications).\n",
      "timestamp": "2025-06-23T15:18:23.618066"
    },
    {
      "url": "https://apaleo.dev/guides/apaleo-one/third-party-cookies.html",
      "title": "Third-Party Cookies | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Third-Party Cookies</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  3 minutes\n                                \n                            </p> -->\n<p>There is a very important distinction to make here before we talk about how to use cookies within apaleo One / UI integration. A cookie is associated with a domain. If this domain is the same as the domain of the page you are on, the cookie is called a first-party cookie (The cookie has been set in a first-party context). If the domain is different, it’s a third-party cookie.</p>\n<p>For example, site A (main site) loads site B (framed site) in iframe. Site B sets some cookies (e.g. store session data), to function properly. These cookies are called 3rd party cookies, as they are not set by site A.</p>\n<hr/>\n<h2 id=\"storage-access-api\">Storage Access API</h2>\n<p>Third-party cookies are useful, many websites use them for legitimate reasons to make the best user experience possible. The issue here is, it’s also possible to abuse the third-party cookies in order to build profiles for users and track them and for this reason it has been proposed that browsers should provide a way to ask for users permission before storing cookies in a third-party context.</p>\n<p>The Storage Access API provides a way for embedded, cross-origin content (acting within a third-party context) to gain unrestricted access to storage that it would normally only have access to in a first-party context. This API allow embedded resources to check whether they currently have access to their first-party storage and to request access to their first-party storage from the user agent.\nThe Storage Access API can be summarized basically into two essential functions you can use:</p>\n<table>\n<thead>\n<tr>\n<th>Function name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Document.hasStorageAccess()</code></td>\n<td>You can use this function to determine if you (as a third-party) have access to your first-party cookies or not, this function returns a <code>promise</code> that resolve to <code>true</code> if you have access or <code>false</code> if you do not have access.</td>\n</tr>\n<tr>\n<td><code>Document.requestStorageAccess()</code></td>\n<td>You can use this function to request access (as a third-party) to your first-party cookies, this function returns a <code>promise</code> that resolves if you have been granted the access or rejects if access was denied</td>\n</tr>\n</tbody>\n</table>\n<p>There are conditions to which you might or might not get the access to your first-party cookies, it depends on the implementation for each browser, meaning, it’s possible that <code>Document.requestStorageAccess()</code> rejects automatically.\nAt the time of writing this article, only two browsers support the Storage Access API and only Apple’s Webkit engine support them with full restrictions. Apple’s Intelligent Tracking Prevention (ITP) is completely blocking access to third-party cookies, so if you are active within a third-party context you won’t be able to store cookies. For that you must make use of the Storage Access API.</p>\n<hr/>\n<h2 id=\"what-does-that-mean-for-you\">What does that mean for you?</h2>\n<p>All apaleo One / UI integrations are acting as third-party, therefore if your application stores cookies, it’s possible that they will be completely purged or at least have some limitations and restrictions applied based on the browsers implementation of the Storage Access API. Based on above description we highly encourage all apps to:</p>\n<ol>\n<li>Have a landing page, before you start authorization flow. The user must have landed on your website and interacted with it.</li>\n<li>Set a cookie as a first-party. Once the user landed on your website set a cookie as a first-party otherwise the call to <code>Document.requestStorageAccess()</code> will be later rejected automatically.</li>\n<li>Once your app is loaded in apaleo (as a third-party), make a call to <code>Document.hasStorageAccess()</code>, if it returns <code>false</code>, show a button/dialog to the user asking for their permission to store essential cookies.</li>\n<li>When user clicks a button (this is very crucial), call <code>Document.requestStorageAccess()</code> in the event handler. Depending on the browser implementation a pop-up might appear to the user from the browser itself asking the user whether they are willing to grant you access to the first-party storage or not.</li>\n</ol>\n<blockquote>\n<p>Please note that the Storage Access API at the time of writing this article still considered as experimental.</p>\n</blockquote>\n<p>For more information you can visit these references:</p>\n<ol>\n<li><a href=\"https://webkit.org/blog/8124/introducing-storage-access-api\">Apple’s Webkit Storage Access API announcement</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Storage_Access_API\">Mozilla Storage Access API reference</a></li>\n<li><a href=\"https://www.chromestatus.com/feature/5612590694662144\">Google Chrome’s feature tracking</a></li>\n<li><a href=\"https://webkit.org/blog/10218/full-third-party-cookie-blocking-and-more\">Apple’s ITP full third-party cookie blocking behaviour</a></li>\n<li><a href=\"https://webkit.org/blog/11545/updates-to-the-storage-access-api\">Webkit engine’s recent update to Storage Access API</a></li>\n</ol>\n</section>\n</main>",
      "markdown_content": "# Third-Party Cookies\n\nThere is a very important distinction to make here before we talk about how to use cookies within apaleo One / UI integration. A cookie is associated with a domain. If this domain is the same as the domain of the page you are on, the cookie is called a first-party cookie (The cookie has been set in a first-party context). If the domain is different, it’s a third-party cookie.\n\nFor example, site A (main site) loads site B (framed site) in iframe. Site B sets some cookies (e.g. store session data), to function properly. These cookies are called 3rd party cookies, as they are not set by site A.\n\n* * *\n\n## Storage Access API\n\nThird-party cookies are useful, many websites use them for legitimate reasons to make the best user experience possible. The issue here is, it’s also possible to abuse the third-party cookies in order to build profiles for users and track them and for this reason it has been proposed that browsers should provide a way to ask for users permission before storing cookies in a third-party context.\n\nThe Storage Access API provides a way for embedded, cross-origin content (acting within a third-party context) to gain unrestricted access to storage that it would normally only have access to in a first-party context. This API allow embedded resources to check whether they currently have access to their first-party storage and to request access to their first-party storage from the user agent. The Storage Access API can be summarized basically into two essential functions you can use:\n\nFunction name | Description  \n---|---  \n`Document.hasStorageAccess()` | You can use this function to determine if you (as a third-party) have access to your first-party cookies or not, this function returns a `promise` that resolve to `true` if you have access or `false` if you do not have access.  \n`Document.requestStorageAccess()` | You can use this function to request access (as a third-party) to your first-party cookies, this function returns a `promise` that resolves if you have been granted the access or rejects if access was denied  \n  \nThere are conditions to which you might or might not get the access to your first-party cookies, it depends on the implementation for each browser, meaning, it’s possible that `Document.requestStorageAccess()` rejects automatically. At the time of writing this article, only two browsers support the Storage Access API and only Apple’s Webkit engine support them with full restrictions. Apple’s Intelligent Tracking Prevention (ITP) is completely blocking access to third-party cookies, so if you are active within a third-party context you won’t be able to store cookies. For that you must make use of the Storage Access API.\n\n* * *\n\n## What does that mean for you?\n\nAll apaleo One / UI integrations are acting as third-party, therefore if your application stores cookies, it’s possible that they will be completely purged or at least have some limitations and restrictions applied based on the browsers implementation of the Storage Access API. Based on above description we highly encourage all apps to:\n\n  1. Have a landing page, before you start authorization flow. The user must have landed on your website and interacted with it.\n  2. Set a cookie as a first-party. Once the user landed on your website set a cookie as a first-party otherwise the call to `Document.requestStorageAccess()` will be later rejected automatically.\n  3. Once your app is loaded in apaleo (as a third-party), make a call to `Document.hasStorageAccess()`, if it returns `false`, show a button/dialog to the user asking for their permission to store essential cookies.\n  4. When user clicks a button (this is very crucial), call `Document.requestStorageAccess()` in the event handler. Depending on the browser implementation a pop-up might appear to the user from the browser itself asking the user whether they are willing to grant you access to the first-party storage or not.\n\n\n\n> Please note that the Storage Access API at the time of writing this article still considered as experimental.\n\nFor more information you can visit these references:\n\n  1. [Apple’s Webkit Storage Access API announcement](https://webkit.org/blog/8124/introducing-storage-access-api)\n  2. [Mozilla Storage Access API reference](https://developer.mozilla.org/en-US/docs/Web/API/Storage_Access_API)\n  3. [Google Chrome’s feature tracking](https://www.chromestatus.com/feature/5612590694662144)\n  4. [Apple’s ITP full third-party cookie blocking behaviour](https://webkit.org/blog/10218/full-third-party-cookie-blocking-and-more)\n  5. [Webkit engine’s recent update to Storage Access API](https://webkit.org/blog/11545/updates-to-the-storage-access-api)\n\n\n",
      "timestamp": "2025-06-23T15:18:24.313737"
    },
    {
      "url": "https://apaleo.dev/guides/pay-integration/overview.html",
      "title": "Overview | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Overview</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>apaleo Pay is the integrated process for guest payment collection. It centralizes the payment information from all multi-channel transactions to provide you with a guest-centered payment experience. From when guest books a hotel, when they grab a drink at the bar, to when they check out, all transactions are recorded in one place, easily manageable for everyone on staff.</p>\n<p>apaleo Pay automatically works with IBEs and OTAs to make sure you get your payments, regardless of how you choose to work with them: Hotel Collect, Virtual Cards, or OTA Payment Services.</p>\n<p>Before you start, we recommend checking out the <a href=\"https://apaleo.zendesk.com/hc/en-us/articles/4403043064978-apaleo-Pay-Adyen-setup-guide-for-hotels\">apaleo Pay guide</a>. Here’s how the pre-payment flow in apaleo Pay looks like:</p>\n<img src=\"/assets/images/pay/pay_overview.png\">\n</img></section>\n</main>",
      "markdown_content": "# Overview\n\napaleo Pay is the integrated process for guest payment collection. It centralizes the payment information from all multi-channel transactions to provide you with a guest-centered payment experience. From when guest books a hotel, when they grab a drink at the bar, to when they check out, all transactions are recorded in one place, easily manageable for everyone on staff.\n\napaleo Pay automatically works with IBEs and OTAs to make sure you get your payments, regardless of how you choose to work with them: Hotel Collect, Virtual Cards, or OTA Payment Services.\n\nBefore you start, we recommend checking out the [apaleo Pay guide](https://apaleo.zendesk.com/hc/en-us/articles/4403043064978-apaleo-Pay-Adyen-setup-guide-for-hotels). Here’s how the pre-payment flow in apaleo Pay looks like:\n\n![](/assets/images/pay/pay_overview.png)\n",
      "timestamp": "2025-06-23T15:18:25.026325"
    },
    {
      "url": "https://apaleo.dev/guides/pay-integration/setup.html",
      "title": "Setup and configuration | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Setup and configuration</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  2 minutes\n                                \n                            </p> -->\n<p>apaleo Pay enables automation of payment processing. It allows properties to work directly with apaleo Pay instead of payment processors and merchant acquirers, thus becoming a single point of contact for payment issues such as chargebacks or refunds.</p>\n<h2 id=\"configure-apaleo-pay-in-your-apaleo-account\">Configure apaleo Pay in your apaleo account</h2>\n<p>apaleo Pay test account is configured to your developer account by default, as shown below.</p>\n<img src=\"/assets/images/pay/pay_settings.png\">\n<h2 id=\"get-available-payment-methods\">Get available payment methods</h2>\n<p>You must get a list of the available payment methods that are available for the merchant account. From your server, make a <code>/paymentMethods</code> request as follows:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">curl</span><span class=\"w\"> </span><span class=\"err\">https://checkout-test.adyen.com/v</span><span class=\"mi\">69</span><span class=\"err\">/paymentMethods</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n</span><span class=\"err\">-H</span><span class=\"w\"> </span><span class=\"s2\">\"x-API-key: AQEshmfxLoLNaxZBw0m/n3Q5qf3VaZtMAZZFf2hU7t5zpA3osDxUhMnBXPo7mA8QwV1bDb7kfNy1WIxIIkxgBw==-QntgDhQ4FG0tGiMbnfX1KdPl6u4Fg/tHwAas6p5aJ8c=-L4KdmwfD7T6EKyNQ\"</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n</span><span class=\"err\">-H</span><span class=\"w\"> </span><span class=\"s2\">\"content-type: application/json\"</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\">\n</span><span class=\"err\">-d</span><span class=\"w\"> </span><span class=\"err\">'</span><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"merchantAccount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ApaleoGmbHCOM\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"err\">'</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>You will get a list of payment methods as follows:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"paymentMethods\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"w\">\n        </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"AliPay\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"alipay\"</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"AliPay\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"alipay_wap\"</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nl\">\"brands\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"amex\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"bcmc\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"diners\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"discover\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"maestro\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"mc\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"visa\"</span><span class=\"p\">],</span><span class=\"w\">\n        </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Credit Card\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"scheme\"</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nl\">\"brands\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"bcmc\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"maestro\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"visa\"</span><span class=\"p\">],</span><span class=\"w\">\n        </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Bancontact card\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"bcmc\"</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"err\">...........</span><span class=\"w\">\n                       </span><span class=\"err\">..........</span><span class=\"w\">\n</span><span class=\"err\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<p>The response includes the list of available <code>paymentMethods</code>. For each payment method, the response contains:</p>\n<ul>\n<li><code>name</code>: Name of the payment method, which you can display to your shopper in your payment form.</li>\n<li><code>type</code>: Unique payment method code. You’ll need to pass this when <a href=\"/guides/pay-integration/pre-auth\">making a payment request</a>.</li>\n</ul>\n<h2 id=\"add-drop-in-to-your-checkout-web-page\">Add Drop-in to your checkout web page</h2>\n<p>Next, <a href=\"https://docs.adyen.com/online-payments/build-your-integration/?platform=Web&amp;integration=Drop-in&amp;version=5.49.4\">integrate the web Drop-in</a> to show the available payment methods, and to collect payment details from the guest.</p>\n<blockquote>\n<p>Now, you are all set to begin your apaleo Pay integration. We would recommend you to test it thoroughly using our <a href=\"/guides/pay-integration/test-accounts\">test credentials</a> before you go live with any hotel. Also, you need to clear the <a href=\"/guides/apaleo-store/certify-your-app\">certification process</a>.</p>\n</blockquote>\n</img></section>\n</main>",
      "markdown_content": "# Setup and configuration\n\napaleo Pay enables automation of payment processing. It allows properties to work directly with apaleo Pay instead of payment processors and merchant acquirers, thus becoming a single point of contact for payment issues such as chargebacks or refunds.\n\n## Configure apaleo Pay in your apaleo account\n\napaleo Pay test account is configured to your developer account by default, as shown below.\n\n![](/assets/images/pay/pay_settings.png)\n\n## Get available payment methods\n\nYou must get a list of the available payment methods that are available for the merchant account. From your server, make a `/paymentMethods` request as follows:\n    \n    \n    curl https://checkout-test.adyen.com/v69/paymentMethods \\\n    -H \"x-API-key: AQEshmfxLoLNaxZBw0m/n3Q5qf3VaZtMAZZFf2hU7t5zpA3osDxUhMnBXPo7mA8QwV1bDb7kfNy1WIxIIkxgBw==-QntgDhQ4FG0tGiMbnfX1KdPl6u4Fg/tHwAas6p5aJ8c=-L4KdmwfD7T6EKyNQ\" \\\n    -H \"content-type: application/json\" \\\n    -d '{\n      \"merchantAccount\": \"ApaleoGmbHCOM\"\n    }'\n    \n\nYou will get a list of payment methods as follows:\n    \n    \n    {\n        \"paymentMethods\": [{\n            \"name\": \"AliPay\",\n            \"type\": \"alipay\"\n        }, {\n            \"name\": \"AliPay\",\n            \"type\": \"alipay_wap\"\n        }, {\n            \"brands\": [\"amex\", \"bcmc\", \"diners\", \"discover\", \"maestro\", \"mc\", \"visa\"],\n            \"name\": \"Credit Card\",\n            \"type\": \"scheme\"\n        }, {\n            \"brands\": [\"bcmc\", \"maestro\", \"visa\"],\n            \"name\": \"Bancontact card\",\n            \"type\": \"bcmc\"\n        }, ...........\n                           ..........\n    }\n    \n\nThe response includes the list of available `paymentMethods`. For each payment method, the response contains:\n\n  * `name`: Name of the payment method, which you can display to your shopper in your payment form.\n  * `type`: Unique payment method code. You’ll need to pass this when [making a payment request](/guides/pay-integration/pre-auth).\n\n\n\n## Add Drop-in to your checkout web page\n\nNext, [integrate the web Drop-in](https://docs.adyen.com/online-payments/build-your-integration/?platform=Web&integration=Drop-in&version=5.49.4) to show the available payment methods, and to collect payment details from the guest.\n\n> Now, you are all set to begin your apaleo Pay integration. We would recommend you to test it thoroughly using our [test credentials](/guides/pay-integration/test-accounts) before you go live with any hotel. Also, you need to clear the [certification process](/guides/apaleo-store/certify-your-app).\n",
      "timestamp": "2025-06-23T15:18:25.732832"
    },
    {
      "url": "https://apaleo.dev/guides/pay-integration/test-accounts.html",
      "title": "Test Apaleo Pay integration | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Test Apaleo Pay integration</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  2 minutes\n                                \n                            </p> -->\n<p>Apaleo Pay test mode allows you to process transactions and simulate different payment responses using the <a href=\"https://docs.adyen.com/development-resources/test-cards/test-card-numbers\">test card numbers</a> that are provided by Adyen.</p>\n<p>To test apaleo payments in your developer account, you need the following information:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Field</th>\n<th align=\"left\">Description</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Merchant Account</td>\n<td align=\"left\">The company-level merchant account. It shows information for all your merchant accounts.</td>\n<td>ApaleoGmbHCOM</td>\n</tr>\n<tr>\n<td align=\"left\">Sub-merchant ID</td>\n<td align=\"left\">Merchant-level sub-accounts detail specific settings for each merchant. It only shows you payments for the currently selected merchant account.</td>\n<td>CWWVG78PRG8AWNK</td>\n</tr>\n<tr>\n<td align=\"left\">Checkout URL Endpoint</td>\n<td align=\"left\">The test checkout URL endpoint. The format is <code>https://checkout-test.adyen.com/[version]/[method]</code></td>\n<td><a href=\"https://checkout-test.adyen.com/checkout/V52/payments\">https://checkout-test.adyen.com/checkout/V52/payments</a></td>\n</tr>\n<tr>\n<td align=\"left\">API Key</td>\n<td align=\"left\">An API Key is what Adyen uses to authenticate API requests from your account.</td>\n<td><code>AQEshmfxLoLNaxZBw0m/n3Q5qf3VaZtMAZZFf2hU7t5zpA3osDxUhMnBXPo7mA8QwV1bDb7kfNy1WIxIIkxgBw==-QntgDhQ4FG0tGiMbnfX1KdPl6u4Fg/tHwAas6p5aJ8c=-L4KdmwfD7T6EKyNQ</code></td>\n</tr>\n<tr>\n<td align=\"left\">Allowed Origins</td>\n<td align=\"left\">Allowed origins are domains from which we expect to get your client-side requests. It can have HTTP in the test environment, for example, <a href=\"http://localhost:8080\">http://localhost:8080</a>, but must have HTTPS in the live environment. If you are not using this URL, then send us an email to us at <a href=\"mailto:support@apaleo.com\">support@apaleo.com</a> containing your URL.</td>\n<td><a href=\"http://localhost:8080\">http://localhost:8080</a></td>\n</tr>\n<tr>\n<td align=\"left\">Client Key</td>\n<td align=\"left\">The client key is a public key that uniquely identifies a web service user. If you are using <a href=\"http://localhost:8080\">http://localhost:8080</a> as your origin, then use the key that is provided here.</td>\n<td><code>test_MW2GQ44S2VGYXNSZDK52HLAZTIW73AQB</code></td>\n</tr>\n<tr>\n<td align=\"left\">Web Service User</td>\n<td align=\"left\">The web service user in the format ws@Company.[YourCompanyAccount].</td>\n<td><code>ws_183033@Company.ApaleoGmbH</code></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"test-credit-cards\">Test credit cards</h3>\n<p>Adyen provides an always up to date list of <a href=\"https://docs.adyen.com/developers/test-cards/test-card-numbers\">test credit cards</a> on their website.</p>\n<ul>\n<li>Use this for testing with CVC: 4111 1111 1111 1111 (CVC: 737) - Expiry 03/2030</li>\n<li>Use this for testing without CVC: 4111 1111 4555 1142 - Expiry 03/2030</li>\n</ul>\n<h3 id=\"what-to-test\">What to test</h3>\n<ul>\n<li>Add a payment account to a reservation or booking.</li>\n<li>Trigger a payment for a reservation folio using the payment account stored on the reservation.</li>\n<li>Make a prepay booking through the IBE and see that the payment account is stored on the reservation, and the prepay amount is automatically captured.</li>\n<li>If possible, create one flexible booking from booking.com or Expedia and see that the tokenized card is visible as a payment account on the reservation.</li>\n</ul>\n</section>\n</main>",
      "markdown_content": "# Test Apaleo Pay integration\n\nApaleo Pay test mode allows you to process transactions and simulate different payment responses using the [test card numbers](https://docs.adyen.com/development-resources/test-cards/test-card-numbers) that are provided by Adyen.\n\nTo test apaleo payments in your developer account, you need the following information:\n\nField | Description | Value  \n---|---|---  \nMerchant Account | The company-level merchant account. It shows information for all your merchant accounts. | ApaleoGmbHCOM  \nSub-merchant ID | Merchant-level sub-accounts detail specific settings for each merchant. It only shows you payments for the currently selected merchant account. | CWWVG78PRG8AWNK  \nCheckout URL Endpoint | The test checkout URL endpoint. The format is `https://checkout-test.adyen.com/[version]/[method]` | <https://checkout-test.adyen.com/checkout/V52/payments>  \nAPI Key | An API Key is what Adyen uses to authenticate API requests from your account. | `AQEshmfxLoLNaxZBw0m/n3Q5qf3VaZtMAZZFf2hU7t5zpA3osDxUhMnBXPo7mA8QwV1bDb7kfNy1WIxIIkxgBw==-QntgDhQ4FG0tGiMbnfX1KdPl6u4Fg/tHwAas6p5aJ8c=-L4KdmwfD7T6EKyNQ`  \nAllowed Origins | Allowed origins are domains from which we expect to get your client-side requests. It can have HTTP in the test environment, for example, <http://localhost:8080>, but must have HTTPS in the live environment. If you are not using this URL, then send us an email to us at [support@apaleo.com](mailto:support@apaleo.com) containing your URL. | <http://localhost:8080>  \nClient Key | The client key is a public key that uniquely identifies a web service user. If you are using <http://localhost:8080> as your origin, then use the key that is provided here. | `test_MW2GQ44S2VGYXNSZDK52HLAZTIW73AQB`  \nWeb Service User | The web service user in the format ws@Company.[YourCompanyAccount]. | `ws_183033@Company.ApaleoGmbH`  \n  \n### Test credit cards\n\nAdyen provides an always up to date list of [test credit cards](https://docs.adyen.com/developers/test-cards/test-card-numbers) on their website.\n\n  * Use this for testing with CVC: 4111 1111 1111 1111 (CVC: 737) - Expiry 03/2030\n  * Use this for testing without CVC: 4111 1111 4555 1142 - Expiry 03/2030\n\n\n\n### What to test\n\n  * Add a payment account to a reservation or booking.\n  * Trigger a payment for a reservation folio using the payment account stored on the reservation.\n  * Make a prepay booking through the IBE and see that the payment account is stored on the reservation, and the prepay amount is automatically captured.\n  * If possible, create one flexible booking from booking.com or Expedia and see that the tokenized card is visible as a payment account on the reservation.\n\n\n",
      "timestamp": "2025-06-23T15:18:26.443704"
    },
    {
      "url": "https://apaleo.dev/guides/pay-integration/go-live.html",
      "title": "Go live with apaleo Pay | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Go live with apaleo Pay</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>When you test your integration using the test account, you can start your application for a live account. To get credentials for live apaleo Pay integration, send an email to <a href=\"mailto:support@apaleo.com\">support@apaleo.com</a> containing your origins, and we’ll send you the following details:</p>\n<ul>\n<li>Merchant account per property</li>\n<li>Sub-merchant id per property</li>\n<li>URL prefix per account</li>\n<li>API key per account</li>\n<li>Client key per account</li>\n</ul>\n<p>When you are live, the live mode is enabled as follows:</p>\n<img src=\"/assets/images/pay/live_settings.png\">\n<p>Once you have the credentials for your apaleo Pay live account, ensure that you make the necessary changes from test configuration to live configuration in your integration.</p>\n</img></section>\n</main>",
      "markdown_content": "# Go live with apaleo Pay\n\nWhen you test your integration using the test account, you can start your application for a live account. To get credentials for live apaleo Pay integration, send an email to [support@apaleo.com](mailto:support@apaleo.com) containing your origins, and we’ll send you the following details:\n\n  * Merchant account per property\n  * Sub-merchant id per property\n  * URL prefix per account\n  * API key per account\n  * Client key per account\n\n\n\nWhen you are live, the live mode is enabled as follows:\n\n![](/assets/images/pay/live_settings.png)\n\nOnce you have the credentials for your apaleo Pay live account, ensure that you make the necessary changes from test configuration to live configuration in your integration.\n",
      "timestamp": "2025-06-23T15:18:27.137421"
    },
    {
      "url": "https://apaleo.dev/guides/pay-integration/pre-auth.html",
      "title": "Make a payment | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Make a payment</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  5 minutes\n                                \n                            </p> -->\n<p>After the guest selects the Pay button on the Adyen drop-in component or chooses to pay with a payment method that requires redirection, you need to make a <a href=\"https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments\">/payments</a> request. But before you do that, you need to tokenize the guest’s card details for Payment Card Industry (<a href=\"https://docs.adyen.com/development-resources/pci-dss-compliance-guide\">PCI</a>) compliance.</p>\n<h2 id=\"authorize-payments\">Authorize payments</h2>\n<p>Once you create an authorization, you can use the reference to the authorized transaction for 2 hours to send it in as <code>transactionReference</code> with a booking or use it to post the full or partial amounts on a reservation folio by using <code>POST /finance/v1/folios/{folioId}/payments/by-authorization</code> on the <a href=\"https://api.apaleo.com/swagger/index.html?urls.primaryName=Finance%20V1\">Finance API</a>. The flow type has to be set to <code>captureOnly</code>.</p>\n<p>We’ll put this authorization into the queue waiting for the respective booking to be created.</p>\n<p>As soon as the booking is created, provided it has a <code>transactionReference</code>, we capture an amount for each reservation and commit payments. The amount depends on whether <code>prePayment</code> is specified in the booking: if yes, the prepayment amount is captured; else, the full amount chargeable on the reservation is captured.</p>\n<p>In cases where the <code>transactionReference</code> is missing, what will be captured depends on the prepayment automation configured in the property, as well as on the guarantee type of the rate plan.\nIf we do not receive a booking for the authorization within two hours, we will automatically cancel the authorization to unblock the money (or refund if it is an auto-capture payment menthod).</p>\n<p><strong>Note:</strong> In multi-reservation booking where each reservation paymnet is separately captured, make sure to set <code>additionalData.authorisationType:PreAuth</code> and not “FinalAuth”.</p>\n<blockquote>\n<p>You must set the <a href=\"https://docs.adyen.com/api-explorer/#/PaymentSetupAndVerificationService/v50/payments__reqParam_deliveryDate\"><code>deliveryDate</code></a> to the earliest arrival of all reservations in the booking so that the payment processor can calculate the potential exposure to chargebacks regarding prepaid reservations correctly and hold back sufficient funds to cover this risk.</p>\n</blockquote>\n<p>If you want to make a booking with rooms from different properties, you can still only send one apaleo property ID. You could take the ID for the property that has the most significant portion of rooms or revenues in the whole booking. The money will be paid out to the bank account of this property then.</p>\n<h2 id=\"tokenize-a-payment-account\">Tokenize a payment account</h2>\n<p>Tokenization takes on the burden of securely managing cardholder data, thus reducing the costs of meeting and monitoring Payment Card Industry (<a href=\"https://docs.adyen.com/development-resources/pci-dss-compliance-guide\">PCI</a>) compliance. A token is created after a successful payment authorization to ensure that the guest’s payment details are linked to an active, chargeable account.</p>\n<h2 id=\"create-a-token-and-make-the-payment\">Create a token and make the payment</h2>\n<p>When the shopper selects to pay, Drop-in calls the <code>onSubmit</code> event, which contains a <code>state.data</code>.</p>\n<ol>\n<li>Pass the <code>state.data</code> to your server.</li>\n<li>From your server, make a <a href=\"https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments\">/payments</a> request, specifying:\n<ul>\n<li><code>paymentMethod</code>: The <code>state.data.paymentMethod</code> from the <code>onSubmit</code> event.</li>\n</ul>\n</li>\n</ol>\n<pre><code>curl https://checkout-test.adyen.com/v67/payments \\\n-H \"X-API-key: [Your API Key here]\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\n   \"amount\": {\n    \"currency\": \"EUR\",\n    \"value\": 0\n   },\n   \"paymentMethod\":{\n      \"type\":\"scheme\",\n      \"encryptedCardNumber\": \"adyenjs_0_1_18$MT6ppy0FAMVMLH...\",\n      \"encryptedExpiryMonth\": \"adyenjs_0_1_18$MT6ppy0FAMVMLH...\",\n      \"encryptedExpiryYear\": \"adyenjs_0_1_18$MT6ppy0FAMVMLH...\",\n      \"encryptedSecurityCode\": \"adyenjs_0_1_18$MT6ppy0FAMVMLH...\",\n      \"holderName\":\"John Smith\"\n   },\n  \"deliveryDate\": \"2021-08-17T16:00:00.000+01:00\",\n  \"enableOneClick\": false,\n  \"enableRecurring\": true,\n  \"shopperReference\": \"575b0100-b261-4a36-94cb-eeb49f7c98d3\",\n  \"shopperInteraction\": \"Ecommerce\",\n  \"recurringProcessingModel\": \"UnscheduledCardOnFile\",\n  \"additionalData\": {\n    \"metadata.flowType\": \"CaptureOnly\",\n    \"metadata.accountId\": \"DEMO\", // The apaleo account id\n    \"metadata.propertyId\": \"MUC\", // The apaleo property id\n    \"subMerchantID\": \"48C27Z5QRX3QJBM\" // The sub-merchant id\n  },\n  \"returnUrl\": \"https://your-company.com/checkout?shopperOrder=12xy..\",\n  \"merchantAccount\": \"ApaleoGmbHCOM\"\n}'\n</code></pre>\n<p>The <a href=\"https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments\">/payments</a> response contains:</p>\n<ul>\n<li><a href=\"https://docs.adyen.com/api-explorer/#/CheckoutService/latest/payments__resParam_pspReference\">pspReference</a>: Our unique identifier for the transaction.</li>\n<li><code>resultCode</code>: Use this to <a href=\"https://docs.adyen.com/payment-methods/cards/web-drop-in#present-the-payment-result\">present the payment result to your shopper</a>.</li>\n<li><code>merchantReference</code>: The <code>reference</code> from the <a href=\"https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments\">/payments</a> request.</li>\n<li><code>additionalData</code>: Additional information about the transaction.</li>\n</ul>\n<p>After you’ve made the payment request to Adyen, you will receive a response that looks similar to the following:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"additionalData\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"expiryDate\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"9/2022\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"cvcResult\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"0 Unknown\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"authCode\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"084985\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"avsResult\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"0 Unknown\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"cardHolderName\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Expedia VirtualCard\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"cardSummary\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"0211\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"paymentMethod\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"mc\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"refusalReasonRaw\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"00 : Approved or completed successfully\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"acquirerCode\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"AdyenMasterCard_13445\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"acquirerReference\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"927513404474\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"recurring.recurringDetailReference\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"8415689021960227\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"recurringProcessingModel\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"UnscheduledCardOnFile\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"recurring.shopperReference\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"575b0100-b261-4a36-94cb-eeb49f7c98d3\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"pspReference\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"851570021506441J\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"resultCode\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Authorised\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"merchantReference\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"YOUR_ORDER_NUMBER_Hsz7365uehhgGFFS\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<h2 id=\"handle-the-redirect-3d-secure\">Handle the redirect (3D secure)</h2>\n<p>The following example shows a <a href=\"https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments\">/payments</a> response with <code>action.type</code>: <strong>redirect</strong>.</p>\n<pre><code>     {\n       \"resultCode\": \"RedirectShopper\",\n       \"action\": {\n         \"paymentMethodType\": \"scheme\",\n         \"url\": \"https://test.adyen.com/hpp/3d/validate.shtml\",\n         \"data\": {\n           \"MD\": \"OEVudmZVMUlkWjd0MDNwUWs2bmhSdz09...\",\n           \"PaReq\": \"eNpVUttygjAQ/RXbDyAXBYRZ00HpTH3wUosPfe...\",\n           \"TermUrl\": \"https://example.com/checkout?shopperOrder=12xy...\"\n         },\n         \"method\": \"POST\",\n         \"type\": \"redirect\"\n       }\n     }\n</code></pre>\n<h3 id=\"handle-the-redirect-result\">Handle the redirect result</h3>\n<p>When the shopper completes authentication, the payment is authorized. The shopper is redirected back to the <code>returnUrl</code> from your <a href=\"https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments\">/payments</a> request. The redirect is via an HTTP GET and is appended with the Base64-encoded <code>redirectResult</code>.</p>\n<p>Verify the payment result, make another API request with the <code>redirectResult</code> parameter:</p>\n<ol>\n<li>URL-decode the <code>redirectResult</code>, and pass it to your server.</li>\n<li>From your server, make a <a href=\"https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/details\">/payments/details</a> request specifying:\n<ul>\n<li><code>details</code>: Object that contains the decoded <code>redirectResult</code>.</li>\n</ul>\n</li>\n</ol>\n<pre><code> curl https://checkout-test.adyen.com/v67/payments/details \\\n -H \"x-API-key: YOUR_X-API-KEY\" \\\n -H \"content-type: application/json\" \\\n -d '{\n      \"details\": {\n        \"redirectResult\": \"eyJ0cmFuc1N0YXR1cyI6IlkifQ==\"\n    }\n }\n</code></pre>\n<p>The <a href=\"https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/details\">/payments/details</a> response contains:</p>\n<ul>\n<li><code>resultCode</code>: Use this to <a href=\"https://docs.adyen.com/online-payments/3d-secure/redirect-3ds2-3ds1/web-drop-in#present-the-payment-result\">present the result to your shopper</a>.</li>\n<li><code>pspReference</code>: Our unique identifier for the transaction.</li>\n</ul>\n<pre><code>    {\n     \"resultCode\": \"Authorised\",\n     \"pspReference\": \"88154795347618C\"\n   }\n</code></pre>\n<blockquote>\n<p>Result codes allow you to understand the current state of a payment. For more information, see <a href=\"https://docs.adyen.com/online-payments/payment-result-codes\">result codes</a>.</p>\n</blockquote>\n<blockquote>\n<p>To get additional details about a payment transaction, see <a href=\"/guides/business-cases/pay-integration/psp-reference\">Read transaction details (PSP)</a> and  <a href=\"/guides/business-cases/pay-integration/transaction\">Read transaction details (merchant reference)</a>.</p>\n</blockquote>\n</section>\n</main>",
      "markdown_content": "# Make a payment\n\nAfter the guest selects the Pay button on the Adyen drop-in component or chooses to pay with a payment method that requires redirection, you need to make a [/payments](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments) request. But before you do that, you need to tokenize the guest’s card details for Payment Card Industry ([PCI](https://docs.adyen.com/development-resources/pci-dss-compliance-guide)) compliance.\n\n## Authorize payments\n\nOnce you create an authorization, you can use the reference to the authorized transaction for 2 hours to send it in as `transactionReference` with a booking or use it to post the full or partial amounts on a reservation folio by using `POST /finance/v1/folios/{folioId}/payments/by-authorization` on the [Finance API](https://api.apaleo.com/swagger/index.html?urls.primaryName=Finance%20V1). The flow type has to be set to `captureOnly`.\n\nWe’ll put this authorization into the queue waiting for the respective booking to be created.\n\nAs soon as the booking is created, provided it has a `transactionReference`, we capture an amount for each reservation and commit payments. The amount depends on whether `prePayment` is specified in the booking: if yes, the prepayment amount is captured; else, the full amount chargeable on the reservation is captured.\n\nIn cases where the `transactionReference` is missing, what will be captured depends on the prepayment automation configured in the property, as well as on the guarantee type of the rate plan. If we do not receive a booking for the authorization within two hours, we will automatically cancel the authorization to unblock the money (or refund if it is an auto-capture payment menthod).\n\n**Note:** In multi-reservation booking where each reservation paymnet is separately captured, make sure to set `additionalData.authorisationType:PreAuth` and not “FinalAuth”.\n\n> You must set the [`deliveryDate`](https://docs.adyen.com/api-explorer/#/PaymentSetupAndVerificationService/v50/payments__reqParam_deliveryDate) to the earliest arrival of all reservations in the booking so that the payment processor can calculate the potential exposure to chargebacks regarding prepaid reservations correctly and hold back sufficient funds to cover this risk.\n\nIf you want to make a booking with rooms from different properties, you can still only send one apaleo property ID. You could take the ID for the property that has the most significant portion of rooms or revenues in the whole booking. The money will be paid out to the bank account of this property then.\n\n## Tokenize a payment account\n\nTokenization takes on the burden of securely managing cardholder data, thus reducing the costs of meeting and monitoring Payment Card Industry ([PCI](https://docs.adyen.com/development-resources/pci-dss-compliance-guide)) compliance. A token is created after a successful payment authorization to ensure that the guest’s payment details are linked to an active, chargeable account.\n\n## Create a token and make the payment\n\nWhen the shopper selects to pay, Drop-in calls the `onSubmit` event, which contains a `state.data`.\n\n  1. Pass the `state.data` to your server.\n  2. From your server, make a [/payments](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments) request, specifying: \n     * `paymentMethod`: The `state.data.paymentMethod` from the `onSubmit` event.\n\n\n    \n    \n    curl https://checkout-test.adyen.com/v67/payments \\\n    -H \"X-API-key: [Your API Key here]\" \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\n       \"amount\": {\n        \"currency\": \"EUR\",\n        \"value\": 0\n       },\n       \"paymentMethod\":{\n          \"type\":\"scheme\",\n          \"encryptedCardNumber\": \"adyenjs_0_1_18$MT6ppy0FAMVMLH...\",\n          \"encryptedExpiryMonth\": \"adyenjs_0_1_18$MT6ppy0FAMVMLH...\",\n          \"encryptedExpiryYear\": \"adyenjs_0_1_18$MT6ppy0FAMVMLH...\",\n          \"encryptedSecurityCode\": \"adyenjs_0_1_18$MT6ppy0FAMVMLH...\",\n          \"holderName\":\"John Smith\"\n       },\n      \"deliveryDate\": \"2021-08-17T16:00:00.000+01:00\",\n      \"enableOneClick\": false,\n      \"enableRecurring\": true,\n      \"shopperReference\": \"575b0100-b261-4a36-94cb-eeb49f7c98d3\",\n      \"shopperInteraction\": \"Ecommerce\",\n      \"recurringProcessingModel\": \"UnscheduledCardOnFile\",\n      \"additionalData\": {\n        \"metadata.flowType\": \"CaptureOnly\",\n        \"metadata.accountId\": \"DEMO\", // The apaleo account id\n        \"metadata.propertyId\": \"MUC\", // The apaleo property id\n        \"subMerchantID\": \"48C27Z5QRX3QJBM\" // The sub-merchant id\n      },\n      \"returnUrl\": \"https://your-company.com/checkout?shopperOrder=12xy..\",\n      \"merchantAccount\": \"ApaleoGmbHCOM\"\n    }'\n    \n\nThe [/payments](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments) response contains:\n\n  * [pspReference](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/payments__resParam_pspReference): Our unique identifier for the transaction.\n  * `resultCode`: Use this to [present the payment result to your shopper](https://docs.adyen.com/payment-methods/cards/web-drop-in#present-the-payment-result).\n  * `merchantReference`: The `reference` from the [/payments](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments) request.\n  * `additionalData`: Additional information about the transaction.\n\n\n\nAfter you’ve made the payment request to Adyen, you will receive a response that looks similar to the following:\n    \n    \n    {\n      \"additionalData\": {\n        \"expiryDate\": \"9/2022\",\n        \"cvcResult\": \"0 Unknown\",\n        \"authCode\": \"084985\",\n        \"avsResult\": \"0 Unknown\",\n        \"cardHolderName\": \"Expedia VirtualCard\",\n        \"cardSummary\": \"0211\",\n        \"paymentMethod\": \"mc\",\n        \"refusalReasonRaw\": \"00 : Approved or completed successfully\",\n        \"acquirerCode\": \"AdyenMasterCard_13445\",\n        \"acquirerReference\": \"927513404474\",\n        \"recurring.recurringDetailReference\": \"8415689021960227\",\n        \"recurringProcessingModel\": \"UnscheduledCardOnFile\",\n        \"recurring.shopperReference\": \"575b0100-b261-4a36-94cb-eeb49f7c98d3\"\n      },\n      \"pspReference\": \"851570021506441J\",\n      \"resultCode\": \"Authorised\",\n      \"merchantReference\": \"YOUR_ORDER_NUMBER_Hsz7365uehhgGFFS\"\n    }\n    \n\n## Handle the redirect (3D secure)\n\nThe following example shows a [/payments](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments) response with `action.type`: **redirect**.\n    \n    \n         {\n           \"resultCode\": \"RedirectShopper\",\n           \"action\": {\n             \"paymentMethodType\": \"scheme\",\n             \"url\": \"https://test.adyen.com/hpp/3d/validate.shtml\",\n             \"data\": {\n               \"MD\": \"OEVudmZVMUlkWjd0MDNwUWs2bmhSdz09...\",\n               \"PaReq\": \"eNpVUttygjAQ/RXbDyAXBYRZ00HpTH3wUosPfe...\",\n               \"TermUrl\": \"https://example.com/checkout?shopperOrder=12xy...\"\n             },\n             \"method\": \"POST\",\n             \"type\": \"redirect\"\n           }\n         }\n    \n\n### Handle the redirect result\n\nWhen the shopper completes authentication, the payment is authorized. The shopper is redirected back to the `returnUrl` from your [/payments](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments) request. The redirect is via an HTTP GET and is appended with the Base64-encoded `redirectResult`.\n\nVerify the payment result, make another API request with the `redirectResult` parameter:\n\n  1. URL-decode the `redirectResult`, and pass it to your server.\n  2. From your server, make a [/payments/details](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/details) request specifying: \n     * `details`: Object that contains the decoded `redirectResult`.\n\n\n    \n    \n     curl https://checkout-test.adyen.com/v67/payments/details \\\n     -H \"x-API-key: YOUR_X-API-KEY\" \\\n     -H \"content-type: application/json\" \\\n     -d '{\n          \"details\": {\n            \"redirectResult\": \"eyJ0cmFuc1N0YXR1cyI6IlkifQ==\"\n        }\n     }\n    \n\nThe [/payments/details](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments/details) response contains:\n\n  * `resultCode`: Use this to [present the result to your shopper](https://docs.adyen.com/online-payments/3d-secure/redirect-3ds2-3ds1/web-drop-in#present-the-payment-result).\n  * `pspReference`: Our unique identifier for the transaction.\n\n\n    \n    \n        {\n         \"resultCode\": \"Authorised\",\n         \"pspReference\": \"88154795347618C\"\n       }\n    \n\n> Result codes allow you to understand the current state of a payment. For more information, see [result codes](https://docs.adyen.com/online-payments/payment-result-codes).\n\n> To get additional details about a payment transaction, see [Read transaction details (PSP)](/guides/business-cases/pay-integration/psp-reference) and [Read transaction details (merchant reference)](/guides/business-cases/pay-integration/transaction).\n",
      "timestamp": "2025-06-23T15:18:27.859545"
    },
    {
      "url": "https://apaleo.dev/guides/pay-integration/pos-payment.html",
      "title": "Terminal payments | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Terminal payments</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  2 minutes\n                                \n                            </p> -->\n<p>In-person payments can be pre-authorized on a POS terminal. The terminal must first be setup and configured for the property.</p>\n<p>To initiate a pre-authorization on a POS terminal you can call the following API endpoint:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">POST</span><span class=\"w\"> </span><span class=\"err\">https://payment.apaleo.com/payment/v</span><span class=\"mi\">1</span><span class=\"err\">/payment-transactions/by-terminal?flow=AutoExpire</span><span class=\"w\">\n</span></code></pre></div></div>\n<p><strong>Example</strong></p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"propertyId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"MUC\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"terminalId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"P400Plus-27545332\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"currency\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"EUR\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">680</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"merchantReference\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"864c3b9e-4820-407b-a31e-6713f5effcb3\"</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<h2 id=\"autoexpire---limited-validity\">AutoExpire - Limited validity</h2>\n<p>AutoExpire authorizations are only valid a limit period, minimum 2 hours, and will automatically expire and be cancelled.</p>\n<h2 id=\"post-payments-by-authorization\">Post payments by authorization</h2>\n<p>Captures a specific amount from a pre-authorization and posts it to the folio. It can be used to pre-authorize a POS purchase, or even a reservation done in a walk-in POS kiosk. It can also be used to post a booking payment when the reservation is created. It allows you to implement your own prepayment automation.</p>\n<p>The payment will be processed asynchronously. Use the location header to poll for the status of the payment. As long as payment is pending, it reduces the number of allowed payments for the folio. The payment automatically times out after 60 minutes.</p>\n<p>You can capture a specific amount from a pre-authorization and post it to a guest or external folio by using the following API endpoint:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">POST</span><span class=\"w\"> </span><span class=\"err\">/finance/v</span><span class=\"mi\">1</span><span class=\"err\">/folios/</span><span class=\"p\">{</span><span class=\"err\">folioId</span><span class=\"p\">}</span><span class=\"err\">/payments/by-authorization</span><span class=\"w\">\n</span></code></pre></div></div>\n<p><strong>Example</strong></p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"transactionReference\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"564578124534890J\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">330</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"currency\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"EUR\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"paidCharges\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"chargeId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"BLIPKWXP-1-1-1\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">230</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<h2 id=\"multiple-payments-for-the-same-authorization\">Multiple payments for the same authorization</h2>\n<p>It is possible to pre-authorize an amount that is then distributed into separate payments and posted via <code>by-authorization</code> on the same or different folios.</p>\n</section>\n</main>",
      "markdown_content": "# Terminal payments\n\nIn-person payments can be pre-authorized on a POS terminal. The terminal must first be setup and configured for the property.\n\nTo initiate a pre-authorization on a POS terminal you can call the following API endpoint:\n    \n    \n    POST https://payment.apaleo.com/payment/v1/payment-transactions/by-terminal?flow=AutoExpire\n    \n\n**Example**\n    \n    \n    {\n      \"propertyId\": \"MUC\",\n      \"terminalId\": \"P400Plus-27545332\",\n      \"amount\": {\n        \"currency\": \"EUR\",\n        \"value\": 680\n      },\n      \"merchantReference\": \"864c3b9e-4820-407b-a31e-6713f5effcb3\"\n    }\n    \n\n## AutoExpire - Limited validity\n\nAutoExpire authorizations are only valid a limit period, minimum 2 hours, and will automatically expire and be cancelled.\n\n## Post payments by authorization\n\nCaptures a specific amount from a pre-authorization and posts it to the folio. It can be used to pre-authorize a POS purchase, or even a reservation done in a walk-in POS kiosk. It can also be used to post a booking payment when the reservation is created. It allows you to implement your own prepayment automation.\n\nThe payment will be processed asynchronously. Use the location header to poll for the status of the payment. As long as payment is pending, it reduces the number of allowed payments for the folio. The payment automatically times out after 60 minutes.\n\nYou can capture a specific amount from a pre-authorization and post it to a guest or external folio by using the following API endpoint:\n    \n    \n    POST /finance/v1/folios/{folioId}/payments/by-authorization\n    \n\n**Example**\n    \n    \n    {\n      \"transactionReference\": \"564578124534890J\",\n      \"amount\": {\n        \"amount\": 330,\n        \"currency\": \"EUR\"\n      },\n      \"paidCharges\": [\n        {\n          \"chargeId\": \"BLIPKWXP-1-1-1\",\n          \"amount\": 230\n        }\n      ]\n    }\n    \n\n## Multiple payments for the same authorization\n\nIt is possible to pre-authorize an amount that is then distributed into separate payments and posted via `by-authorization` on the same or different folios.\n",
      "timestamp": "2025-06-23T15:18:28.595600"
    },
    {
      "url": "https://apaleo.dev/guides/pay-integration/payment.html",
      "title": "Accept payments | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Accept payments</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>Depending on the reservation’s guarantee types in your basket, you should run the booker through the following flows.</p>\n<ul>\n<li>For <code>PM6Hold</code>, you should not ask for a credit card and only allow the booker to put a credit card on file to guarantee the booking for later than 6 pm on the day of arrival. In this case, you can collect payment upon check-in or check-out for reservations.</li>\n<li>For a <code>CreditCard</code> booking, you should at least authorize a zero amount and store the payment account with the booking. In this case, you can collect payment upon check-in or check-out for reservations.</li>\n<li>For <code>Prepayment</code>, you would need to authorize the prepayment amount and forward the reference to the transaction to apaleo together with the payment account. With this option, reservations with the guarantee type <code>Prepayment</code> are charged once the reservation has been created.</li>\n</ul>\n<p>Using <a href=\"https://docs.adyen.com/checkout/drop-in-web\">Adyen’s Drop-in technology</a>, it is really simple to authorize the above-calculated prepayment amount. Hotels can even use the credit card later for merchant-initiated transactions when you set the parameters <code>shopperReference</code>, <code>shopperInteraction</code> and <code>recurringProcessingModel</code> . When <a href=\"https://docs.adyen.com/online-payments/drop-in-web#step-2-add-drop-in\">adding your web drop-in payment form</a>, please ensure to suppress the openinvoice payment methods by setting the property <code>removePaymentMethods</code> to the following list: “klarna_paynow”, “klarna”, “klarna_b2b”, “klarna_account”, “ratepay”, “ratepay_directdebit”, “afterpaytouch”, “afterpay_default”, “afterpay_directdebit”, “afterpay_b2b”, “facilypay_3x”, “facilypay_4x”, “facilypay_6x”, “facilypay_10x”, “facilypay_12x”</p>\n<blockquote>\n<p>It is essential to set all the metadata in the <code>additionalData</code> to ensure that apaleo can finalize the transaction correctly. To avoid conflicts, the <code>shopperReference</code> must be a UUID or a GUID.</p>\n</blockquote>\n<blockquote>\n<p>You must send <code>subMerchantID</code>. It has to be part of the payment configuration.</p>\n</blockquote>\n</section>\n</main>",
      "markdown_content": "# Accept payments\n\nDepending on the reservation’s guarantee types in your basket, you should run the booker through the following flows.\n\n  * For `PM6Hold`, you should not ask for a credit card and only allow the booker to put a credit card on file to guarantee the booking for later than 6 pm on the day of arrival. In this case, you can collect payment upon check-in or check-out for reservations.\n  * For a `CreditCard` booking, you should at least authorize a zero amount and store the payment account with the booking. In this case, you can collect payment upon check-in or check-out for reservations.\n  * For `Prepayment`, you would need to authorize the prepayment amount and forward the reference to the transaction to apaleo together with the payment account. With this option, reservations with the guarantee type `Prepayment` are charged once the reservation has been created.\n\n\n\nUsing [Adyen’s Drop-in technology](https://docs.adyen.com/checkout/drop-in-web), it is really simple to authorize the above-calculated prepayment amount. Hotels can even use the credit card later for merchant-initiated transactions when you set the parameters `shopperReference`, `shopperInteraction` and `recurringProcessingModel` . When [adding your web drop-in payment form](https://docs.adyen.com/online-payments/drop-in-web#step-2-add-drop-in), please ensure to suppress the openinvoice payment methods by setting the property `removePaymentMethods` to the following list: “klarna_paynow”, “klarna”, “klarna_b2b”, “klarna_account”, “ratepay”, “ratepay_directdebit”, “afterpaytouch”, “afterpay_default”, “afterpay_directdebit”, “afterpay_b2b”, “facilypay_3x”, “facilypay_4x”, “facilypay_6x”, “facilypay_10x”, “facilypay_12x”\n\n> It is essential to set all the metadata in the `additionalData` to ensure that apaleo can finalize the transaction correctly. To avoid conflicts, the `shopperReference` must be a UUID or a GUID.\n\n> You must send `subMerchantID`. It has to be part of the payment configuration.\n",
      "timestamp": "2025-06-23T15:18:29.300221"
    },
    {
      "url": "https://apaleo.dev/guides/pay-integration/pay-by-link.html",
      "title": "Pay by link | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Pay by link</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>With pay by link, you can accept payments using a payment link. The link takes your guest to a secure Adyen payment page where they can pay with their <a href=\"https://docs.adyen.com/online-payments/supported-payment-methods\">preferred payment method</a>. The payment page works across different devices and can be customized with hotel’s brand name and logo.</p>\n<p>When the guest opens the link in a browser, the payment form will be rendered, showing the payment methods depending on the payment methods activated for hotel’s account and the shopper country you defined. After the guest paid on the payment form, the payment will get committed on the folio.</p>\n<p><img alt=\"mceclip1.png\" src=\"https://apaleo.zendesk.com/hc/article_attachments/360011947759/mceclip1.png\"/></p>\n<p>For more information on payment link customization, please see <a href=\"https://apaleo.zendesk.com/hc/en-us/articles/360022147060-How-to-customize-your-Payment-Link-landing-page\">How to customize your Payment Link landing page</a>.</p>\n</section>\n</main>",
      "markdown_content": "# Pay by link\n\nWith pay by link, you can accept payments using a payment link. The link takes your guest to a secure Adyen payment page where they can pay with their [preferred payment method](https://docs.adyen.com/online-payments/supported-payment-methods). The payment page works across different devices and can be customized with hotel’s brand name and logo.\n\nWhen the guest opens the link in a browser, the payment form will be rendered, showing the payment methods depending on the payment methods activated for hotel’s account and the shopper country you defined. After the guest paid on the payment form, the payment will get committed on the folio.\n\n![mceclip1.png](https://apaleo.zendesk.com/hc/article_attachments/360011947759/mceclip1.png)\n\nFor more information on payment link customization, please see [How to customize your Payment Link landing page](https://apaleo.zendesk.com/hc/en-us/articles/360022147060-How-to-customize-your-Payment-Link-landing-page).\n",
      "timestamp": "2025-06-23T15:18:30.008677"
    },
    {
      "url": "https://apaleo.dev/guides/pay-integration/pay-folio.html",
      "title": "Make payments to a folio | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Make payments to a folio</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  4 minutes\n                                \n                            </p> -->\n<p>The payment flow starts when you select the options to choose the needed way of payment.</p>\n<img src=\"/assets/images/pay/folio-pay.png\">\n<h2 id=\"post-payments-by-authorization\">Post payments by authorization</h2>\n<p>Captures a specific amount from a pre-authorization and posts it to the folio. It can be used to post a booking payment when the reservation does not have a prepayment guarantee and prepayment amount. It essentially allows you to implement your own prepayment automation.</p>\n<p>For the pre-authorization, please set the respective metadata in the original payment transaction. The flow type has to be set to <code>CaptureOnly</code>. The payment will be processed asynchronously. Use the location header to poll for the status of the payment. As long as payment is pending, it reduces the number of allowed payments for the folio. The payment automatically times out after 60 minutes.</p>\n<p>You can capture a specific amount from a pre-authorization and post it to the folio by using the following API endpoint:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">POST</span><span class=\"w\"> </span><span class=\"err\">/finance/v</span><span class=\"mi\">1</span><span class=\"err\">/folios/</span><span class=\"p\">{</span><span class=\"err\">folioId</span><span class=\"p\">}</span><span class=\"err\">/payments/by-authorization</span><span class=\"w\">\n</span></code></pre></div></div>\n<p><strong>Example</strong></p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"transactionReference\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"564578124534890J\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">330</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"currency\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"EUR\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"paidCharges\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"chargeId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"BLIPKWXP-1-1-1\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">230</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<h2 id=\"post-payments-by-the-payment-account\">Post payments by the payment account</h2>\n<p>You can trigger a payment for the folio using the payment account stored on the reservation. The payment will be processed asynchronously. Use the location header to poll for the status of the payment. As long as payment is pending, it reduces the number of allowed payments for the folio. The payment automatically times out after 60 minutes.</p>\n<p>You can trigger a payment for the folio by using the following API endpoint:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">POST</span><span class=\"w\"> </span><span class=\"err\">/finance/v</span><span class=\"mi\">1</span><span class=\"err\">/folios/</span><span class=\"p\">{</span><span class=\"err\">folioId</span><span class=\"p\">}</span><span class=\"err\">/payments/by-payment-account</span><span class=\"w\">\n</span></code></pre></div></div>\n<p><strong>Example</strong></p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">230</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"currency\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"EUR\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"paidCharges\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"chargeId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"BLIPKWXP-1-1-1\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">200</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<h2 id=\"post-payments-by-payment-link\">Post payments by payment link</h2>\n<p>Creates a link to a payment form where guests can pay. You need to provide at least the paid charges with the request to enable open invoice payment methods. For some open invoice payment methods, you also need to ensure that the full billing address of the folio is set, before you create the payment link. The payment will be processed asynchronously. Use the location header to poll for the status of the payment. As long as payment is pending, it reduces the number of allowed payments for the folio.</p>\n<p>You can trigger a payment by link for the folio by using the following API endpoint:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">POST</span><span class=\"w\"> </span><span class=\"err\">/finance/v</span><span class=\"mi\">1</span><span class=\"err\">/folios/</span><span class=\"p\">{</span><span class=\"err\">folioId</span><span class=\"p\">}</span><span class=\"err\">/payments/by-link</span><span class=\"w\">\n</span></code></pre></div></div>\n<p><strong>Example</strong></p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"expiresAt\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"2021-09-10T07:13:26.1389028Z\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"countryCode\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"de\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Prepayment for the group booking apaleo Summer party\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"payerEmail\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"0chai@hemenal5.space\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">150</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"currency\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"EUR\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"paidCharges\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"chargeId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"BLIPKWXP-1-1-1\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">230</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n<h2 id=\"post-payments-by-a-terminal\">Post payments by a terminal</h2>\n<p>Trigger a terminal payment for the folio. The payment will be processed asynchronously. Use the location header to poll for the status of the payment. As long as payment is pending, it reduces the number of allowed payments for the folio. The payment automatically times out after 60 minutes.</p>\n<p>You can trigger a payment by terminal for the folio by using the following API endpoint:</p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">POST</span><span class=\"w\"> </span><span class=\"err\">/finance/v</span><span class=\"mi\">1</span><span class=\"err\">/folios/</span><span class=\"p\">{</span><span class=\"err\">folioId</span><span class=\"p\">}</span><span class=\"err\">/payments/by-terminal</span><span class=\"w\">\n</span></code></pre></div></div>\n<p><strong>Example</strong></p>\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"terminalId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"V400m-324689704\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">230</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"currency\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"EUR\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"paidCharges\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"chargeId\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"BLIPKWXP-1-1-1\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"nl\">\"amount\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">230</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n</img></section>\n</main>",
      "markdown_content": "# Make payments to a folio\n\nThe payment flow starts when you select the options to choose the needed way of payment.\n\n![](/assets/images/pay/folio-pay.png)\n\n## Post payments by authorization\n\nCaptures a specific amount from a pre-authorization and posts it to the folio. It can be used to post a booking payment when the reservation does not have a prepayment guarantee and prepayment amount. It essentially allows you to implement your own prepayment automation.\n\nFor the pre-authorization, please set the respective metadata in the original payment transaction. The flow type has to be set to `CaptureOnly`. The payment will be processed asynchronously. Use the location header to poll for the status of the payment. As long as payment is pending, it reduces the number of allowed payments for the folio. The payment automatically times out after 60 minutes.\n\nYou can capture a specific amount from a pre-authorization and post it to the folio by using the following API endpoint:\n    \n    \n    POST /finance/v1/folios/{folioId}/payments/by-authorization\n    \n\n**Example**\n    \n    \n    {\n      \"transactionReference\": \"564578124534890J\",\n      \"amount\": {\n        \"amount\": 330,\n        \"currency\": \"EUR\"\n      },\n      \"paidCharges\": [\n        {\n          \"chargeId\": \"BLIPKWXP-1-1-1\",\n          \"amount\": 230\n        }\n      ]\n    }\n    \n\n## Post payments by the payment account\n\nYou can trigger a payment for the folio using the payment account stored on the reservation. The payment will be processed asynchronously. Use the location header to poll for the status of the payment. As long as payment is pending, it reduces the number of allowed payments for the folio. The payment automatically times out after 60 minutes.\n\nYou can trigger a payment for the folio by using the following API endpoint:\n    \n    \n    POST /finance/v1/folios/{folioId}/payments/by-payment-account\n    \n\n**Example**\n    \n    \n    {\n      \"amount\": {\n        \"amount\": 230,\n        \"currency\": \"EUR\"\n      },\n      \"paidCharges\": [\n        {\n          \"chargeId\": \"BLIPKWXP-1-1-1\",\n          \"amount\": 200\n        }\n      ]\n    }\n    \n\n## Post payments by payment link\n\nCreates a link to a payment form where guests can pay. You need to provide at least the paid charges with the request to enable open invoice payment methods. For some open invoice payment methods, you also need to ensure that the full billing address of the folio is set, before you create the payment link. The payment will be processed asynchronously. Use the location header to poll for the status of the payment. As long as payment is pending, it reduces the number of allowed payments for the folio.\n\nYou can trigger a payment by link for the folio by using the following API endpoint:\n    \n    \n    POST /finance/v1/folios/{folioId}/payments/by-link\n    \n\n**Example**\n    \n    \n    {\n      \"expiresAt\": \"2021-09-10T07:13:26.1389028Z\",\n      \"countryCode\": \"de\",\n      \"description\": \"Prepayment for the group booking apaleo Summer party\",\n      \"payerEmail\": \"0chai@hemenal5.space\",\n      \"amount\": {\n        \"amount\": 150,\n        \"currency\": \"EUR\"\n      },\n      \"paidCharges\": [\n        {\n          \"chargeId\": \"BLIPKWXP-1-1-1\",\n          \"amount\": 230\n        }\n      ]\n    }\n    \n\n## Post payments by a terminal\n\nTrigger a terminal payment for the folio. The payment will be processed asynchronously. Use the location header to poll for the status of the payment. As long as payment is pending, it reduces the number of allowed payments for the folio. The payment automatically times out after 60 minutes.\n\nYou can trigger a payment by terminal for the folio by using the following API endpoint:\n    \n    \n    POST /finance/v1/folios/{folioId}/payments/by-terminal\n    \n\n**Example**\n    \n    \n    {\n      \"terminalId\": \"V400m-324689704\",\n      \"amount\": {\n        \"amount\": 230,\n        \"currency\": \"EUR\"\n      },\n      \"paidCharges\": [\n        {\n          \"chargeId\": \"BLIPKWXP-1-1-1\",\n          \"amount\": 230\n        }\n      ]\n    }\n    \n",
      "timestamp": "2025-06-23T15:18:30.734758"
    },
    {
      "url": "https://apaleo.dev/guides/pay-integration/psp-reference.html",
      "title": "Read transaction details (PSP) | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Read transaction details (PSP)</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>You can use the  <code>GET /payment/v1/transactions/{pspReference}</code> API endpoint to get details about a payment transaction.</p>\n<blockquote>\n<p>For this API, <code>payment:transactions.read</code> scope should be enabled in your app.</p>\n</blockquote>\n<p>The response would look similar to the following:</p>\n<pre><code>{\n  \"pspReference\": \"8815360785594505\",\n  \"amount\": {\n    \"currency\": \"EUR\",\n    \"value\": 190\n  },\n  \"merchantReference\": \"something\",\n  \"merchantAccountCode\": \"MyHotelCOM\",\n  \"terminalId\": \"T400-1234567\",\n  \"originalFolioId\": \"XKCDER-1-1\",\n  \"propertyId\": \"BER\",\n  \"journal\": [\n    {\n      \"pspReference\": \"8815360785594505\",\n      \"amount\": {\n        \"currency\": \"EUR\",\n        \"value\": 190\n      },\n      \"eventCode\": \"AUTHORISATION\",\n      \"dateTime\": \"2021-09-08T04:42:19.1650234Z\",\n      \"isSuccess\": false,\n      \"reason\": \"Refused\",\n      \"refusalReason\": \"05 : Do not honor\"\n    },\n    {\n      \"pspReference\": \"862623095673169A\",\n      \"amount\": {\n        \"currency\": \"EUR\",\n        \"value\": 100\n      },\n      \"eventCode\": \"CAPTURE\",\n      \"dateTime\": \"2021-09-08T04:43:19.1650286Z\",\n      \"isSuccess\": true\n    },\n    {\n      \"pspReference\": \"862623087842791E\",\n      \"amount\": {\n        \"currency\": \"EUR\",\n        \"value\": 90\n      },\n      \"eventCode\": \"CAPTURE\",\n      \"dateTime\": \"2021-09-08T04:44:19.1650295Z\",\n      \"isSuccess\": true\n    },\n    {\n      \"pspReference\": \"862623087842791E\",\n      \"amount\": {\n        \"currency\": \"EUR\",\n        \"value\": 70\n      },\n      \"eventCode\": \"CAPTURE\",\n      \"dateTime\": \"2021-09-08T04:45:19.1650302Z\",\n      \"isSuccess\": true,\n      \"reason\": \"Insufficient balance on payment\"\n    },\n    {\n      \"pspReference\": \"862623094473133B\",\n      \"amount\": {\n        \"currency\": \"EUR\",\n        \"value\": 10\n      },\n      \"eventCode\": \"REFUND\",\n      \"dateTime\": \"2021-09-08T05:14:19.1650308Z\",\n      \"isSuccess\": false\n    }\n  ]\n}\n</code></pre>\n<blockquote>\n<p>The transaction can be refused or cancelled for some reason. The refusal reason is primarily based on the authorization response code that is received from the issuer or card scheme, known as raw acquirer response. For more information about <code>refusalReason</code>, refer to <a href=\"https://docs.adyen.com/development-resources/raw-acquirer-responses\">raw acquirer responses</a>.</p>\n</blockquote>\n</section>\n</main>",
      "markdown_content": "# Read transaction details (PSP)\n\nYou can use the `GET /payment/v1/transactions/{pspReference}` API endpoint to get details about a payment transaction.\n\n> For this API, `payment:transactions.read` scope should be enabled in your app.\n\nThe response would look similar to the following:\n    \n    \n    {\n      \"pspReference\": \"8815360785594505\",\n      \"amount\": {\n        \"currency\": \"EUR\",\n        \"value\": 190\n      },\n      \"merchantReference\": \"something\",\n      \"merchantAccountCode\": \"MyHotelCOM\",\n      \"terminalId\": \"T400-1234567\",\n      \"originalFolioId\": \"XKCDER-1-1\",\n      \"propertyId\": \"BER\",\n      \"journal\": [\n        {\n          \"pspReference\": \"8815360785594505\",\n          \"amount\": {\n            \"currency\": \"EUR\",\n            \"value\": 190\n          },\n          \"eventCode\": \"AUTHORISATION\",\n          \"dateTime\": \"2021-09-08T04:42:19.1650234Z\",\n          \"isSuccess\": false,\n          \"reason\": \"Refused\",\n          \"refusalReason\": \"05 : Do not honor\"\n        },\n        {\n          \"pspReference\": \"862623095673169A\",\n          \"amount\": {\n            \"currency\": \"EUR\",\n            \"value\": 100\n          },\n          \"eventCode\": \"CAPTURE\",\n          \"dateTime\": \"2021-09-08T04:43:19.1650286Z\",\n          \"isSuccess\": true\n        },\n        {\n          \"pspReference\": \"862623087842791E\",\n          \"amount\": {\n            \"currency\": \"EUR\",\n            \"value\": 90\n          },\n          \"eventCode\": \"CAPTURE\",\n          \"dateTime\": \"2021-09-08T04:44:19.1650295Z\",\n          \"isSuccess\": true\n        },\n        {\n          \"pspReference\": \"862623087842791E\",\n          \"amount\": {\n            \"currency\": \"EUR\",\n            \"value\": 70\n          },\n          \"eventCode\": \"CAPTURE\",\n          \"dateTime\": \"2021-09-08T04:45:19.1650302Z\",\n          \"isSuccess\": true,\n          \"reason\": \"Insufficient balance on payment\"\n        },\n        {\n          \"pspReference\": \"862623094473133B\",\n          \"amount\": {\n            \"currency\": \"EUR\",\n            \"value\": 10\n          },\n          \"eventCode\": \"REFUND\",\n          \"dateTime\": \"2021-09-08T05:14:19.1650308Z\",\n          \"isSuccess\": false\n        }\n      ]\n    }\n    \n\n> The transaction can be refused or cancelled for some reason. The refusal reason is primarily based on the authorization response code that is received from the issuer or card scheme, known as raw acquirer response. For more information about `refusalReason`, refer to [raw acquirer responses](https://docs.adyen.com/development-resources/raw-acquirer-responses).\n",
      "timestamp": "2025-06-23T15:18:31.448901"
    },
    {
      "url": "https://apaleo.dev/guides/pay-integration/transaction.html",
      "title": "Read transaction details (merchant reference) | apaleo Developer Documentation",
      "html_content": "<main class=\"col-content content\">\n<section class=\"section\">\n<h1>Read transaction details (merchant reference)</h1>\n<!-- <p class=\"reading-time\" title=\"Estimated reading time\">\n                                <span class=\"reading-time-label\">: </span>\n                                \n                                \n                                  1 minute\n                                \n                            </p> -->\n<p>You can use the  <code>GET /payment/v1/transactions</code> API endpoint to get details about a payment transaction in case you don’t have a PSP reference if a guest does not click redirect button to your website or closes the transaction window. You can get details of the transaction by specifying the merchant reference.</p>\n<blockquote>\n<p>For this API, <code>payment:transactions.read</code> scope should be enabled in your app.</p>\n</blockquote>\n</section>\n</main>",
      "markdown_content": "# Read transaction details (merchant reference)\n\nYou can use the `GET /payment/v1/transactions` API endpoint to get details about a payment transaction in case you don’t have a PSP reference if a guest does not click redirect button to your website or closes the transaction window. You can get details of the transaction by specifying the merchant reference.\n\n> For this API, `payment:transactions.read` scope should be enabled in your app.\n",
      "timestamp": "2025-06-23T15:18:32.137736"
    }
  ]
}